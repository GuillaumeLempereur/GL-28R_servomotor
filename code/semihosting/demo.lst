
demo.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
08000188 l    d  .text	00000000 .text
08006ce0 l    d  .rodata	00000000 .rodata
08006ebc l    d  .ARM	00000000 .ARM
08006ec4 l    d  .init_array	00000000 .init_array
08006ecc l    d  .fini_array	00000000 .fini_array
20000000 l    d  .data	00000000 .data
200008a0 l    d  .bss	00000000 .bss
200009b0 l    d  ._user_heap_stack	00000000 ._user_heap_stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 /tmp/ccgOOnES.o
f1e0f85f l       *ABS*	00000000 BootRAM
0800175c l       .text	00000000 LoopCopyDataInit
08001754 l       .text	00000000 CopyDataInit
08001770 l       .text	00000000 LoopFillZerobss
0800176a l       .text	00000000 FillZerobss
08001782 l       .text	00000000 LoopForever
0800179c l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 crtstuff.c
08006cc4 l     O .text	00000000 __EH_FRAME_BEGIN__
08000188 l     F .text	00000000 deregister_tm_clones
080001b0 l     F .text	00000000 register_tm_clones
080001e0 l     F .text	00000000 __do_global_dtors_aux
200008a0 l       .bss	00000000 completed.6140
08006ecc l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
08000210 l     F .text	00000000 frame_dummy
200008a4 l       .bss	00000000 object.6145
08006ec8 l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0800140c l     F .text	00000018 register_fini
00000000 l    df *ABS*	00000000 syscalls.c
08001424 l     F .text	0000003a findslot
08001460 l     F .text	0000001c checkerror.part.0
200008bc l     O .bss	00000004 heap_end.5771
200008c0 l     O .bss	000000a0 openfiles
00000000 l    df *ABS*	00000000 main.c
20000960 l     O .bss	00000014 GPIO_InitStruct
00000000 l    df *ABS*	00000000 system_stm32f3xx.c
00000000 l    df *ABS*	00000000 stm32f3xx_it.c
00000000 l    df *ABS*	00000000 stm32f3xx_hal_rcc.c
00000000 l    df *ABS*	00000000 stm32f3xx_hal.c
20000974 l     O .bss	00000004 uwTick
00000000 l    df *ABS*	00000000 stm32f3xx_hal_cortex.c
00000000 l    df *ABS*	00000000 stm32f3xx_hal_gpio.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 findfp.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setbuf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0800430c l     F .text	00000078 __sbprintf
08006d3c l     O .rodata	00000010 zeroes.6775
08006d90 l     O .rodata	00000010 blanks.6774
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
080044a0 l     F .text	0000012c quorem
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 locale.c
20000840 l     O .data	00000038 lconv
20000878 l     O .data	00000020 lc_ctype_charset
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
08006eb0 l     O .rodata	0000000c p05.5266
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 vfprintf.c
080069a8 l     F .text	0000007a __sprint_r.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 /usr/lib/gcc/arm-none-eabi/4.8.2/armv7e-m/fpu/crti.o
00000000 l    df *ABS*	00000000 /usr/lib/gcc/arm-none-eabi/4.8.2/armv7e-m/fpu/crtn.o
00000000 l    df *ABS*	00000000 impure.c
20000000 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
00000400 l       *ABS*	00000000 _Min_Stack_Size
00000000 l       *UND*	00000000 HAL_DMA_Start_IT
08006ed0 l       .fini_array	00000000 __fini_array_end
200008a0 l       .bss	00000000 __bss_start__
00000000 l       *UND*	00000000 HAL_SPI_Init
00000000 l       *UND*	00000000 HAL_SPI_DeInit
200009b0 l       .bss	00000000 __bss_end__
00000200 l       *ABS*	00000000 _Min_Heap_Size
00000000 l       *UND*	00000000 HAL_DMA_Abort
00000000 l       *UND*	00000000 HAL_SPI_GetState
08006ecc l       .fini_array	00000000 __fini_array_start
00000000 l       *UND*	00000000 HAL_SPI_TransmitReceive
08006ecc l       .init_array	00000000 __init_array_end
00000000 l       *UND*	00000000 __end__
08006ec4 l       .init_array	00000000 __preinit_array_end
08006ec4 l       .init_array	00000000 __init_array_start
08006ec4 l       .init_array	00000000 __preinit_array_start
0800179c  w    F .text	00000002 RTC_Alarm_IRQHandler
0800179c  w    F .text	00000002 TIM8_TRG_COM_IRQHandler
0800179c  w    F .text	00000002 TIM8_CC_IRQHandler
08006b84 g     F .text	00000026 _isatty_r
08000bec g     F .text	00000012 .hidden __aeabi_dcmple
08000cd4 g     F .text	0000002e .hidden __gnu_uldivmod_helper
08002b24 g     F .text	00000062 _puts_r
08000b28 g     F .text	0000007a .hidden __cmpdf2
08005cb4 g     F .text	0000002a _lseek_r
080018d0 g     F .text	00000002 DebugMon_Handler
08000b28 g     F .text	0000007a .hidden __eqdf2
08000d08 g     F .text	000002ac .hidden __divdi3
08000698 g     F .text	0000005a .hidden __floatdidf
08002afc g     F .text	00000028 printf
08006c50 g     F .text	00000058 _wcrtomb_r
080021f0 g     F .text	00000064 HAL_NVIC_SetPriority
0800179c  w    F .text	00000002 TIM1_CC_IRQHandler
08002d40 g     F .text	00000020 __sseek
08002444 g     F .text	000000f6 __sinit
08006bac g     F .text	000000a4 __swbuf_r
080018c6 g     F .text	00000002 HardFault_Handler
08002af8 g     F .text	00000002 __malloc_unlock
0800179c  w    F .text	00000002 USB_HP_IRQHandler
080018d4 g     F .text	00000004 SysTick_Handler
0800179c  w    F .text	00000002 PVD_IRQHandler
08005e64 g     F .text	000000c2 memmove
0800179c  w    F .text	00000002 TAMP_STAMP_IRQHandler
08006ed0 g       *ABS*	00000000 _sidata
08002114 g     F .text	00000034 HAL_RCC_GetHCLKFreq
080018d2 g     F .text	00000002 PendSV_Handler
080018c4 g     F .text	00000002 NMI_Handler
08005f28 g     F .text	0000004c _Balloc
08006ec4 g       .ARM	00000000 __exidx_end
0800179c  w    F .text	00000002 EXTI3_IRQHandler
080020b0 g     F .text	00000064 HAL_RCC_GetSysClockFreq
08000b18 g     F .text	0000008a .hidden __gtdf2
0800242c g     F .text	0000000c __errno
08006d25 g     O .rodata	00000010 aAPBAHBPrescTable
08002148  w    F .text	00000002 HAL_MspInit
08006b5c g     F .text	00000028 _fstat_r
08002424 g     F .text	00000008 HAL_GPIO_TogglePin
200009ac g     O .bss	00000004 errno
08006cdc g       .text	00000000 _etext
200008a0 g       .bss	00000000 _sbss
08000bb4 g     F .text	00000010 .hidden __aeabi_cdcmple
08002280 g     F .text	000001a4 HAL_GPIO_Init
08000250 g     F .text	00000134 memcpy
08000ba4 g     F .text	00000020 .hidden __aeabi_cdrcmple
08002bd0 g     F .text	00000112 setvbuf
200008a0 g     O .data	00000000 .hidden __TMC_END__
08002438 g     F .text	0000000c _cleanup_r
08000628 g     F .text	00000022 .hidden __floatsidf
08000b20 g     F .text	00000082 .hidden __ltdf2
0800179c  w    F .text	00000002 USB_HP_CAN_TX_IRQHandler
0800179c  w    F .text	00000002 EXTI0_IRQHandler
0800179c  w    F .text	00000002 I2C2_EV_IRQHandler
08000c78 g     F .text	00000000 .hidden __aeabi_uldivmod
08002b88 g     F .text	00000010 puts
080021b0  w    F .text	0000001a HAL_Delay
0800179c  w    F .text	00000002 FPU_IRQHandler
2000042c g     O .data	00000004 SystemCoreClock
08006954 g     F .text	00000054 __fpclassifyd
0800179c  w    F .text	00000002 TIM1_UP_TIM16_IRQHandler
08005dc4 g     F .text	00000010 malloc
080016f4  w    F .text	0000001c _fstat
08006dc0 g     O .rodata	000000c8 __mprec_tens
080018cc g     F .text	00000002 UsageFault_Handler
08005c90 g     F .text	0000000a __locale_charset
0800179c  w    F .text	00000002 ADC1_2_IRQHandler
20000980 g     O .bss	00000004 __malloc_top_pad
080016a8 g     F .text	0000004a _swistat
20000898 g     O .data	00000004 __mb_cur_max
08000608 g     F .text	0000001e .hidden __aeabi_ui2d
08005ca8 g     F .text	0000000a _localeconv_r
080060b8 g     F .text	00000012 __i2b
0800597c g     F .text	00000314 __sfvwrite_r
20000000 g       .data	00000000 _sdata
0800179c  w    F .text	00000002 SPI1_IRQHandler
0800179c  w    F .text	00000002 CAN_SCE_IRQHandler
08000384 g     F .text	00000000 .hidden __aeabi_drsub
08002b98 g     F .text	00000026 _sbrk_r
0800179c  w    F .text	00000002 TIM6_DAC_IRQHandler
08006548 g     F .text	0000002a _read_r
08000bd8 g     F .text	00000012 .hidden __aeabi_dcmplt
08005520 g     F .text	00000082 _fclose_r
2000097c g     O .bss	00000004 __malloc_max_sbrked_mem
08002254 g     F .text	0000002c HAL_SYSTICK_Config
0800064c g     F .text	0000003a .hidden __extendsfdf2
08000948 g     F .text	000001d0 .hidden __aeabi_ddiv
0800179c  w    F .text	00000002 TIM8_UP_IRQHandler
08000390 g     F .text	00000276 .hidden __adddf3
08006ebc g       .ARM	00000000 __exidx_start
080006f4 g     F .text	00000254 .hidden __aeabi_dmul
08001710 g     F .text	0000003c _isatty
08006ce4 g     O .rodata	00000004 _global_impure_ptr
08006574 g     F .text	000003de _realloc_r
08001270 g     F .text	0000005a __libc_init_array
0800179c  w    F .text	00000002 DMA2_Channel2_IRQHandler
08000fb4 g     F .text	0000027a .hidden __udivdi3
0800179c  w    F .text	00000002 DMA1_Channel4_IRQHandler
08006a9c g     F .text	000000be _fputwc_r
08006e88 g     O .rodata	00000028 __mprec_bigtens
08000608 g     F .text	0000001e .hidden __floatunsidf
08001670 g     F .text	00000036 _sbrk
0800637c g     F .text	00000042 __mcmp
08006cc4 g     F .text	00000000 _init
0800179c  w    F .text	00000002 USART3_IRQHandler
0800123c g     F .text	00000032 __libc_fini_array
08006d05 g     O .rodata	00000010 aPredivFactorTable
200009b0 g       .bss	00000000 _ebss
0800179c  w    F .text	00000002 DMA1_Channel7_IRQHandler
0800174c  w    F .text	00000038 Reset_Handler
08006020 g     F .text	0000003c __hi0bits
08000c28 g     F .text	0000004e .hidden __fixdfsi
0800179c  w    F .text	00000002 UART5_IRQHandler
0800179c  w    F .text	00000002 ADC3_IRQHandler
08002170 g     F .text	00000024 HAL_Init
0800179c  w    F .text	00000002 TIM4_IRQHandler
08000390 g     F .text	00000276 .hidden __aeabi_dadd
08000b20 g     F .text	00000082 .hidden __ledf2
0800179c  w    F .text	00000002 CAN_RX1_IRQHandler
0800179c  w    F .text	00000002 DMA2_Channel1_IRQHandler
08006220 g     F .text	0000009e __pow5mult
08000688 g     F .text	0000006a .hidden __aeabi_ul2d
00000000  w      *UND*	00000000 __deregister_frame_info
200009b0 g       ._user_heap_stack	00000000 end
0800179c  w    F .text	00000002 I2C1_EV_IRQHandler
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
08000c14 g     F .text	00000012 .hidden __aeabi_dcmpgt
0800179c  w    F .text	00000002 DMA1_Channel6_IRQHandler
0800179c  w    F .text	00000002 UART4_IRQHandler
0800179c  w    F .text	00000002 DMA2_Channel4_IRQHandler
0800253c g     F .text	00000002 __sfp_lock_acquire
08005dd4 g     F .text	00000090 memchr
080057e0 g     F .text	0000019c _free_r
0800179c  w    F .text	00000002 TIM3_IRQHandler
0800179c  w    F .text	00000002 RCC_IRQHandler
08005c9c g     F .text	0000000c __locale_mb_cur_max
08000c00 g     F .text	00000012 .hidden __aeabi_dcmpge
0800179c  w    F .text	00000002 DMA1_Channel1_IRQHandler
0800038c g     F .text	0000027a .hidden __aeabi_dsub
0800179c g       .text	00000002 Default_Handler
2000083c g     O .data	00000004 __malloc_sbrk_base
0800179c  w    F .text	00000002 USBWakeUp_RMP_IRQHandler
08000688 g     F .text	0000006a .hidden __floatundidf
08001578 g     F .text	00000004 _lseek
080062c0 g     F .text	000000bc __lshift
0800179c  w    F .text	00000002 EXTI15_10_IRQHandler
08001360 g     F .text	000000ac __register_exitproc
080060cc g     F .text	00000152 __multiply
08001e78 g     F .text	00000238 HAL_RCC_ClockConfig
080021cc g     F .text	00000024 HAL_NVIC_SetPriorityGrouping
20000984 g     O .bss	00000028 __malloc_current_mallinfo
08006494 g     F .text	000000b2 __d2b
0800179c  w    F .text	00000002 TIM7_IRQHandler
08004478 g     F .text	00000026 _close_r
08006d15 g     O .rodata	00000010 aPLLMULFactorTable
08000628 g     F .text	00000022 .hidden __aeabi_i2d
080043b0 g     F .text	000000c6 __swsetup_r
08000d04  w    F .text	00000002 .hidden __aeabi_ldiv0
0800179c  w    F .text	00000002 EXTI9_5_IRQHandler
08000948 g     F .text	000001d0 .hidden __divdf3
0800179c  w    F .text	00000002 RTC_WKUP_IRQHandler
20000430 g     O .data	00000408 __malloc_av_
080006f4 g     F .text	00000254 .hidden __muldf3
08002ce4 g     F .text	00000022 __sread
080021a4  w    F .text	0000000c HAL_GetTick
08002af4 g     F .text	00000002 __malloc_lock
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
08005710 g     F .text	0000002c _fflush_r
08006a3c g     F .text	00000060 _calloc_r
0800179c  w    F .text	00000002 SPI2_IRQHandler
0800179c  w    F .text	00000002 USB_LP_CAN_RX0_IRQHandler
080012cc g     F .text	00000094 memset
080018c8 g     F .text	00000002 MemManage_Handler
080017a0 g     F .text	000000bc main
20000978 g     O .bss	00000004 __malloc_max_total_mem
08007770 g       *ABS*	00000000 _siccmram
080018ce g     F .text	00000002 SVC_Handler
08002d60 g     F .text	00000008 __sclose
0800179c  w    F .text	00000002 DMA2_Channel5_IRQHandler
080055a4 g     F .text	00000010 fclose
080045d0 g     F .text	00000f4e _dtoa_r
08002590 g     F .text	00000562 _malloc_r
08006ca8 g     F .text	0000001a __ascii_wctomb
08000698 g     F .text	0000005a .hidden __aeabi_l2d
08002544 g     F .text	0000004a _fwalk
00000000  w      *UND*	00000000 __libc_fini
0800179c  w    F .text	00000002 DMA1_Channel5_IRQHandler
0800179c  w    F .text	00000002 USB_LP_IRQHandler
0800157c g     F .text	0000002a _swiwrite
0800179c  w    F .text	00000002 EXTI4_IRQHandler
0800573c g     F .text	000000a2 _malloc_trim_r
0800185c g     F .text	00000068 SystemInit
08000b28 g     F .text	0000007a .hidden __nedf2
08006cd0 g     F .text	00000000 _fini
0800179c  w    F .text	00000002 TIM1_TRG_COM_TIM17_IRQHandler
080014e0 g     F .text	00000098 _swilseek
08001230 g     F .text	0000000c atexit
08004384 g     F .text	0000002a _write_r
10000000 g       .data	00000000 _eccmram
0800179c  w    F .text	00000002 DMA1_Channel3_IRQHandler
0800214a  w    F .text	00000024 HAL_InitTick
20000428 g     O .data	00000004 _impure_ptr
080055b4 g     F .text	0000015a __sflush_r
08002194  w    F .text	00000010 HAL_IncTick
0800179c  w    F .text	00000002 ADC4_IRQHandler
0800179c  w    F .text	00000002 WWDG_IRQHandler
0800179c  w    F .text	00000002 TIM2_IRQHandler
0800179c  w    F .text	00000002 COMP7_IRQHandler
20009fff g       *ABS*	00000000 _estack
0800179c  w    F .text	00000002 COMP1_2_3_IRQHandler
0800179c  w    F .text	00000002 EXTI1_IRQHandler
08000bc4 g     F .text	00000012 .hidden __aeabi_dcmpeq
080015a8 g     F .text	00000056 _write
200008a0 g       .data	00000000 _edata
10000000 g       .data	00000000 _sccmram
0800179c  w    F .text	00000002 USART2_IRQHandler
0800179c  w    F .text	00000002 COMP4_5_6_IRQHandler
08002d08 g     F .text	00000038 __swrite
080018d8 g     F .text	000005a0 HAL_RCC_OscConfig
20000838 g     O .data	00000004 __malloc_trim_threshold
08000000 g     O .isr_vector	00000000 g_pfnVectors
080063c0 g     F .text	000000d2 __mdiff
08000c28 g     F .text	0000004e .hidden __aeabi_d2iz
08002bc0 g     F .text	00000010 setbuf
0800179c  w    F .text	00000002 I2C2_ER_IRQHandler
0800179c  w    F .text	00000002 DMA1_Channel2_IRQHandler
08002540 g     F .text	00000002 __sfp_lock_release
0800179c  w    F .text	00000002 TIM8_BRK_IRQHandler
080014a8 g     F .text	00000036 _read
08000d04  w    F .text	00000002 .hidden __aeabi_idiv0
0800179c  w    F .text	00000002 FLASH_IRQHandler
080018ca g     F .text	00000002 BusFault_Handler
0800179c  w    F .text	00000002 USART1_IRQHandler
08005ce0 g     F .text	000000e4 __smakebuf_r
08002d68 g     F .text	0000005e strlen
0800179c  w    F .text	00000002 SPI3_IRQHandler
08000bb4 g     F .text	00000010 .hidden __aeabi_cdcmpeq
08000b18 g     F .text	0000008a .hidden __gedf2
2000089c g     O .data	00000004 __wctomb
08000ca4 g     F .text	0000002e .hidden __gnu_ldivmod_helper
0800179c  w    F .text	00000002 I2C1_ER_IRQHandler
08006a24 g     F .text	00000018 __sprint_r
0800064c g     F .text	0000003a .hidden __aeabi_f2d
00000000  w      *UND*	00000000 _Jv_RegisterClasses
0800038c g     F .text	0000027a .hidden __subdf3
08002dc8 g     F .text	00001542 _vfprintf_r
0800605c g     F .text	0000005a __lo0bits
00000000  w      *UND*	00000000 __register_frame_info
0800179c  w    F .text	00000002 USBWakeUp_IRQHandler
0800147c g     F .text	0000002a _swiread
08001600 g     F .text	0000006e _close
0800179c  w    F .text	00000002 DMA2_Channel3_IRQHandler
08005f88 g     F .text	00000096 __multadd
08005f74 g     F .text	00000012 _Bfree
0800179c  w    F .text	00000002 EXTI2_TSC_IRQHandler
0800179c  w    F .text	00000002 TIM1_BRK_TIM15_IRQHandler



Disassembly of section .text:

08000188 <deregister_tm_clones>:
 8000188:	b508      	push	{r3, lr}
 800018a:	f640 00a0 	movw	r0, #2208	; 0x8a0
 800018e:	4b07      	ldr	r3, [pc, #28]	; (80001ac <deregister_tm_clones+0x24>)
 8000190:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8000194:	1a1b      	subs	r3, r3, r0
 8000196:	2b06      	cmp	r3, #6
 8000198:	d800      	bhi.n	800019c <deregister_tm_clones+0x14>
 800019a:	bd08      	pop	{r3, pc}
 800019c:	f240 0300 	movw	r3, #0
 80001a0:	f2c0 0300 	movt	r3, #0
 80001a4:	2b00      	cmp	r3, #0
 80001a6:	d0f8      	beq.n	800019a <deregister_tm_clones+0x12>
 80001a8:	4798      	blx	r3
 80001aa:	e7f6      	b.n	800019a <deregister_tm_clones+0x12>
 80001ac:	200008a3 	.word	0x200008a3

080001b0 <register_tm_clones>:
 80001b0:	b508      	push	{r3, lr}
 80001b2:	f640 00a0 	movw	r0, #2208	; 0x8a0
 80001b6:	f640 03a0 	movw	r3, #2208	; 0x8a0
 80001ba:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80001be:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80001c2:	1a1b      	subs	r3, r3, r0
 80001c4:	109b      	asrs	r3, r3, #2
 80001c6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80001ca:	1059      	asrs	r1, r3, #1
 80001cc:	d100      	bne.n	80001d0 <register_tm_clones+0x20>
 80001ce:	bd08      	pop	{r3, pc}
 80001d0:	f240 0200 	movw	r2, #0
 80001d4:	f2c0 0200 	movt	r2, #0
 80001d8:	2a00      	cmp	r2, #0
 80001da:	d0f8      	beq.n	80001ce <register_tm_clones+0x1e>
 80001dc:	4790      	blx	r2
 80001de:	e7f6      	b.n	80001ce <register_tm_clones+0x1e>

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	f640 04a0 	movw	r4, #2208	; 0x8a0
 80001e6:	f2c2 0400 	movt	r4, #8192	; 0x2000
 80001ea:	7823      	ldrb	r3, [r4, #0]
 80001ec:	b973      	cbnz	r3, 800020c <__do_global_dtors_aux+0x2c>
 80001ee:	f7ff ffcb 	bl	8000188 <deregister_tm_clones>
 80001f2:	f240 0300 	movw	r3, #0
 80001f6:	f2c0 0300 	movt	r3, #0
 80001fa:	b12b      	cbz	r3, 8000208 <__do_global_dtors_aux+0x28>
 80001fc:	f646 40c4 	movw	r0, #27844	; 0x6cc4
 8000200:	f6c0 0000 	movt	r0, #2048	; 0x800
 8000204:	f3af 8000 	nop.w
 8000208:	2301      	movs	r3, #1
 800020a:	7023      	strb	r3, [r4, #0]
 800020c:	bd10      	pop	{r4, pc}
 800020e:	bf00      	nop

08000210 <frame_dummy>:
 8000210:	b508      	push	{r3, lr}
 8000212:	f240 0300 	movw	r3, #0
 8000216:	f2c0 0300 	movt	r3, #0
 800021a:	b14b      	cbz	r3, 8000230 <frame_dummy+0x20>
 800021c:	f646 40c4 	movw	r0, #27844	; 0x6cc4
 8000220:	f640 01a4 	movw	r1, #2212	; 0x8a4
 8000224:	f6c0 0000 	movt	r0, #2048	; 0x800
 8000228:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800022c:	f3af 8000 	nop.w
 8000230:	f640 00a0 	movw	r0, #2208	; 0x8a0
 8000234:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8000238:	6803      	ldr	r3, [r0, #0]
 800023a:	b12b      	cbz	r3, 8000248 <frame_dummy+0x38>
 800023c:	f240 0300 	movw	r3, #0
 8000240:	f2c0 0300 	movt	r3, #0
 8000244:	b103      	cbz	r3, 8000248 <frame_dummy+0x38>
 8000246:	4798      	blx	r3
 8000248:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800024c:	e7b0      	b.n	80001b0 <register_tm_clones>
 800024e:	bf00      	nop

08000250 <memcpy>:
 8000250:	4684      	mov	ip, r0
 8000252:	ea41 0300 	orr.w	r3, r1, r0
 8000256:	f013 0303 	ands.w	r3, r3, #3
 800025a:	d16d      	bne.n	8000338 <memcpy+0xe8>
 800025c:	3a40      	subs	r2, #64	; 0x40
 800025e:	d341      	bcc.n	80002e4 <memcpy+0x94>
 8000260:	f851 3b04 	ldr.w	r3, [r1], #4
 8000264:	f840 3b04 	str.w	r3, [r0], #4
 8000268:	f851 3b04 	ldr.w	r3, [r1], #4
 800026c:	f840 3b04 	str.w	r3, [r0], #4
 8000270:	f851 3b04 	ldr.w	r3, [r1], #4
 8000274:	f840 3b04 	str.w	r3, [r0], #4
 8000278:	f851 3b04 	ldr.w	r3, [r1], #4
 800027c:	f840 3b04 	str.w	r3, [r0], #4
 8000280:	f851 3b04 	ldr.w	r3, [r1], #4
 8000284:	f840 3b04 	str.w	r3, [r0], #4
 8000288:	f851 3b04 	ldr.w	r3, [r1], #4
 800028c:	f840 3b04 	str.w	r3, [r0], #4
 8000290:	f851 3b04 	ldr.w	r3, [r1], #4
 8000294:	f840 3b04 	str.w	r3, [r0], #4
 8000298:	f851 3b04 	ldr.w	r3, [r1], #4
 800029c:	f840 3b04 	str.w	r3, [r0], #4
 80002a0:	f851 3b04 	ldr.w	r3, [r1], #4
 80002a4:	f840 3b04 	str.w	r3, [r0], #4
 80002a8:	f851 3b04 	ldr.w	r3, [r1], #4
 80002ac:	f840 3b04 	str.w	r3, [r0], #4
 80002b0:	f851 3b04 	ldr.w	r3, [r1], #4
 80002b4:	f840 3b04 	str.w	r3, [r0], #4
 80002b8:	f851 3b04 	ldr.w	r3, [r1], #4
 80002bc:	f840 3b04 	str.w	r3, [r0], #4
 80002c0:	f851 3b04 	ldr.w	r3, [r1], #4
 80002c4:	f840 3b04 	str.w	r3, [r0], #4
 80002c8:	f851 3b04 	ldr.w	r3, [r1], #4
 80002cc:	f840 3b04 	str.w	r3, [r0], #4
 80002d0:	f851 3b04 	ldr.w	r3, [r1], #4
 80002d4:	f840 3b04 	str.w	r3, [r0], #4
 80002d8:	f851 3b04 	ldr.w	r3, [r1], #4
 80002dc:	f840 3b04 	str.w	r3, [r0], #4
 80002e0:	3a40      	subs	r2, #64	; 0x40
 80002e2:	d2bd      	bcs.n	8000260 <memcpy+0x10>
 80002e4:	3230      	adds	r2, #48	; 0x30
 80002e6:	d311      	bcc.n	800030c <memcpy+0xbc>
 80002e8:	f851 3b04 	ldr.w	r3, [r1], #4
 80002ec:	f840 3b04 	str.w	r3, [r0], #4
 80002f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80002f4:	f840 3b04 	str.w	r3, [r0], #4
 80002f8:	f851 3b04 	ldr.w	r3, [r1], #4
 80002fc:	f840 3b04 	str.w	r3, [r0], #4
 8000300:	f851 3b04 	ldr.w	r3, [r1], #4
 8000304:	f840 3b04 	str.w	r3, [r0], #4
 8000308:	3a10      	subs	r2, #16
 800030a:	d2ed      	bcs.n	80002e8 <memcpy+0x98>
 800030c:	320c      	adds	r2, #12
 800030e:	d305      	bcc.n	800031c <memcpy+0xcc>
 8000310:	f851 3b04 	ldr.w	r3, [r1], #4
 8000314:	f840 3b04 	str.w	r3, [r0], #4
 8000318:	3a04      	subs	r2, #4
 800031a:	d2f9      	bcs.n	8000310 <memcpy+0xc0>
 800031c:	3204      	adds	r2, #4
 800031e:	d008      	beq.n	8000332 <memcpy+0xe2>
 8000320:	07d2      	lsls	r2, r2, #31
 8000322:	bf1c      	itt	ne
 8000324:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8000328:	f800 3b01 	strbne.w	r3, [r0], #1
 800032c:	d301      	bcc.n	8000332 <memcpy+0xe2>
 800032e:	880b      	ldrh	r3, [r1, #0]
 8000330:	8003      	strh	r3, [r0, #0]
 8000332:	4660      	mov	r0, ip
 8000334:	4770      	bx	lr
 8000336:	bf00      	nop
 8000338:	2a08      	cmp	r2, #8
 800033a:	d313      	bcc.n	8000364 <memcpy+0x114>
 800033c:	078b      	lsls	r3, r1, #30
 800033e:	d08d      	beq.n	800025c <memcpy+0xc>
 8000340:	f010 0303 	ands.w	r3, r0, #3
 8000344:	d08a      	beq.n	800025c <memcpy+0xc>
 8000346:	f1c3 0304 	rsb	r3, r3, #4
 800034a:	1ad2      	subs	r2, r2, r3
 800034c:	07db      	lsls	r3, r3, #31
 800034e:	bf1c      	itt	ne
 8000350:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8000354:	f800 3b01 	strbne.w	r3, [r0], #1
 8000358:	d380      	bcc.n	800025c <memcpy+0xc>
 800035a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800035e:	f820 3b02 	strh.w	r3, [r0], #2
 8000362:	e77b      	b.n	800025c <memcpy+0xc>
 8000364:	3a04      	subs	r2, #4
 8000366:	d3d9      	bcc.n	800031c <memcpy+0xcc>
 8000368:	3a01      	subs	r2, #1
 800036a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800036e:	f800 3b01 	strb.w	r3, [r0], #1
 8000372:	d2f9      	bcs.n	8000368 <memcpy+0x118>
 8000374:	780b      	ldrb	r3, [r1, #0]
 8000376:	7003      	strb	r3, [r0, #0]
 8000378:	784b      	ldrb	r3, [r1, #1]
 800037a:	7043      	strb	r3, [r0, #1]
 800037c:	788b      	ldrb	r3, [r1, #2]
 800037e:	7083      	strb	r3, [r0, #2]
 8000380:	4660      	mov	r0, ip
 8000382:	4770      	bx	lr

08000384 <__aeabi_drsub>:
 8000384:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000388:	e002      	b.n	8000390 <__adddf3>
 800038a:	bf00      	nop

0800038c <__aeabi_dsub>:
 800038c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000390 <__adddf3>:
 8000390:	b530      	push	{r4, r5, lr}
 8000392:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000396:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800039a:	ea94 0f05 	teq	r4, r5
 800039e:	bf08      	it	eq
 80003a0:	ea90 0f02 	teqeq	r0, r2
 80003a4:	bf1f      	itttt	ne
 80003a6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80003aa:	ea55 0c02 	orrsne.w	ip, r5, r2
 80003ae:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80003b2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003b6:	f000 80e2 	beq.w	800057e <__adddf3+0x1ee>
 80003ba:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80003be:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80003c2:	bfb8      	it	lt
 80003c4:	426d      	neglt	r5, r5
 80003c6:	dd0c      	ble.n	80003e2 <__adddf3+0x52>
 80003c8:	442c      	add	r4, r5
 80003ca:	ea80 0202 	eor.w	r2, r0, r2
 80003ce:	ea81 0303 	eor.w	r3, r1, r3
 80003d2:	ea82 0000 	eor.w	r0, r2, r0
 80003d6:	ea83 0101 	eor.w	r1, r3, r1
 80003da:	ea80 0202 	eor.w	r2, r0, r2
 80003de:	ea81 0303 	eor.w	r3, r1, r3
 80003e2:	2d36      	cmp	r5, #54	; 0x36
 80003e4:	bf88      	it	hi
 80003e6:	bd30      	pophi	{r4, r5, pc}
 80003e8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003ec:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003f0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003f4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003f8:	d002      	beq.n	8000400 <__adddf3+0x70>
 80003fa:	4240      	negs	r0, r0
 80003fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000400:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000404:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000408:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800040c:	d002      	beq.n	8000414 <__adddf3+0x84>
 800040e:	4252      	negs	r2, r2
 8000410:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000414:	ea94 0f05 	teq	r4, r5
 8000418:	f000 80a7 	beq.w	800056a <__adddf3+0x1da>
 800041c:	f1a4 0401 	sub.w	r4, r4, #1
 8000420:	f1d5 0e20 	rsbs	lr, r5, #32
 8000424:	db0d      	blt.n	8000442 <__adddf3+0xb2>
 8000426:	fa02 fc0e 	lsl.w	ip, r2, lr
 800042a:	fa22 f205 	lsr.w	r2, r2, r5
 800042e:	1880      	adds	r0, r0, r2
 8000430:	f141 0100 	adc.w	r1, r1, #0
 8000434:	fa03 f20e 	lsl.w	r2, r3, lr
 8000438:	1880      	adds	r0, r0, r2
 800043a:	fa43 f305 	asr.w	r3, r3, r5
 800043e:	4159      	adcs	r1, r3
 8000440:	e00e      	b.n	8000460 <__adddf3+0xd0>
 8000442:	f1a5 0520 	sub.w	r5, r5, #32
 8000446:	f10e 0e20 	add.w	lr, lr, #32
 800044a:	2a01      	cmp	r2, #1
 800044c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000450:	bf28      	it	cs
 8000452:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000456:	fa43 f305 	asr.w	r3, r3, r5
 800045a:	18c0      	adds	r0, r0, r3
 800045c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	d507      	bpl.n	8000476 <__adddf3+0xe6>
 8000466:	f04f 0e00 	mov.w	lr, #0
 800046a:	f1dc 0c00 	rsbs	ip, ip, #0
 800046e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000472:	eb6e 0101 	sbc.w	r1, lr, r1
 8000476:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800047a:	d31b      	bcc.n	80004b4 <__adddf3+0x124>
 800047c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000480:	d30c      	bcc.n	800049c <__adddf3+0x10c>
 8000482:	0849      	lsrs	r1, r1, #1
 8000484:	ea5f 0030 	movs.w	r0, r0, rrx
 8000488:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800048c:	f104 0401 	add.w	r4, r4, #1
 8000490:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000494:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000498:	f080 809a 	bcs.w	80005d0 <__adddf3+0x240>
 800049c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80004a0:	bf08      	it	eq
 80004a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80004a6:	f150 0000 	adcs.w	r0, r0, #0
 80004aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80004ae:	ea41 0105 	orr.w	r1, r1, r5
 80004b2:	bd30      	pop	{r4, r5, pc}
 80004b4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80004b8:	4140      	adcs	r0, r0
 80004ba:	eb41 0101 	adc.w	r1, r1, r1
 80004be:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80004c2:	f1a4 0401 	sub.w	r4, r4, #1
 80004c6:	d1e9      	bne.n	800049c <__adddf3+0x10c>
 80004c8:	f091 0f00 	teq	r1, #0
 80004cc:	bf04      	itt	eq
 80004ce:	4601      	moveq	r1, r0
 80004d0:	2000      	moveq	r0, #0
 80004d2:	fab1 f381 	clz	r3, r1
 80004d6:	bf08      	it	eq
 80004d8:	3320      	addeq	r3, #32
 80004da:	f1a3 030b 	sub.w	r3, r3, #11
 80004de:	f1b3 0220 	subs.w	r2, r3, #32
 80004e2:	da0c      	bge.n	80004fe <__adddf3+0x16e>
 80004e4:	320c      	adds	r2, #12
 80004e6:	dd08      	ble.n	80004fa <__adddf3+0x16a>
 80004e8:	f102 0c14 	add.w	ip, r2, #20
 80004ec:	f1c2 020c 	rsb	r2, r2, #12
 80004f0:	fa01 f00c 	lsl.w	r0, r1, ip
 80004f4:	fa21 f102 	lsr.w	r1, r1, r2
 80004f8:	e00c      	b.n	8000514 <__adddf3+0x184>
 80004fa:	f102 0214 	add.w	r2, r2, #20
 80004fe:	bfd8      	it	le
 8000500:	f1c2 0c20 	rsble	ip, r2, #32
 8000504:	fa01 f102 	lsl.w	r1, r1, r2
 8000508:	fa20 fc0c 	lsr.w	ip, r0, ip
 800050c:	bfdc      	itt	le
 800050e:	ea41 010c 	orrle.w	r1, r1, ip
 8000512:	4090      	lslle	r0, r2
 8000514:	1ae4      	subs	r4, r4, r3
 8000516:	bfa2      	ittt	ge
 8000518:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800051c:	4329      	orrge	r1, r5
 800051e:	bd30      	popge	{r4, r5, pc}
 8000520:	ea6f 0404 	mvn.w	r4, r4
 8000524:	3c1f      	subs	r4, #31
 8000526:	da1c      	bge.n	8000562 <__adddf3+0x1d2>
 8000528:	340c      	adds	r4, #12
 800052a:	dc0e      	bgt.n	800054a <__adddf3+0x1ba>
 800052c:	f104 0414 	add.w	r4, r4, #20
 8000530:	f1c4 0220 	rsb	r2, r4, #32
 8000534:	fa20 f004 	lsr.w	r0, r0, r4
 8000538:	fa01 f302 	lsl.w	r3, r1, r2
 800053c:	ea40 0003 	orr.w	r0, r0, r3
 8000540:	fa21 f304 	lsr.w	r3, r1, r4
 8000544:	ea45 0103 	orr.w	r1, r5, r3
 8000548:	bd30      	pop	{r4, r5, pc}
 800054a:	f1c4 040c 	rsb	r4, r4, #12
 800054e:	f1c4 0220 	rsb	r2, r4, #32
 8000552:	fa20 f002 	lsr.w	r0, r0, r2
 8000556:	fa01 f304 	lsl.w	r3, r1, r4
 800055a:	ea40 0003 	orr.w	r0, r0, r3
 800055e:	4629      	mov	r1, r5
 8000560:	bd30      	pop	{r4, r5, pc}
 8000562:	fa21 f004 	lsr.w	r0, r1, r4
 8000566:	4629      	mov	r1, r5
 8000568:	bd30      	pop	{r4, r5, pc}
 800056a:	f094 0f00 	teq	r4, #0
 800056e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000572:	bf06      	itte	eq
 8000574:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000578:	3401      	addeq	r4, #1
 800057a:	3d01      	subne	r5, #1
 800057c:	e74e      	b.n	800041c <__adddf3+0x8c>
 800057e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000582:	bf18      	it	ne
 8000584:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000588:	d029      	beq.n	80005de <__adddf3+0x24e>
 800058a:	ea94 0f05 	teq	r4, r5
 800058e:	bf08      	it	eq
 8000590:	ea90 0f02 	teqeq	r0, r2
 8000594:	d005      	beq.n	80005a2 <__adddf3+0x212>
 8000596:	ea54 0c00 	orrs.w	ip, r4, r0
 800059a:	bf04      	itt	eq
 800059c:	4619      	moveq	r1, r3
 800059e:	4610      	moveq	r0, r2
 80005a0:	bd30      	pop	{r4, r5, pc}
 80005a2:	ea91 0f03 	teq	r1, r3
 80005a6:	bf1e      	ittt	ne
 80005a8:	2100      	movne	r1, #0
 80005aa:	2000      	movne	r0, #0
 80005ac:	bd30      	popne	{r4, r5, pc}
 80005ae:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80005b2:	d105      	bne.n	80005c0 <__adddf3+0x230>
 80005b4:	0040      	lsls	r0, r0, #1
 80005b6:	4149      	adcs	r1, r1
 80005b8:	bf28      	it	cs
 80005ba:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80005be:	bd30      	pop	{r4, r5, pc}
 80005c0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005c4:	bf3c      	itt	cc
 80005c6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005ca:	bd30      	popcc	{r4, r5, pc}
 80005cc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005d0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005d4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005d8:	f04f 0000 	mov.w	r0, #0
 80005dc:	bd30      	pop	{r4, r5, pc}
 80005de:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005e2:	bf1a      	itte	ne
 80005e4:	4619      	movne	r1, r3
 80005e6:	4610      	movne	r0, r2
 80005e8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005ec:	bf1c      	itt	ne
 80005ee:	460b      	movne	r3, r1
 80005f0:	4602      	movne	r2, r0
 80005f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005f6:	bf06      	itte	eq
 80005f8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005fc:	ea91 0f03 	teqeq	r1, r3
 8000600:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000604:	bd30      	pop	{r4, r5, pc}
 8000606:	bf00      	nop

08000608 <__aeabi_ui2d>:
 8000608:	f090 0f00 	teq	r0, #0
 800060c:	bf04      	itt	eq
 800060e:	2100      	moveq	r1, #0
 8000610:	4770      	bxeq	lr
 8000612:	b530      	push	{r4, r5, lr}
 8000614:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000618:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800061c:	f04f 0500 	mov.w	r5, #0
 8000620:	f04f 0100 	mov.w	r1, #0
 8000624:	e750      	b.n	80004c8 <__adddf3+0x138>
 8000626:	bf00      	nop

08000628 <__aeabi_i2d>:
 8000628:	f090 0f00 	teq	r0, #0
 800062c:	bf04      	itt	eq
 800062e:	2100      	moveq	r1, #0
 8000630:	4770      	bxeq	lr
 8000632:	b530      	push	{r4, r5, lr}
 8000634:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000638:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800063c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000640:	bf48      	it	mi
 8000642:	4240      	negmi	r0, r0
 8000644:	f04f 0100 	mov.w	r1, #0
 8000648:	e73e      	b.n	80004c8 <__adddf3+0x138>
 800064a:	bf00      	nop

0800064c <__aeabi_f2d>:
 800064c:	0042      	lsls	r2, r0, #1
 800064e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000652:	ea4f 0131 	mov.w	r1, r1, rrx
 8000656:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800065a:	bf1f      	itttt	ne
 800065c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000660:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000664:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000668:	4770      	bxne	lr
 800066a:	f092 0f00 	teq	r2, #0
 800066e:	bf14      	ite	ne
 8000670:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000674:	4770      	bxeq	lr
 8000676:	b530      	push	{r4, r5, lr}
 8000678:	f44f 7460 	mov.w	r4, #896	; 0x380
 800067c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000680:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000684:	e720      	b.n	80004c8 <__adddf3+0x138>
 8000686:	bf00      	nop

08000688 <__aeabi_ul2d>:
 8000688:	ea50 0201 	orrs.w	r2, r0, r1
 800068c:	bf08      	it	eq
 800068e:	4770      	bxeq	lr
 8000690:	b530      	push	{r4, r5, lr}
 8000692:	f04f 0500 	mov.w	r5, #0
 8000696:	e00a      	b.n	80006ae <__aeabi_l2d+0x16>

08000698 <__aeabi_l2d>:
 8000698:	ea50 0201 	orrs.w	r2, r0, r1
 800069c:	bf08      	it	eq
 800069e:	4770      	bxeq	lr
 80006a0:	b530      	push	{r4, r5, lr}
 80006a2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80006a6:	d502      	bpl.n	80006ae <__aeabi_l2d+0x16>
 80006a8:	4240      	negs	r0, r0
 80006aa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006ae:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006b2:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006b6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80006ba:	f43f aedc 	beq.w	8000476 <__adddf3+0xe6>
 80006be:	f04f 0203 	mov.w	r2, #3
 80006c2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006c6:	bf18      	it	ne
 80006c8:	3203      	addne	r2, #3
 80006ca:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006ce:	bf18      	it	ne
 80006d0:	3203      	addne	r2, #3
 80006d2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006d6:	f1c2 0320 	rsb	r3, r2, #32
 80006da:	fa00 fc03 	lsl.w	ip, r0, r3
 80006de:	fa20 f002 	lsr.w	r0, r0, r2
 80006e2:	fa01 fe03 	lsl.w	lr, r1, r3
 80006e6:	ea40 000e 	orr.w	r0, r0, lr
 80006ea:	fa21 f102 	lsr.w	r1, r1, r2
 80006ee:	4414      	add	r4, r2
 80006f0:	e6c1      	b.n	8000476 <__adddf3+0xe6>
 80006f2:	bf00      	nop

080006f4 <__aeabi_dmul>:
 80006f4:	b570      	push	{r4, r5, r6, lr}
 80006f6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80006fa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80006fe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000702:	bf1d      	ittte	ne
 8000704:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000708:	ea94 0f0c 	teqne	r4, ip
 800070c:	ea95 0f0c 	teqne	r5, ip
 8000710:	f000 f8de 	bleq	80008d0 <__aeabi_dmul+0x1dc>
 8000714:	442c      	add	r4, r5
 8000716:	ea81 0603 	eor.w	r6, r1, r3
 800071a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800071e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000722:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000726:	bf18      	it	ne
 8000728:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 800072c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000730:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000734:	d038      	beq.n	80007a8 <__aeabi_dmul+0xb4>
 8000736:	fba0 ce02 	umull	ip, lr, r0, r2
 800073a:	f04f 0500 	mov.w	r5, #0
 800073e:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000742:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000746:	fbe0 e503 	umlal	lr, r5, r0, r3
 800074a:	f04f 0600 	mov.w	r6, #0
 800074e:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000752:	f09c 0f00 	teq	ip, #0
 8000756:	bf18      	it	ne
 8000758:	f04e 0e01 	orrne.w	lr, lr, #1
 800075c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000760:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000764:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000768:	d204      	bcs.n	8000774 <__aeabi_dmul+0x80>
 800076a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800076e:	416d      	adcs	r5, r5
 8000770:	eb46 0606 	adc.w	r6, r6, r6
 8000774:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000778:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 800077c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000780:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000784:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000788:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800078c:	bf88      	it	hi
 800078e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000792:	d81e      	bhi.n	80007d2 <__aeabi_dmul+0xde>
 8000794:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000798:	bf08      	it	eq
 800079a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800079e:	f150 0000 	adcs.w	r0, r0, #0
 80007a2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80007a6:	bd70      	pop	{r4, r5, r6, pc}
 80007a8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80007ac:	ea46 0101 	orr.w	r1, r6, r1
 80007b0:	ea40 0002 	orr.w	r0, r0, r2
 80007b4:	ea81 0103 	eor.w	r1, r1, r3
 80007b8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80007bc:	bfc2      	ittt	gt
 80007be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80007c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80007c6:	bd70      	popgt	{r4, r5, r6, pc}
 80007c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80007cc:	f04f 0e00 	mov.w	lr, #0
 80007d0:	3c01      	subs	r4, #1
 80007d2:	f300 80ab 	bgt.w	800092c <__aeabi_dmul+0x238>
 80007d6:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80007da:	bfde      	ittt	le
 80007dc:	2000      	movle	r0, #0
 80007de:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80007e2:	bd70      	pople	{r4, r5, r6, pc}
 80007e4:	f1c4 0400 	rsb	r4, r4, #0
 80007e8:	3c20      	subs	r4, #32
 80007ea:	da35      	bge.n	8000858 <__aeabi_dmul+0x164>
 80007ec:	340c      	adds	r4, #12
 80007ee:	dc1b      	bgt.n	8000828 <__aeabi_dmul+0x134>
 80007f0:	f104 0414 	add.w	r4, r4, #20
 80007f4:	f1c4 0520 	rsb	r5, r4, #32
 80007f8:	fa00 f305 	lsl.w	r3, r0, r5
 80007fc:	fa20 f004 	lsr.w	r0, r0, r4
 8000800:	fa01 f205 	lsl.w	r2, r1, r5
 8000804:	ea40 0002 	orr.w	r0, r0, r2
 8000808:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 800080c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000810:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000814:	fa21 f604 	lsr.w	r6, r1, r4
 8000818:	eb42 0106 	adc.w	r1, r2, r6
 800081c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000820:	bf08      	it	eq
 8000822:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000826:	bd70      	pop	{r4, r5, r6, pc}
 8000828:	f1c4 040c 	rsb	r4, r4, #12
 800082c:	f1c4 0520 	rsb	r5, r4, #32
 8000830:	fa00 f304 	lsl.w	r3, r0, r4
 8000834:	fa20 f005 	lsr.w	r0, r0, r5
 8000838:	fa01 f204 	lsl.w	r2, r1, r4
 800083c:	ea40 0002 	orr.w	r0, r0, r2
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000848:	f141 0100 	adc.w	r1, r1, #0
 800084c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000850:	bf08      	it	eq
 8000852:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000856:	bd70      	pop	{r4, r5, r6, pc}
 8000858:	f1c4 0520 	rsb	r5, r4, #32
 800085c:	fa00 f205 	lsl.w	r2, r0, r5
 8000860:	ea4e 0e02 	orr.w	lr, lr, r2
 8000864:	fa20 f304 	lsr.w	r3, r0, r4
 8000868:	fa01 f205 	lsl.w	r2, r1, r5
 800086c:	ea43 0302 	orr.w	r3, r3, r2
 8000870:	fa21 f004 	lsr.w	r0, r1, r4
 8000874:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000878:	fa21 f204 	lsr.w	r2, r1, r4
 800087c:	ea20 0002 	bic.w	r0, r0, r2
 8000880:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000884:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000888:	bf08      	it	eq
 800088a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f094 0f00 	teq	r4, #0
 8000894:	d10f      	bne.n	80008b6 <__aeabi_dmul+0x1c2>
 8000896:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800089a:	0040      	lsls	r0, r0, #1
 800089c:	eb41 0101 	adc.w	r1, r1, r1
 80008a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a4:	bf08      	it	eq
 80008a6:	3c01      	subeq	r4, #1
 80008a8:	d0f7      	beq.n	800089a <__aeabi_dmul+0x1a6>
 80008aa:	ea41 0106 	orr.w	r1, r1, r6
 80008ae:	f095 0f00 	teq	r5, #0
 80008b2:	bf18      	it	ne
 80008b4:	4770      	bxne	lr
 80008b6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80008ba:	0052      	lsls	r2, r2, #1
 80008bc:	eb43 0303 	adc.w	r3, r3, r3
 80008c0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80008c4:	bf08      	it	eq
 80008c6:	3d01      	subeq	r5, #1
 80008c8:	d0f7      	beq.n	80008ba <__aeabi_dmul+0x1c6>
 80008ca:	ea43 0306 	orr.w	r3, r3, r6
 80008ce:	4770      	bx	lr
 80008d0:	ea94 0f0c 	teq	r4, ip
 80008d4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008d8:	bf18      	it	ne
 80008da:	ea95 0f0c 	teqne	r5, ip
 80008de:	d00c      	beq.n	80008fa <__aeabi_dmul+0x206>
 80008e0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e4:	bf18      	it	ne
 80008e6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008ea:	d1d1      	bne.n	8000890 <__aeabi_dmul+0x19c>
 80008ec:	ea81 0103 	eor.w	r1, r1, r3
 80008f0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008f4:	f04f 0000 	mov.w	r0, #0
 80008f8:	bd70      	pop	{r4, r5, r6, pc}
 80008fa:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008fe:	bf06      	itte	eq
 8000900:	4610      	moveq	r0, r2
 8000902:	4619      	moveq	r1, r3
 8000904:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000908:	d019      	beq.n	800093e <__aeabi_dmul+0x24a>
 800090a:	ea94 0f0c 	teq	r4, ip
 800090e:	d102      	bne.n	8000916 <__aeabi_dmul+0x222>
 8000910:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000914:	d113      	bne.n	800093e <__aeabi_dmul+0x24a>
 8000916:	ea95 0f0c 	teq	r5, ip
 800091a:	d105      	bne.n	8000928 <__aeabi_dmul+0x234>
 800091c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000920:	bf1c      	itt	ne
 8000922:	4610      	movne	r0, r2
 8000924:	4619      	movne	r1, r3
 8000926:	d10a      	bne.n	800093e <__aeabi_dmul+0x24a>
 8000928:	ea81 0103 	eor.w	r1, r1, r3
 800092c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000930:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000934:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000938:	f04f 0000 	mov.w	r0, #0
 800093c:	bd70      	pop	{r4, r5, r6, pc}
 800093e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000942:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000946:	bd70      	pop	{r4, r5, r6, pc}

08000948 <__aeabi_ddiv>:
 8000948:	b570      	push	{r4, r5, r6, lr}
 800094a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800094e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000952:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000956:	bf1d      	ittte	ne
 8000958:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800095c:	ea94 0f0c 	teqne	r4, ip
 8000960:	ea95 0f0c 	teqne	r5, ip
 8000964:	f000 f8a7 	bleq	8000ab6 <__aeabi_ddiv+0x16e>
 8000968:	eba4 0405 	sub.w	r4, r4, r5
 800096c:	ea81 0e03 	eor.w	lr, r1, r3
 8000970:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000974:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000978:	f000 8088 	beq.w	8000a8c <__aeabi_ddiv+0x144>
 800097c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000980:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000984:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000988:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 800098c:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000990:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000994:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000998:	ea4f 2600 	mov.w	r6, r0, lsl #8
 800099c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80009a0:	429d      	cmp	r5, r3
 80009a2:	bf08      	it	eq
 80009a4:	4296      	cmpeq	r6, r2
 80009a6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80009aa:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80009ae:	d202      	bcs.n	80009b6 <__aeabi_ddiv+0x6e>
 80009b0:	085b      	lsrs	r3, r3, #1
 80009b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009b6:	1ab6      	subs	r6, r6, r2
 80009b8:	eb65 0503 	sbc.w	r5, r5, r3
 80009bc:	085b      	lsrs	r3, r3, #1
 80009be:	ea4f 0232 	mov.w	r2, r2, rrx
 80009c2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80009c6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80009ca:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ce:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009d2:	bf22      	ittt	cs
 80009d4:	1ab6      	subcs	r6, r6, r2
 80009d6:	4675      	movcs	r5, lr
 80009d8:	ea40 000c 	orrcs.w	r0, r0, ip
 80009dc:	085b      	lsrs	r3, r3, #1
 80009de:	ea4f 0232 	mov.w	r2, r2, rrx
 80009e2:	ebb6 0e02 	subs.w	lr, r6, r2
 80009e6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009ea:	bf22      	ittt	cs
 80009ec:	1ab6      	subcs	r6, r6, r2
 80009ee:	4675      	movcs	r5, lr
 80009f0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80009f4:	085b      	lsrs	r3, r3, #1
 80009f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80009fa:	ebb6 0e02 	subs.w	lr, r6, r2
 80009fe:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a02:	bf22      	ittt	cs
 8000a04:	1ab6      	subcs	r6, r6, r2
 8000a06:	4675      	movcs	r5, lr
 8000a08:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000a0c:	085b      	lsrs	r3, r3, #1
 8000a0e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a12:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a16:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a1a:	bf22      	ittt	cs
 8000a1c:	1ab6      	subcs	r6, r6, r2
 8000a1e:	4675      	movcs	r5, lr
 8000a20:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000a24:	ea55 0e06 	orrs.w	lr, r5, r6
 8000a28:	d018      	beq.n	8000a5c <__aeabi_ddiv+0x114>
 8000a2a:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000a2e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000a32:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000a36:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000a3a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000a3e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000a42:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000a46:	d1c0      	bne.n	80009ca <__aeabi_ddiv+0x82>
 8000a48:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a4c:	d10b      	bne.n	8000a66 <__aeabi_ddiv+0x11e>
 8000a4e:	ea41 0100 	orr.w	r1, r1, r0
 8000a52:	f04f 0000 	mov.w	r0, #0
 8000a56:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000a5a:	e7b6      	b.n	80009ca <__aeabi_ddiv+0x82>
 8000a5c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a60:	bf04      	itt	eq
 8000a62:	4301      	orreq	r1, r0
 8000a64:	2000      	moveq	r0, #0
 8000a66:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000a6a:	bf88      	it	hi
 8000a6c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000a70:	f63f aeaf 	bhi.w	80007d2 <__aeabi_dmul+0xde>
 8000a74:	ebb5 0c03 	subs.w	ip, r5, r3
 8000a78:	bf04      	itt	eq
 8000a7a:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000a7e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000a82:	f150 0000 	adcs.w	r0, r0, #0
 8000a86:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000a8a:	bd70      	pop	{r4, r5, r6, pc}
 8000a8c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a90:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a94:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a98:	bfc2      	ittt	gt
 8000a9a:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a9e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000aa2:	bd70      	popgt	{r4, r5, r6, pc}
 8000aa4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000aa8:	f04f 0e00 	mov.w	lr, #0
 8000aac:	3c01      	subs	r4, #1
 8000aae:	e690      	b.n	80007d2 <__aeabi_dmul+0xde>
 8000ab0:	ea45 0e06 	orr.w	lr, r5, r6
 8000ab4:	e68d      	b.n	80007d2 <__aeabi_dmul+0xde>
 8000ab6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000aba:	ea94 0f0c 	teq	r4, ip
 8000abe:	bf08      	it	eq
 8000ac0:	ea95 0f0c 	teqeq	r5, ip
 8000ac4:	f43f af3b 	beq.w	800093e <__aeabi_dmul+0x24a>
 8000ac8:	ea94 0f0c 	teq	r4, ip
 8000acc:	d10a      	bne.n	8000ae4 <__aeabi_ddiv+0x19c>
 8000ace:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000ad2:	f47f af34 	bne.w	800093e <__aeabi_dmul+0x24a>
 8000ad6:	ea95 0f0c 	teq	r5, ip
 8000ada:	f47f af25 	bne.w	8000928 <__aeabi_dmul+0x234>
 8000ade:	4610      	mov	r0, r2
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	e72c      	b.n	800093e <__aeabi_dmul+0x24a>
 8000ae4:	ea95 0f0c 	teq	r5, ip
 8000ae8:	d106      	bne.n	8000af8 <__aeabi_ddiv+0x1b0>
 8000aea:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000aee:	f43f aefd 	beq.w	80008ec <__aeabi_dmul+0x1f8>
 8000af2:	4610      	mov	r0, r2
 8000af4:	4619      	mov	r1, r3
 8000af6:	e722      	b.n	800093e <__aeabi_dmul+0x24a>
 8000af8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000afc:	bf18      	it	ne
 8000afe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000b02:	f47f aec5 	bne.w	8000890 <__aeabi_dmul+0x19c>
 8000b06:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000b0a:	f47f af0d 	bne.w	8000928 <__aeabi_dmul+0x234>
 8000b0e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000b12:	f47f aeeb 	bne.w	80008ec <__aeabi_dmul+0x1f8>
 8000b16:	e712      	b.n	800093e <__aeabi_dmul+0x24a>

08000b18 <__gedf2>:
 8000b18:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000b1c:	e006      	b.n	8000b2c <__cmpdf2+0x4>
 8000b1e:	bf00      	nop

08000b20 <__ledf2>:
 8000b20:	f04f 0c01 	mov.w	ip, #1
 8000b24:	e002      	b.n	8000b2c <__cmpdf2+0x4>
 8000b26:	bf00      	nop

08000b28 <__cmpdf2>:
 8000b28:	f04f 0c01 	mov.w	ip, #1
 8000b2c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000b30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b38:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b3c:	bf18      	it	ne
 8000b3e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000b42:	d01b      	beq.n	8000b7c <__cmpdf2+0x54>
 8000b44:	b001      	add	sp, #4
 8000b46:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000b4a:	bf0c      	ite	eq
 8000b4c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000b50:	ea91 0f03 	teqne	r1, r3
 8000b54:	bf02      	ittt	eq
 8000b56:	ea90 0f02 	teqeq	r0, r2
 8000b5a:	2000      	moveq	r0, #0
 8000b5c:	4770      	bxeq	lr
 8000b5e:	f110 0f00 	cmn.w	r0, #0
 8000b62:	ea91 0f03 	teq	r1, r3
 8000b66:	bf58      	it	pl
 8000b68:	4299      	cmppl	r1, r3
 8000b6a:	bf08      	it	eq
 8000b6c:	4290      	cmpeq	r0, r2
 8000b6e:	bf2c      	ite	cs
 8000b70:	17d8      	asrcs	r0, r3, #31
 8000b72:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000b76:	f040 0001 	orr.w	r0, r0, #1
 8000b7a:	4770      	bx	lr
 8000b7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__cmpdf2+0x64>
 8000b86:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b8a:	d107      	bne.n	8000b9c <__cmpdf2+0x74>
 8000b8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b94:	d1d6      	bne.n	8000b44 <__cmpdf2+0x1c>
 8000b96:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b9a:	d0d3      	beq.n	8000b44 <__cmpdf2+0x1c>
 8000b9c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ba0:	4770      	bx	lr
 8000ba2:	bf00      	nop

08000ba4 <__aeabi_cdrcmple>:
 8000ba4:	4684      	mov	ip, r0
 8000ba6:	4610      	mov	r0, r2
 8000ba8:	4662      	mov	r2, ip
 8000baa:	468c      	mov	ip, r1
 8000bac:	4619      	mov	r1, r3
 8000bae:	4663      	mov	r3, ip
 8000bb0:	e000      	b.n	8000bb4 <__aeabi_cdcmpeq>
 8000bb2:	bf00      	nop

08000bb4 <__aeabi_cdcmpeq>:
 8000bb4:	b501      	push	{r0, lr}
 8000bb6:	f7ff ffb7 	bl	8000b28 <__cmpdf2>
 8000bba:	2800      	cmp	r0, #0
 8000bbc:	bf48      	it	mi
 8000bbe:	f110 0f00 	cmnmi.w	r0, #0
 8000bc2:	bd01      	pop	{r0, pc}

08000bc4 <__aeabi_dcmpeq>:
 8000bc4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bc8:	f7ff fff4 	bl	8000bb4 <__aeabi_cdcmpeq>
 8000bcc:	bf0c      	ite	eq
 8000bce:	2001      	moveq	r0, #1
 8000bd0:	2000      	movne	r0, #0
 8000bd2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bd6:	bf00      	nop

08000bd8 <__aeabi_dcmplt>:
 8000bd8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bdc:	f7ff ffea 	bl	8000bb4 <__aeabi_cdcmpeq>
 8000be0:	bf34      	ite	cc
 8000be2:	2001      	movcc	r0, #1
 8000be4:	2000      	movcs	r0, #0
 8000be6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bea:	bf00      	nop

08000bec <__aeabi_dcmple>:
 8000bec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bf0:	f7ff ffe0 	bl	8000bb4 <__aeabi_cdcmpeq>
 8000bf4:	bf94      	ite	ls
 8000bf6:	2001      	movls	r0, #1
 8000bf8:	2000      	movhi	r0, #0
 8000bfa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bfe:	bf00      	nop

08000c00 <__aeabi_dcmpge>:
 8000c00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c04:	f7ff ffce 	bl	8000ba4 <__aeabi_cdrcmple>
 8000c08:	bf94      	ite	ls
 8000c0a:	2001      	movls	r0, #1
 8000c0c:	2000      	movhi	r0, #0
 8000c0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c12:	bf00      	nop

08000c14 <__aeabi_dcmpgt>:
 8000c14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c18:	f7ff ffc4 	bl	8000ba4 <__aeabi_cdrcmple>
 8000c1c:	bf34      	ite	cc
 8000c1e:	2001      	movcc	r0, #1
 8000c20:	2000      	movcs	r0, #0
 8000c22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c26:	bf00      	nop

08000c28 <__aeabi_d2iz>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c30:	d215      	bcs.n	8000c5e <__aeabi_d2iz+0x36>
 8000c32:	d511      	bpl.n	8000c58 <__aeabi_d2iz+0x30>
 8000c34:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c38:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c3c:	d912      	bls.n	8000c64 <__aeabi_d2iz+0x3c>
 8000c3e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c42:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c46:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c4a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000c4e:	fa23 f002 	lsr.w	r0, r3, r2
 8000c52:	bf18      	it	ne
 8000c54:	4240      	negne	r0, r0
 8000c56:	4770      	bx	lr
 8000c58:	f04f 0000 	mov.w	r0, #0
 8000c5c:	4770      	bx	lr
 8000c5e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c62:	d105      	bne.n	8000c70 <__aeabi_d2iz+0x48>
 8000c64:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	bf08      	it	eq
 8000c6a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000c6e:	4770      	bx	lr
 8000c70:	f04f 0000 	mov.w	r0, #0
 8000c74:	4770      	bx	lr
 8000c76:	bf00      	nop

08000c78 <__aeabi_uldivmod>:
 8000c78:	b94b      	cbnz	r3, 8000c8e <__aeabi_uldivmod+0x16>
 8000c7a:	b942      	cbnz	r2, 8000c8e <__aeabi_uldivmod+0x16>
 8000c7c:	2900      	cmp	r1, #0
 8000c7e:	bf08      	it	eq
 8000c80:	2800      	cmpeq	r0, #0
 8000c82:	d002      	beq.n	8000c8a <__aeabi_uldivmod+0x12>
 8000c84:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000c88:	4608      	mov	r0, r1
 8000c8a:	f000 b83b 	b.w	8000d04 <__aeabi_idiv0>
 8000c8e:	b082      	sub	sp, #8
 8000c90:	46ec      	mov	ip, sp
 8000c92:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000c96:	f000 f81d 	bl	8000cd4 <__gnu_uldivmod_helper>
 8000c9a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c9e:	b002      	add	sp, #8
 8000ca0:	bc0c      	pop	{r2, r3}
 8000ca2:	4770      	bx	lr

08000ca4 <__gnu_ldivmod_helper>:
 8000ca4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ca8:	9c06      	ldr	r4, [sp, #24]
 8000caa:	4615      	mov	r5, r2
 8000cac:	4606      	mov	r6, r0
 8000cae:	460f      	mov	r7, r1
 8000cb0:	4698      	mov	r8, r3
 8000cb2:	f000 f829 	bl	8000d08 <__divdi3>
 8000cb6:	fb05 f301 	mul.w	r3, r5, r1
 8000cba:	fb00 3808 	mla	r8, r0, r8, r3
 8000cbe:	fba5 2300 	umull	r2, r3, r5, r0
 8000cc2:	4443      	add	r3, r8
 8000cc4:	1ab2      	subs	r2, r6, r2
 8000cc6:	eb67 0303 	sbc.w	r3, r7, r3
 8000cca:	e9c4 2300 	strd	r2, r3, [r4]
 8000cce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000cd2:	bf00      	nop

08000cd4 <__gnu_uldivmod_helper>:
 8000cd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cd8:	9c06      	ldr	r4, [sp, #24]
 8000cda:	4615      	mov	r5, r2
 8000cdc:	4606      	mov	r6, r0
 8000cde:	460f      	mov	r7, r1
 8000ce0:	4698      	mov	r8, r3
 8000ce2:	f000 f967 	bl	8000fb4 <__udivdi3>
 8000ce6:	fb00 f808 	mul.w	r8, r0, r8
 8000cea:	fba0 2305 	umull	r2, r3, r0, r5
 8000cee:	fb05 8801 	mla	r8, r5, r1, r8
 8000cf2:	4443      	add	r3, r8
 8000cf4:	1ab2      	subs	r2, r6, r2
 8000cf6:	eb67 0303 	sbc.w	r3, r7, r3
 8000cfa:	e9c4 2300 	strd	r2, r3, [r4]
 8000cfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000d02:	bf00      	nop

08000d04 <__aeabi_idiv0>:
 8000d04:	4770      	bx	lr
 8000d06:	bf00      	nop

08000d08 <__divdi3>:
 8000d08:	2900      	cmp	r1, #0
 8000d0a:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8000d0e:	bfa8      	it	ge
 8000d10:	2600      	movge	r6, #0
 8000d12:	f2c0 80a9 	blt.w	8000e68 <__divdi3+0x160>
 8000d16:	2b00      	cmp	r3, #0
 8000d18:	f2c0 80a1 	blt.w	8000e5e <__divdi3+0x156>
 8000d1c:	4689      	mov	r9, r1
 8000d1e:	4690      	mov	r8, r2
 8000d20:	469c      	mov	ip, r3
 8000d22:	4614      	mov	r4, r2
 8000d24:	4605      	mov	r5, r0
 8000d26:	460f      	mov	r7, r1
 8000d28:	2b00      	cmp	r3, #0
 8000d2a:	d147      	bne.n	8000dbc <__divdi3+0xb4>
 8000d2c:	428a      	cmp	r2, r1
 8000d2e:	d95b      	bls.n	8000de8 <__divdi3+0xe0>
 8000d30:	fab2 f382 	clz	r3, r2
 8000d34:	b153      	cbz	r3, 8000d4c <__divdi3+0x44>
 8000d36:	f1c3 0220 	rsb	r2, r3, #32
 8000d3a:	fa01 f703 	lsl.w	r7, r1, r3
 8000d3e:	fa20 f202 	lsr.w	r2, r0, r2
 8000d42:	fa08 f403 	lsl.w	r4, r8, r3
 8000d46:	4317      	orrs	r7, r2
 8000d48:	fa00 f503 	lsl.w	r5, r0, r3
 8000d4c:	0c21      	lsrs	r1, r4, #16
 8000d4e:	fbb7 f2f1 	udiv	r2, r7, r1
 8000d52:	0c2b      	lsrs	r3, r5, #16
 8000d54:	fb01 7c12 	mls	ip, r1, r2, r7
 8000d58:	b2a0      	uxth	r0, r4
 8000d5a:	ea43 470c 	orr.w	r7, r3, ip, lsl #16
 8000d5e:	fb00 f302 	mul.w	r3, r0, r2
 8000d62:	42bb      	cmp	r3, r7
 8000d64:	d909      	bls.n	8000d7a <__divdi3+0x72>
 8000d66:	193f      	adds	r7, r7, r4
 8000d68:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 8000d6c:	d204      	bcs.n	8000d78 <__divdi3+0x70>
 8000d6e:	42bb      	cmp	r3, r7
 8000d70:	bf84      	itt	hi
 8000d72:	3a02      	subhi	r2, #2
 8000d74:	193f      	addhi	r7, r7, r4
 8000d76:	d800      	bhi.n	8000d7a <__divdi3+0x72>
 8000d78:	4662      	mov	r2, ip
 8000d7a:	1aff      	subs	r7, r7, r3
 8000d7c:	fbb7 f3f1 	udiv	r3, r7, r1
 8000d80:	b2ad      	uxth	r5, r5
 8000d82:	fb01 7113 	mls	r1, r1, r3, r7
 8000d86:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
 8000d8a:	fb00 f003 	mul.w	r0, r0, r3
 8000d8e:	4288      	cmp	r0, r1
 8000d90:	d908      	bls.n	8000da4 <__divdi3+0x9c>
 8000d92:	1909      	adds	r1, r1, r4
 8000d94:	f103 37ff 	add.w	r7, r3, #4294967295	; 0xffffffff
 8000d98:	d203      	bcs.n	8000da2 <__divdi3+0x9a>
 8000d9a:	4288      	cmp	r0, r1
 8000d9c:	bf88      	it	hi
 8000d9e:	3b02      	subhi	r3, #2
 8000da0:	d800      	bhi.n	8000da4 <__divdi3+0x9c>
 8000da2:	463b      	mov	r3, r7
 8000da4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000da8:	2200      	movs	r2, #0
 8000daa:	4618      	mov	r0, r3
 8000dac:	4611      	mov	r1, r2
 8000dae:	b116      	cbz	r6, 8000db6 <__divdi3+0xae>
 8000db0:	4240      	negs	r0, r0
 8000db2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000db6:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8000dba:	4770      	bx	lr
 8000dbc:	428b      	cmp	r3, r1
 8000dbe:	bf84      	itt	hi
 8000dc0:	2200      	movhi	r2, #0
 8000dc2:	4613      	movhi	r3, r2
 8000dc4:	d8f1      	bhi.n	8000daa <__divdi3+0xa2>
 8000dc6:	fabc f18c 	clz	r1, ip
 8000dca:	2900      	cmp	r1, #0
 8000dcc:	f040 8090 	bne.w	8000ef0 <__divdi3+0x1e8>
 8000dd0:	45cc      	cmp	ip, r9
 8000dd2:	bf28      	it	cs
 8000dd4:	4580      	cmpcs	r8, r0
 8000dd6:	bf8c      	ite	hi
 8000dd8:	2200      	movhi	r2, #0
 8000dda:	2201      	movls	r2, #1
 8000ddc:	bf9c      	itt	ls
 8000dde:	2301      	movls	r3, #1
 8000de0:	460a      	movls	r2, r1
 8000de2:	d9e2      	bls.n	8000daa <__divdi3+0xa2>
 8000de4:	4613      	mov	r3, r2
 8000de6:	e7e0      	b.n	8000daa <__divdi3+0xa2>
 8000de8:	b912      	cbnz	r2, 8000df0 <__divdi3+0xe8>
 8000dea:	2301      	movs	r3, #1
 8000dec:	fbb3 f4f2 	udiv	r4, r3, r2
 8000df0:	fab4 f384 	clz	r3, r4
 8000df4:	2b00      	cmp	r3, #0
 8000df6:	d13d      	bne.n	8000e74 <__divdi3+0x16c>
 8000df8:	1b3f      	subs	r7, r7, r4
 8000dfa:	0c20      	lsrs	r0, r4, #16
 8000dfc:	fa1f fc84 	uxth.w	ip, r4
 8000e00:	2201      	movs	r2, #1
 8000e02:	fbb7 f1f0 	udiv	r1, r7, r0
 8000e06:	0c2b      	lsrs	r3, r5, #16
 8000e08:	fb00 7711 	mls	r7, r0, r1, r7
 8000e0c:	ea43 4707 	orr.w	r7, r3, r7, lsl #16
 8000e10:	fb0c f301 	mul.w	r3, ip, r1
 8000e14:	42bb      	cmp	r3, r7
 8000e16:	d90a      	bls.n	8000e2e <__divdi3+0x126>
 8000e18:	193f      	adds	r7, r7, r4
 8000e1a:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8000e1e:	f080 80c1 	bcs.w	8000fa4 <__divdi3+0x29c>
 8000e22:	42bb      	cmp	r3, r7
 8000e24:	bf84      	itt	hi
 8000e26:	3902      	subhi	r1, #2
 8000e28:	193f      	addhi	r7, r7, r4
 8000e2a:	f240 80bb 	bls.w	8000fa4 <__divdi3+0x29c>
 8000e2e:	1aff      	subs	r7, r7, r3
 8000e30:	fbb7 f3f0 	udiv	r3, r7, r0
 8000e34:	b2ad      	uxth	r5, r5
 8000e36:	fb00 7013 	mls	r0, r0, r3, r7
 8000e3a:	ea45 4000 	orr.w	r0, r5, r0, lsl #16
 8000e3e:	fb0c fc03 	mul.w	ip, ip, r3
 8000e42:	4584      	cmp	ip, r0
 8000e44:	d908      	bls.n	8000e58 <__divdi3+0x150>
 8000e46:	1900      	adds	r0, r0, r4
 8000e48:	f103 37ff 	add.w	r7, r3, #4294967295	; 0xffffffff
 8000e4c:	d203      	bcs.n	8000e56 <__divdi3+0x14e>
 8000e4e:	4584      	cmp	ip, r0
 8000e50:	bf88      	it	hi
 8000e52:	3b02      	subhi	r3, #2
 8000e54:	d800      	bhi.n	8000e58 <__divdi3+0x150>
 8000e56:	463b      	mov	r3, r7
 8000e58:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e5c:	e7a5      	b.n	8000daa <__divdi3+0xa2>
 8000e5e:	43f6      	mvns	r6, r6
 8000e60:	4252      	negs	r2, r2
 8000e62:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000e66:	e759      	b.n	8000d1c <__divdi3+0x14>
 8000e68:	4240      	negs	r0, r0
 8000e6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e6e:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8000e72:	e750      	b.n	8000d16 <__divdi3+0xe>
 8000e74:	409c      	lsls	r4, r3
 8000e76:	f1c3 0220 	rsb	r2, r3, #32
 8000e7a:	fa27 f102 	lsr.w	r1, r7, r2
 8000e7e:	0c20      	lsrs	r0, r4, #16
 8000e80:	fa25 f202 	lsr.w	r2, r5, r2
 8000e84:	409f      	lsls	r7, r3
 8000e86:	4317      	orrs	r7, r2
 8000e88:	fbb1 f2f0 	udiv	r2, r1, r0
 8000e8c:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000e90:	fb00 1112 	mls	r1, r0, r2, r1
 8000e94:	fa1f fc84 	uxth.w	ip, r4
 8000e98:	ea48 4101 	orr.w	r1, r8, r1, lsl #16
 8000e9c:	fb0c f802 	mul.w	r8, ip, r2
 8000ea0:	4588      	cmp	r8, r1
 8000ea2:	fa05 f503 	lsl.w	r5, r5, r3
 8000ea6:	d908      	bls.n	8000eba <__divdi3+0x1b2>
 8000ea8:	1909      	adds	r1, r1, r4
 8000eaa:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 8000eae:	d27f      	bcs.n	8000fb0 <__divdi3+0x2a8>
 8000eb0:	4588      	cmp	r8, r1
 8000eb2:	bf84      	itt	hi
 8000eb4:	3a02      	subhi	r2, #2
 8000eb6:	1909      	addhi	r1, r1, r4
 8000eb8:	d97a      	bls.n	8000fb0 <__divdi3+0x2a8>
 8000eba:	ebc8 0101 	rsb	r1, r8, r1
 8000ebe:	fbb1 f3f0 	udiv	r3, r1, r0
 8000ec2:	fb00 1113 	mls	r1, r0, r3, r1
 8000ec6:	b2bf      	uxth	r7, r7
 8000ec8:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000ecc:	fb0c f103 	mul.w	r1, ip, r3
 8000ed0:	42b9      	cmp	r1, r7
 8000ed2:	d909      	bls.n	8000ee8 <__divdi3+0x1e0>
 8000ed4:	193f      	adds	r7, r7, r4
 8000ed6:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000eda:	d204      	bcs.n	8000ee6 <__divdi3+0x1de>
 8000edc:	42b9      	cmp	r1, r7
 8000ede:	bf84      	itt	hi
 8000ee0:	3b02      	subhi	r3, #2
 8000ee2:	193f      	addhi	r7, r7, r4
 8000ee4:	d800      	bhi.n	8000ee8 <__divdi3+0x1e0>
 8000ee6:	4643      	mov	r3, r8
 8000ee8:	1a7f      	subs	r7, r7, r1
 8000eea:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
 8000eee:	e788      	b.n	8000e02 <__divdi3+0xfa>
 8000ef0:	f1c1 0320 	rsb	r3, r1, #32
 8000ef4:	fa28 f203 	lsr.w	r2, r8, r3
 8000ef8:	fa0c fc01 	lsl.w	ip, ip, r1
 8000efc:	ea42 0c0c 	orr.w	ip, r2, ip
 8000f00:	fa29 f403 	lsr.w	r4, r9, r3
 8000f04:	ea4f 4a1c 	mov.w	sl, ip, lsr #16
 8000f08:	fa20 f303 	lsr.w	r3, r0, r3
 8000f0c:	fa09 f901 	lsl.w	r9, r9, r1
 8000f10:	ea43 0009 	orr.w	r0, r3, r9
 8000f14:	fbb4 f7fa 	udiv	r7, r4, sl
 8000f18:	fb0a 4417 	mls	r4, sl, r7, r4
 8000f1c:	0c03      	lsrs	r3, r0, #16
 8000f1e:	fa1f f98c 	uxth.w	r9, ip
 8000f22:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000f26:	fb09 fb07 	mul.w	fp, r9, r7
 8000f2a:	45a3      	cmp	fp, r4
 8000f2c:	fa08 f201 	lsl.w	r2, r8, r1
 8000f30:	d909      	bls.n	8000f46 <__divdi3+0x23e>
 8000f32:	eb14 040c 	adds.w	r4, r4, ip
 8000f36:	f107 33ff 	add.w	r3, r7, #4294967295	; 0xffffffff
 8000f3a:	d237      	bcs.n	8000fac <__divdi3+0x2a4>
 8000f3c:	45a3      	cmp	fp, r4
 8000f3e:	bf84      	itt	hi
 8000f40:	3f02      	subhi	r7, #2
 8000f42:	4464      	addhi	r4, ip
 8000f44:	d932      	bls.n	8000fac <__divdi3+0x2a4>
 8000f46:	ebcb 0404 	rsb	r4, fp, r4
 8000f4a:	fbb4 f3fa 	udiv	r3, r4, sl
 8000f4e:	fb0a 4413 	mls	r4, sl, r3, r4
 8000f52:	b280      	uxth	r0, r0
 8000f54:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000f58:	fb09 f403 	mul.w	r4, r9, r3
 8000f5c:	4284      	cmp	r4, r0
 8000f5e:	d909      	bls.n	8000f74 <__divdi3+0x26c>
 8000f60:	eb10 000c 	adds.w	r0, r0, ip
 8000f64:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000f68:	d21e      	bcs.n	8000fa8 <__divdi3+0x2a0>
 8000f6a:	4284      	cmp	r4, r0
 8000f6c:	bf84      	itt	hi
 8000f6e:	3b02      	subhi	r3, #2
 8000f70:	4460      	addhi	r0, ip
 8000f72:	d919      	bls.n	8000fa8 <__divdi3+0x2a0>
 8000f74:	ea43 4707 	orr.w	r7, r3, r7, lsl #16
 8000f78:	1b00      	subs	r0, r0, r4
 8000f7a:	fba7 2302 	umull	r2, r3, r7, r2
 8000f7e:	4298      	cmp	r0, r3
 8000f80:	d30d      	bcc.n	8000f9e <__divdi3+0x296>
 8000f82:	bf14      	ite	ne
 8000f84:	2300      	movne	r3, #0
 8000f86:	2301      	moveq	r3, #1
 8000f88:	fa05 f101 	lsl.w	r1, r5, r1
 8000f8c:	4291      	cmp	r1, r2
 8000f8e:	bf2c      	ite	cs
 8000f90:	2200      	movcs	r2, #0
 8000f92:	f003 0201 	andcc.w	r2, r3, #1
 8000f96:	463b      	mov	r3, r7
 8000f98:	2a00      	cmp	r2, #0
 8000f9a:	f43f af06 	beq.w	8000daa <__divdi3+0xa2>
 8000f9e:	1e7b      	subs	r3, r7, #1
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	e702      	b.n	8000daa <__divdi3+0xa2>
 8000fa4:	4641      	mov	r1, r8
 8000fa6:	e742      	b.n	8000e2e <__divdi3+0x126>
 8000fa8:	4643      	mov	r3, r8
 8000faa:	e7e3      	b.n	8000f74 <__divdi3+0x26c>
 8000fac:	461f      	mov	r7, r3
 8000fae:	e7ca      	b.n	8000f46 <__divdi3+0x23e>
 8000fb0:	461a      	mov	r2, r3
 8000fb2:	e782      	b.n	8000eba <__divdi3+0x1b2>

08000fb4 <__udivdi3>:
 8000fb4:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000fb8:	4614      	mov	r4, r2
 8000fba:	4605      	mov	r5, r0
 8000fbc:	460e      	mov	r6, r1
 8000fbe:	2b00      	cmp	r3, #0
 8000fc0:	d141      	bne.n	8001046 <__udivdi3+0x92>
 8000fc2:	428a      	cmp	r2, r1
 8000fc4:	d954      	bls.n	8001070 <__udivdi3+0xbc>
 8000fc6:	fab2 f382 	clz	r3, r2
 8000fca:	b14b      	cbz	r3, 8000fe0 <__udivdi3+0x2c>
 8000fcc:	f1c3 0620 	rsb	r6, r3, #32
 8000fd0:	4099      	lsls	r1, r3
 8000fd2:	fa20 f606 	lsr.w	r6, r0, r6
 8000fd6:	fa02 f403 	lsl.w	r4, r2, r3
 8000fda:	430e      	orrs	r6, r1
 8000fdc:	fa00 f503 	lsl.w	r5, r0, r3
 8000fe0:	0c22      	lsrs	r2, r4, #16
 8000fe2:	fbb6 f0f2 	udiv	r0, r6, r2
 8000fe6:	0c2b      	lsrs	r3, r5, #16
 8000fe8:	fb02 6110 	mls	r1, r2, r0, r6
 8000fec:	b2a7      	uxth	r7, r4
 8000fee:	ea43 4601 	orr.w	r6, r3, r1, lsl #16
 8000ff2:	fb07 f300 	mul.w	r3, r7, r0
 8000ff6:	42b3      	cmp	r3, r6
 8000ff8:	d909      	bls.n	800100e <__udivdi3+0x5a>
 8000ffa:	1936      	adds	r6, r6, r4
 8000ffc:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8001000:	d204      	bcs.n	800100c <__udivdi3+0x58>
 8001002:	42b3      	cmp	r3, r6
 8001004:	bf84      	itt	hi
 8001006:	3802      	subhi	r0, #2
 8001008:	1936      	addhi	r6, r6, r4
 800100a:	d800      	bhi.n	800100e <__udivdi3+0x5a>
 800100c:	4608      	mov	r0, r1
 800100e:	1af6      	subs	r6, r6, r3
 8001010:	fbb6 f3f2 	udiv	r3, r6, r2
 8001014:	b2ad      	uxth	r5, r5
 8001016:	fb02 6213 	mls	r2, r2, r3, r6
 800101a:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
 800101e:	fb07 f703 	mul.w	r7, r7, r3
 8001022:	4297      	cmp	r7, r2
 8001024:	d909      	bls.n	800103a <__udivdi3+0x86>
 8001026:	1912      	adds	r2, r2, r4
 8001028:	f103 31ff 	add.w	r1, r3, #4294967295	; 0xffffffff
 800102c:	f080 80ea 	bcs.w	8001204 <__udivdi3+0x250>
 8001030:	4297      	cmp	r7, r2
 8001032:	bf88      	it	hi
 8001034:	3b02      	subhi	r3, #2
 8001036:	f240 80e5 	bls.w	8001204 <__udivdi3+0x250>
 800103a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 800103e:	2100      	movs	r1, #0
 8001040:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8001044:	4770      	bx	lr
 8001046:	428b      	cmp	r3, r1
 8001048:	bf84      	itt	hi
 800104a:	2100      	movhi	r1, #0
 800104c:	4608      	movhi	r0, r1
 800104e:	d8f7      	bhi.n	8001040 <__udivdi3+0x8c>
 8001050:	fab3 f483 	clz	r4, r3
 8001054:	2c00      	cmp	r4, #0
 8001056:	d149      	bne.n	80010ec <__udivdi3+0x138>
 8001058:	428b      	cmp	r3, r1
 800105a:	bf28      	it	cs
 800105c:	4282      	cmpcs	r2, r0
 800105e:	bf8c      	ite	hi
 8001060:	2100      	movhi	r1, #0
 8001062:	2101      	movls	r1, #1
 8001064:	bf9c      	itt	ls
 8001066:	2001      	movls	r0, #1
 8001068:	4621      	movls	r1, r4
 800106a:	d9e9      	bls.n	8001040 <__udivdi3+0x8c>
 800106c:	4608      	mov	r0, r1
 800106e:	e7e7      	b.n	8001040 <__udivdi3+0x8c>
 8001070:	b912      	cbnz	r2, 8001078 <__udivdi3+0xc4>
 8001072:	2401      	movs	r4, #1
 8001074:	fbb4 f4f2 	udiv	r4, r4, r2
 8001078:	fab4 f784 	clz	r7, r4
 800107c:	2f00      	cmp	r7, #0
 800107e:	f040 8082 	bne.w	8001186 <__udivdi3+0x1d2>
 8001082:	1b0b      	subs	r3, r1, r4
 8001084:	0c26      	lsrs	r6, r4, #16
 8001086:	b2a7      	uxth	r7, r4
 8001088:	2101      	movs	r1, #1
 800108a:	fbb3 f0f6 	udiv	r0, r3, r6
 800108e:	0c2a      	lsrs	r2, r5, #16
 8001090:	fb06 3310 	mls	r3, r6, r0, r3
 8001094:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8001098:	fb07 f200 	mul.w	r2, r7, r0
 800109c:	429a      	cmp	r2, r3
 800109e:	d90a      	bls.n	80010b6 <__udivdi3+0x102>
 80010a0:	191b      	adds	r3, r3, r4
 80010a2:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80010a6:	f080 80af 	bcs.w	8001208 <__udivdi3+0x254>
 80010aa:	429a      	cmp	r2, r3
 80010ac:	bf84      	itt	hi
 80010ae:	3802      	subhi	r0, #2
 80010b0:	191b      	addhi	r3, r3, r4
 80010b2:	f240 80a9 	bls.w	8001208 <__udivdi3+0x254>
 80010b6:	1a9b      	subs	r3, r3, r2
 80010b8:	fbb3 f2f6 	udiv	r2, r3, r6
 80010bc:	b2ad      	uxth	r5, r5
 80010be:	fb06 3312 	mls	r3, r6, r2, r3
 80010c2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 80010c6:	fb07 f702 	mul.w	r7, r7, r2
 80010ca:	42af      	cmp	r7, r5
 80010cc:	d909      	bls.n	80010e2 <__udivdi3+0x12e>
 80010ce:	192c      	adds	r4, r5, r4
 80010d0:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 80010d4:	f080 809a 	bcs.w	800120c <__udivdi3+0x258>
 80010d8:	42a7      	cmp	r7, r4
 80010da:	bf88      	it	hi
 80010dc:	3a02      	subhi	r2, #2
 80010de:	f240 8095 	bls.w	800120c <__udivdi3+0x258>
 80010e2:	ea42 4000 	orr.w	r0, r2, r0, lsl #16
 80010e6:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80010ea:	4770      	bx	lr
 80010ec:	f1c4 0520 	rsb	r5, r4, #32
 80010f0:	fa22 f605 	lsr.w	r6, r2, r5
 80010f4:	40a3      	lsls	r3, r4
 80010f6:	4333      	orrs	r3, r6
 80010f8:	ea4f 4813 	mov.w	r8, r3, lsr #16
 80010fc:	fa21 f605 	lsr.w	r6, r1, r5
 8001100:	40a1      	lsls	r1, r4
 8001102:	fa20 f505 	lsr.w	r5, r0, r5
 8001106:	fbb6 fcf8 	udiv	ip, r6, r8
 800110a:	430d      	orrs	r5, r1
 800110c:	fb08 661c 	mls	r6, r8, ip, r6
 8001110:	0c29      	lsrs	r1, r5, #16
 8001112:	fa1f f983 	uxth.w	r9, r3
 8001116:	ea41 4606 	orr.w	r6, r1, r6, lsl #16
 800111a:	fb09 f70c 	mul.w	r7, r9, ip
 800111e:	42b7      	cmp	r7, r6
 8001120:	fa02 f204 	lsl.w	r2, r2, r4
 8001124:	d904      	bls.n	8001130 <__udivdi3+0x17c>
 8001126:	18f6      	adds	r6, r6, r3
 8001128:	f10c 31ff 	add.w	r1, ip, #4294967295	; 0xffffffff
 800112c:	d376      	bcc.n	800121c <__udivdi3+0x268>
 800112e:	468c      	mov	ip, r1
 8001130:	1bf6      	subs	r6, r6, r7
 8001132:	fbb6 f7f8 	udiv	r7, r6, r8
 8001136:	fb08 6617 	mls	r6, r8, r7, r6
 800113a:	b2ad      	uxth	r5, r5
 800113c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8001140:	fb09 f607 	mul.w	r6, r9, r7
 8001144:	42ae      	cmp	r6, r5
 8001146:	d904      	bls.n	8001152 <__udivdi3+0x19e>
 8001148:	18ed      	adds	r5, r5, r3
 800114a:	f107 31ff 	add.w	r1, r7, #4294967295	; 0xffffffff
 800114e:	d35f      	bcc.n	8001210 <__udivdi3+0x25c>
 8001150:	460f      	mov	r7, r1
 8001152:	ea47 470c 	orr.w	r7, r7, ip, lsl #16
 8001156:	1bad      	subs	r5, r5, r6
 8001158:	fba7 2302 	umull	r2, r3, r7, r2
 800115c:	429d      	cmp	r5, r3
 800115e:	d30d      	bcc.n	800117c <__udivdi3+0x1c8>
 8001160:	fa00 f104 	lsl.w	r1, r0, r4
 8001164:	bf14      	ite	ne
 8001166:	2500      	movne	r5, #0
 8001168:	2501      	moveq	r5, #1
 800116a:	4291      	cmp	r1, r2
 800116c:	bf2c      	ite	cs
 800116e:	2100      	movcs	r1, #0
 8001170:	f005 0101 	andcc.w	r1, r5, #1
 8001174:	4638      	mov	r0, r7
 8001176:	2900      	cmp	r1, #0
 8001178:	f43f af62 	beq.w	8001040 <__udivdi3+0x8c>
 800117c:	1e78      	subs	r0, r7, #1
 800117e:	2100      	movs	r1, #0
 8001180:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8001184:	4770      	bx	lr
 8001186:	40bc      	lsls	r4, r7
 8001188:	f1c7 0320 	rsb	r3, r7, #32
 800118c:	fa21 fc03 	lsr.w	ip, r1, r3
 8001190:	0c26      	lsrs	r6, r4, #16
 8001192:	40b9      	lsls	r1, r7
 8001194:	fa20 f303 	lsr.w	r3, r0, r3
 8001198:	430b      	orrs	r3, r1
 800119a:	fbbc f1f6 	udiv	r1, ip, r6
 800119e:	0c1a      	lsrs	r2, r3, #16
 80011a0:	fb06 cc11 	mls	ip, r6, r1, ip
 80011a4:	fa1f f884 	uxth.w	r8, r4
 80011a8:	ea42 4c0c 	orr.w	ip, r2, ip, lsl #16
 80011ac:	fb08 f201 	mul.w	r2, r8, r1
 80011b0:	4562      	cmp	r2, ip
 80011b2:	fa00 f507 	lsl.w	r5, r0, r7
 80011b6:	d909      	bls.n	80011cc <__udivdi3+0x218>
 80011b8:	eb1c 0c04 	adds.w	ip, ip, r4
 80011bc:	f101 30ff 	add.w	r0, r1, #4294967295	; 0xffffffff
 80011c0:	d233      	bcs.n	800122a <__udivdi3+0x276>
 80011c2:	4562      	cmp	r2, ip
 80011c4:	bf84      	itt	hi
 80011c6:	3902      	subhi	r1, #2
 80011c8:	44a4      	addhi	ip, r4
 80011ca:	d92e      	bls.n	800122a <__udivdi3+0x276>
 80011cc:	ebc2 0c0c 	rsb	ip, r2, ip
 80011d0:	fbbc f2f6 	udiv	r2, ip, r6
 80011d4:	b29b      	uxth	r3, r3
 80011d6:	fb06 cc12 	mls	ip, r6, r2, ip
 80011da:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 80011de:	fb08 f002 	mul.w	r0, r8, r2
 80011e2:	4298      	cmp	r0, r3
 80011e4:	d909      	bls.n	80011fa <__udivdi3+0x246>
 80011e6:	191b      	adds	r3, r3, r4
 80011e8:	f102 37ff 	add.w	r7, r2, #4294967295	; 0xffffffff
 80011ec:	d204      	bcs.n	80011f8 <__udivdi3+0x244>
 80011ee:	4298      	cmp	r0, r3
 80011f0:	bf84      	itt	hi
 80011f2:	3a02      	subhi	r2, #2
 80011f4:	191b      	addhi	r3, r3, r4
 80011f6:	d800      	bhi.n	80011fa <__udivdi3+0x246>
 80011f8:	463a      	mov	r2, r7
 80011fa:	1a1b      	subs	r3, r3, r0
 80011fc:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 8001200:	4647      	mov	r7, r8
 8001202:	e742      	b.n	800108a <__udivdi3+0xd6>
 8001204:	460b      	mov	r3, r1
 8001206:	e718      	b.n	800103a <__udivdi3+0x86>
 8001208:	4660      	mov	r0, ip
 800120a:	e754      	b.n	80010b6 <__udivdi3+0x102>
 800120c:	461a      	mov	r2, r3
 800120e:	e768      	b.n	80010e2 <__udivdi3+0x12e>
 8001210:	42ae      	cmp	r6, r5
 8001212:	bf84      	itt	hi
 8001214:	3f02      	subhi	r7, #2
 8001216:	18ed      	addhi	r5, r5, r3
 8001218:	d89b      	bhi.n	8001152 <__udivdi3+0x19e>
 800121a:	e799      	b.n	8001150 <__udivdi3+0x19c>
 800121c:	42b7      	cmp	r7, r6
 800121e:	bf84      	itt	hi
 8001220:	f1ac 0c02 	subhi.w	ip, ip, #2
 8001224:	18f6      	addhi	r6, r6, r3
 8001226:	d883      	bhi.n	8001130 <__udivdi3+0x17c>
 8001228:	e781      	b.n	800112e <__udivdi3+0x17a>
 800122a:	4601      	mov	r1, r0
 800122c:	e7ce      	b.n	80011cc <__udivdi3+0x218>
 800122e:	bf00      	nop

08001230 <atexit>:
 8001230:	4601      	mov	r1, r0
 8001232:	2000      	movs	r0, #0
 8001234:	4602      	mov	r2, r0
 8001236:	4603      	mov	r3, r0
 8001238:	f000 b892 	b.w	8001360 <__register_exitproc>

0800123c <__libc_fini_array>:
 800123c:	b538      	push	{r3, r4, r5, lr}
 800123e:	f646 64d0 	movw	r4, #28368	; 0x6ed0
 8001242:	f646 65cc 	movw	r5, #28364	; 0x6ecc
 8001246:	f6c0 0500 	movt	r5, #2048	; 0x800
 800124a:	f6c0 0400 	movt	r4, #2048	; 0x800
 800124e:	1b64      	subs	r4, r4, r5
 8001250:	10a4      	asrs	r4, r4, #2
 8001252:	bf18      	it	ne
 8001254:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
 8001258:	d005      	beq.n	8001266 <__libc_fini_array+0x2a>
 800125a:	3c01      	subs	r4, #1
 800125c:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8001260:	4798      	blx	r3
 8001262:	2c00      	cmp	r4, #0
 8001264:	d1f9      	bne.n	800125a <__libc_fini_array+0x1e>
 8001266:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800126a:	f005 bd31 	b.w	8006cd0 <_fini>
 800126e:	bf00      	nop

08001270 <__libc_init_array>:
 8001270:	b570      	push	{r4, r5, r6, lr}
 8001272:	f646 66c4 	movw	r6, #28356	; 0x6ec4
 8001276:	f646 65c4 	movw	r5, #28356	; 0x6ec4
 800127a:	f6c0 0500 	movt	r5, #2048	; 0x800
 800127e:	f6c0 0600 	movt	r6, #2048	; 0x800
 8001282:	1b76      	subs	r6, r6, r5
 8001284:	10b6      	asrs	r6, r6, #2
 8001286:	bf1c      	itt	ne
 8001288:	3d04      	subne	r5, #4
 800128a:	2400      	movne	r4, #0
 800128c:	d005      	beq.n	800129a <__libc_init_array+0x2a>
 800128e:	3401      	adds	r4, #1
 8001290:	f855 3f04 	ldr.w	r3, [r5, #4]!
 8001294:	4798      	blx	r3
 8001296:	42a6      	cmp	r6, r4
 8001298:	d1f9      	bne.n	800128e <__libc_init_array+0x1e>
 800129a:	f646 66cc 	movw	r6, #28364	; 0x6ecc
 800129e:	f646 65c4 	movw	r5, #28356	; 0x6ec4
 80012a2:	f6c0 0500 	movt	r5, #2048	; 0x800
 80012a6:	f6c0 0600 	movt	r6, #2048	; 0x800
 80012aa:	1b76      	subs	r6, r6, r5
 80012ac:	f005 fd0a 	bl	8006cc4 <_init>
 80012b0:	10b6      	asrs	r6, r6, #2
 80012b2:	bf1c      	itt	ne
 80012b4:	3d04      	subne	r5, #4
 80012b6:	2400      	movne	r4, #0
 80012b8:	d006      	beq.n	80012c8 <__libc_init_array+0x58>
 80012ba:	3401      	adds	r4, #1
 80012bc:	f855 3f04 	ldr.w	r3, [r5, #4]!
 80012c0:	4798      	blx	r3
 80012c2:	42a6      	cmp	r6, r4
 80012c4:	d1f9      	bne.n	80012ba <__libc_init_array+0x4a>
 80012c6:	bd70      	pop	{r4, r5, r6, pc}
 80012c8:	bd70      	pop	{r4, r5, r6, pc}
 80012ca:	bf00      	nop

080012cc <memset>:
 80012cc:	b4f0      	push	{r4, r5, r6, r7}
 80012ce:	0784      	lsls	r4, r0, #30
 80012d0:	d043      	beq.n	800135a <memset+0x8e>
 80012d2:	1e54      	subs	r4, r2, #1
 80012d4:	2a00      	cmp	r2, #0
 80012d6:	d03e      	beq.n	8001356 <memset+0x8a>
 80012d8:	b2cd      	uxtb	r5, r1
 80012da:	4603      	mov	r3, r0
 80012dc:	e003      	b.n	80012e6 <memset+0x1a>
 80012de:	1e62      	subs	r2, r4, #1
 80012e0:	2c00      	cmp	r4, #0
 80012e2:	d038      	beq.n	8001356 <memset+0x8a>
 80012e4:	4614      	mov	r4, r2
 80012e6:	f803 5b01 	strb.w	r5, [r3], #1
 80012ea:	079a      	lsls	r2, r3, #30
 80012ec:	d1f7      	bne.n	80012de <memset+0x12>
 80012ee:	2c03      	cmp	r4, #3
 80012f0:	d92a      	bls.n	8001348 <memset+0x7c>
 80012f2:	b2cd      	uxtb	r5, r1
 80012f4:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 80012f8:	2c0f      	cmp	r4, #15
 80012fa:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 80012fe:	d915      	bls.n	800132c <memset+0x60>
 8001300:	f1a4 0710 	sub.w	r7, r4, #16
 8001304:	093f      	lsrs	r7, r7, #4
 8001306:	f103 0610 	add.w	r6, r3, #16
 800130a:	eb06 1607 	add.w	r6, r6, r7, lsl #4
 800130e:	461a      	mov	r2, r3
 8001310:	6015      	str	r5, [r2, #0]
 8001312:	6055      	str	r5, [r2, #4]
 8001314:	6095      	str	r5, [r2, #8]
 8001316:	60d5      	str	r5, [r2, #12]
 8001318:	3210      	adds	r2, #16
 800131a:	42b2      	cmp	r2, r6
 800131c:	d1f8      	bne.n	8001310 <memset+0x44>
 800131e:	f004 040f 	and.w	r4, r4, #15
 8001322:	3701      	adds	r7, #1
 8001324:	2c03      	cmp	r4, #3
 8001326:	eb03 1307 	add.w	r3, r3, r7, lsl #4
 800132a:	d90d      	bls.n	8001348 <memset+0x7c>
 800132c:	461e      	mov	r6, r3
 800132e:	4622      	mov	r2, r4
 8001330:	3a04      	subs	r2, #4
 8001332:	2a03      	cmp	r2, #3
 8001334:	f846 5b04 	str.w	r5, [r6], #4
 8001338:	d8fa      	bhi.n	8001330 <memset+0x64>
 800133a:	1f22      	subs	r2, r4, #4
 800133c:	f022 0203 	bic.w	r2, r2, #3
 8001340:	3204      	adds	r2, #4
 8001342:	4413      	add	r3, r2
 8001344:	f004 0403 	and.w	r4, r4, #3
 8001348:	b12c      	cbz	r4, 8001356 <memset+0x8a>
 800134a:	b2c9      	uxtb	r1, r1
 800134c:	441c      	add	r4, r3
 800134e:	f803 1b01 	strb.w	r1, [r3], #1
 8001352:	42a3      	cmp	r3, r4
 8001354:	d1fb      	bne.n	800134e <memset+0x82>
 8001356:	bcf0      	pop	{r4, r5, r6, r7}
 8001358:	4770      	bx	lr
 800135a:	4614      	mov	r4, r2
 800135c:	4603      	mov	r3, r0
 800135e:	e7c6      	b.n	80012ee <memset+0x22>

08001360 <__register_exitproc>:
 8001360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001362:	f646 44e4 	movw	r4, #27876	; 0x6ce4
 8001366:	f6c0 0400 	movt	r4, #2048	; 0x800
 800136a:	b085      	sub	sp, #20
 800136c:	6826      	ldr	r6, [r4, #0]
 800136e:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
 8001372:	4607      	mov	r7, r0
 8001374:	2c00      	cmp	r4, #0
 8001376:	d044      	beq.n	8001402 <__register_exitproc+0xa2>
 8001378:	6865      	ldr	r5, [r4, #4]
 800137a:	2d1f      	cmp	r5, #31
 800137c:	dd21      	ble.n	80013c2 <__register_exitproc+0x62>
 800137e:	f645 54c5 	movw	r4, #24005	; 0x5dc5
 8001382:	f6c0 0400 	movt	r4, #2048	; 0x800
 8001386:	b91c      	cbnz	r4, 8001390 <__register_exitproc+0x30>
 8001388:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800138c:	b005      	add	sp, #20
 800138e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001390:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8001394:	9103      	str	r1, [sp, #12]
 8001396:	9202      	str	r2, [sp, #8]
 8001398:	9301      	str	r3, [sp, #4]
 800139a:	f004 fd13 	bl	8005dc4 <malloc>
 800139e:	9903      	ldr	r1, [sp, #12]
 80013a0:	9a02      	ldr	r2, [sp, #8]
 80013a2:	9b01      	ldr	r3, [sp, #4]
 80013a4:	4604      	mov	r4, r0
 80013a6:	2800      	cmp	r0, #0
 80013a8:	d0ee      	beq.n	8001388 <__register_exitproc+0x28>
 80013aa:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
 80013ae:	2000      	movs	r0, #0
 80013b0:	6025      	str	r5, [r4, #0]
 80013b2:	6060      	str	r0, [r4, #4]
 80013b4:	4605      	mov	r5, r0
 80013b6:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
 80013ba:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
 80013be:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
 80013c2:	b93f      	cbnz	r7, 80013d4 <__register_exitproc+0x74>
 80013c4:	1cab      	adds	r3, r5, #2
 80013c6:	2000      	movs	r0, #0
 80013c8:	3501      	adds	r5, #1
 80013ca:	6065      	str	r5, [r4, #4]
 80013cc:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80013d0:	b005      	add	sp, #20
 80013d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013d4:	eb04 0085 	add.w	r0, r4, r5, lsl #2
 80013d8:	f04f 0c01 	mov.w	ip, #1
 80013dc:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
 80013e0:	f8d4 6188 	ldr.w	r6, [r4, #392]	; 0x188
 80013e4:	fa0c f205 	lsl.w	r2, ip, r5
 80013e8:	4316      	orrs	r6, r2
 80013ea:	2f02      	cmp	r7, #2
 80013ec:	f8c4 6188 	str.w	r6, [r4, #392]	; 0x188
 80013f0:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
 80013f4:	bf02      	ittt	eq
 80013f6:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 80013fa:	431a      	orreq	r2, r3
 80013fc:	f8c4 218c 	streq.w	r2, [r4, #396]	; 0x18c
 8001400:	e7e0      	b.n	80013c4 <__register_exitproc+0x64>
 8001402:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
 8001406:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
 800140a:	e7b5      	b.n	8001378 <__register_exitproc+0x18>

0800140c <register_fini>:
 800140c:	f240 0300 	movw	r3, #0
 8001410:	f2c0 0300 	movt	r3, #0
 8001414:	b12b      	cbz	r3, 8001422 <register_fini+0x16>
 8001416:	f241 203d 	movw	r0, #4669	; 0x123d
 800141a:	f6c0 0000 	movt	r0, #2048	; 0x800
 800141e:	f7ff bf07 	b.w	8001230 <atexit>
 8001422:	4770      	bx	lr

08001424 <findslot>:
 8001424:	f240 4228 	movw	r2, #1064	; 0x428
 8001428:	f2c2 0200 	movt	r2, #8192	; 0x2000
 800142c:	b510      	push	{r4, lr}
 800142e:	4604      	mov	r4, r0
 8001430:	6810      	ldr	r0, [r2, #0]
 8001432:	b108      	cbz	r0, 8001438 <findslot+0x14>
 8001434:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001436:	b163      	cbz	r3, 8001452 <findslot+0x2e>
 8001438:	2c13      	cmp	r4, #19
 800143a:	d80e      	bhi.n	800145a <findslot+0x36>
 800143c:	f640 03c0 	movw	r3, #2240	; 0x8c0
 8001440:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8001444:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 8001448:	3201      	adds	r2, #1
 800144a:	d006      	beq.n	800145a <findslot+0x36>
 800144c:	eb03 00c4 	add.w	r0, r3, r4, lsl #3
 8001450:	bd10      	pop	{r4, pc}
 8001452:	f000 fff7 	bl	8002444 <__sinit>
 8001456:	2c13      	cmp	r4, #19
 8001458:	d9f0      	bls.n	800143c <findslot+0x18>
 800145a:	2000      	movs	r0, #0
 800145c:	bd10      	pop	{r4, pc}
 800145e:	bf00      	nop

08001460 <checkerror.part.0>:
 8001460:	b570      	push	{r4, r5, r6, lr}
 8001462:	f000 ffe3 	bl	800242c <__errno>
 8001466:	2513      	movs	r5, #19
 8001468:	4604      	mov	r4, r0
 800146a:	2600      	movs	r6, #0
 800146c:	4628      	mov	r0, r5
 800146e:	4631      	mov	r1, r6
 8001470:	beab      	bkpt	0x00ab
 8001472:	4605      	mov	r5, r0
 8001474:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001478:	6025      	str	r5, [r4, #0]
 800147a:	bd70      	pop	{r4, r5, r6, pc}

0800147c <_swiread>:
 800147c:	b530      	push	{r4, r5, lr}
 800147e:	b085      	sub	sp, #20
 8001480:	2406      	movs	r4, #6
 8001482:	9001      	str	r0, [sp, #4]
 8001484:	9102      	str	r1, [sp, #8]
 8001486:	9203      	str	r2, [sp, #12]
 8001488:	ad01      	add	r5, sp, #4
 800148a:	4620      	mov	r0, r4
 800148c:	4629      	mov	r1, r5
 800148e:	beab      	bkpt	0x00ab
 8001490:	4604      	mov	r4, r0
 8001492:	1c61      	adds	r1, r4, #1
 8001494:	bf18      	it	ne
 8001496:	4620      	movne	r0, r4
 8001498:	d001      	beq.n	800149e <_swiread+0x22>
 800149a:	b005      	add	sp, #20
 800149c:	bd30      	pop	{r4, r5, pc}
 800149e:	f7ff ffdf 	bl	8001460 <checkerror.part.0>
 80014a2:	b005      	add	sp, #20
 80014a4:	bd30      	pop	{r4, r5, pc}
 80014a6:	bf00      	nop

080014a8 <_read>:
 80014a8:	b570      	push	{r4, r5, r6, lr}
 80014aa:	460e      	mov	r6, r1
 80014ac:	4615      	mov	r5, r2
 80014ae:	f7ff ffb9 	bl	8001424 <findslot>
 80014b2:	4604      	mov	r4, r0
 80014b4:	b160      	cbz	r0, 80014d0 <_read+0x28>
 80014b6:	4631      	mov	r1, r6
 80014b8:	462a      	mov	r2, r5
 80014ba:	6800      	ldr	r0, [r0, #0]
 80014bc:	f7ff ffde 	bl	800147c <_swiread>
 80014c0:	1c46      	adds	r6, r0, #1
 80014c2:	bf1f      	itttt	ne
 80014c4:	6863      	ldrne	r3, [r4, #4]
 80014c6:	ebc0 0005 	rsbne	r0, r0, r5
 80014ca:	181b      	addne	r3, r3, r0
 80014cc:	6063      	strne	r3, [r4, #4]
 80014ce:	bd70      	pop	{r4, r5, r6, pc}
 80014d0:	f000 ffac 	bl	800242c <__errno>
 80014d4:	2309      	movs	r3, #9
 80014d6:	6003      	str	r3, [r0, #0]
 80014d8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014dc:	bd70      	pop	{r4, r5, r6, pc}
 80014de:	bf00      	nop

080014e0 <_swilseek>:
 80014e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014e2:	b083      	sub	sp, #12
 80014e4:	460c      	mov	r4, r1
 80014e6:	4616      	mov	r6, r2
 80014e8:	f7ff ff9c 	bl	8001424 <findslot>
 80014ec:	4605      	mov	r5, r0
 80014ee:	2800      	cmp	r0, #0
 80014f0:	d03b      	beq.n	800156a <_swilseek+0x8a>
 80014f2:	2e02      	cmp	r6, #2
 80014f4:	d828      	bhi.n	8001548 <_swilseek+0x68>
 80014f6:	2e01      	cmp	r6, #1
 80014f8:	d023      	beq.n	8001542 <_swilseek+0x62>
 80014fa:	2e02      	cmp	r6, #2
 80014fc:	d012      	beq.n	8001524 <_swilseek+0x44>
 80014fe:	466e      	mov	r6, sp
 8001500:	682b      	ldr	r3, [r5, #0]
 8001502:	270a      	movs	r7, #10
 8001504:	e88d 0018 	stmia.w	sp, {r3, r4}
 8001508:	4638      	mov	r0, r7
 800150a:	4631      	mov	r1, r6
 800150c:	beab      	bkpt	0x00ab
 800150e:	4606      	mov	r6, r0
 8001510:	1c77      	adds	r7, r6, #1
 8001512:	bf18      	it	ne
 8001514:	4630      	movne	r0, r6
 8001516:	d01e      	beq.n	8001556 <_swilseek+0x76>
 8001518:	2800      	cmp	r0, #0
 800151a:	db23      	blt.n	8001564 <_swilseek+0x84>
 800151c:	606c      	str	r4, [r5, #4]
 800151e:	4620      	mov	r0, r4
 8001520:	b003      	add	sp, #12
 8001522:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001524:	6803      	ldr	r3, [r0, #0]
 8001526:	ae02      	add	r6, sp, #8
 8001528:	270c      	movs	r7, #12
 800152a:	f846 3d08 	str.w	r3, [r6, #-8]!
 800152e:	4638      	mov	r0, r7
 8001530:	4631      	mov	r1, r6
 8001532:	beab      	bkpt	0x00ab
 8001534:	4607      	mov	r7, r0
 8001536:	1c7a      	adds	r2, r7, #1
 8001538:	bf18      	it	ne
 800153a:	4638      	movne	r0, r7
 800153c:	d00e      	beq.n	800155c <_swilseek+0x7c>
 800153e:	4404      	add	r4, r0
 8001540:	e7de      	b.n	8001500 <_swilseek+0x20>
 8001542:	6843      	ldr	r3, [r0, #4]
 8001544:	18e4      	adds	r4, r4, r3
 8001546:	d5da      	bpl.n	80014fe <_swilseek+0x1e>
 8001548:	f000 ff70 	bl	800242c <__errno>
 800154c:	2316      	movs	r3, #22
 800154e:	6003      	str	r3, [r0, #0]
 8001550:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001554:	e7e4      	b.n	8001520 <_swilseek+0x40>
 8001556:	f7ff ff83 	bl	8001460 <checkerror.part.0>
 800155a:	e7dd      	b.n	8001518 <_swilseek+0x38>
 800155c:	f7ff ff80 	bl	8001460 <checkerror.part.0>
 8001560:	1c43      	adds	r3, r0, #1
 8001562:	d1ec      	bne.n	800153e <_swilseek+0x5e>
 8001564:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001568:	e7da      	b.n	8001520 <_swilseek+0x40>
 800156a:	f000 ff5f 	bl	800242c <__errno>
 800156e:	2309      	movs	r3, #9
 8001570:	6003      	str	r3, [r0, #0]
 8001572:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001576:	e7d3      	b.n	8001520 <_swilseek+0x40>

08001578 <_lseek>:
 8001578:	f7ff bfb2 	b.w	80014e0 <_swilseek>

0800157c <_swiwrite>:
 800157c:	b530      	push	{r4, r5, lr}
 800157e:	b085      	sub	sp, #20
 8001580:	2405      	movs	r4, #5
 8001582:	9001      	str	r0, [sp, #4]
 8001584:	9102      	str	r1, [sp, #8]
 8001586:	9203      	str	r2, [sp, #12]
 8001588:	ad01      	add	r5, sp, #4
 800158a:	4620      	mov	r0, r4
 800158c:	4629      	mov	r1, r5
 800158e:	beab      	bkpt	0x00ab
 8001590:	4604      	mov	r4, r0
 8001592:	1c61      	adds	r1, r4, #1
 8001594:	bf18      	it	ne
 8001596:	4620      	movne	r0, r4
 8001598:	d001      	beq.n	800159e <_swiwrite+0x22>
 800159a:	b005      	add	sp, #20
 800159c:	bd30      	pop	{r4, r5, pc}
 800159e:	f7ff ff5f 	bl	8001460 <checkerror.part.0>
 80015a2:	b005      	add	sp, #20
 80015a4:	bd30      	pop	{r4, r5, pc}
 80015a6:	bf00      	nop

080015a8 <_write>:
 80015a8:	b570      	push	{r4, r5, r6, lr}
 80015aa:	460e      	mov	r6, r1
 80015ac:	4615      	mov	r5, r2
 80015ae:	f7ff ff39 	bl	8001424 <findslot>
 80015b2:	4604      	mov	r4, r0
 80015b4:	b1e0      	cbz	r0, 80015f0 <_write+0x48>
 80015b6:	4631      	mov	r1, r6
 80015b8:	6800      	ldr	r0, [r0, #0]
 80015ba:	462a      	mov	r2, r5
 80015bc:	f7ff ffde 	bl	800157c <_swiwrite>
 80015c0:	1e03      	subs	r3, r0, #0
 80015c2:	db12      	blt.n	80015ea <_write+0x42>
 80015c4:	6862      	ldr	r2, [r4, #4]
 80015c6:	1ae8      	subs	r0, r5, r3
 80015c8:	4402      	add	r2, r0
 80015ca:	429d      	cmp	r5, r3
 80015cc:	6062      	str	r2, [r4, #4]
 80015ce:	d000      	beq.n	80015d2 <_write+0x2a>
 80015d0:	bd70      	pop	{r4, r5, r6, pc}
 80015d2:	f000 ff2b 	bl	800242c <__errno>
 80015d6:	2513      	movs	r5, #19
 80015d8:	4604      	mov	r4, r0
 80015da:	2600      	movs	r6, #0
 80015dc:	4628      	mov	r0, r5
 80015de:	4631      	mov	r1, r6
 80015e0:	beab      	bkpt	0x00ab
 80015e2:	4605      	mov	r5, r0
 80015e4:	2000      	movs	r0, #0
 80015e6:	6025      	str	r5, [r4, #0]
 80015e8:	bd70      	pop	{r4, r5, r6, pc}
 80015ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015ee:	e7ef      	b.n	80015d0 <_write+0x28>
 80015f0:	f000 ff1c 	bl	800242c <__errno>
 80015f4:	2309      	movs	r3, #9
 80015f6:	6003      	str	r3, [r0, #0]
 80015f8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015fc:	bd70      	pop	{r4, r5, r6, pc}
 80015fe:	bf00      	nop

08001600 <_close>:
 8001600:	b570      	push	{r4, r5, r6, lr}
 8001602:	b082      	sub	sp, #8
 8001604:	4604      	mov	r4, r0
 8001606:	f7ff ff0d 	bl	8001424 <findslot>
 800160a:	4605      	mov	r5, r0
 800160c:	b340      	cbz	r0, 8001660 <_close+0x60>
 800160e:	3c01      	subs	r4, #1
 8001610:	2c01      	cmp	r4, #1
 8001612:	d912      	bls.n	800163a <_close+0x3a>
 8001614:	682b      	ldr	r3, [r5, #0]
 8001616:	ac02      	add	r4, sp, #8
 8001618:	2602      	movs	r6, #2
 800161a:	f844 3d04 	str.w	r3, [r4, #-4]!
 800161e:	4630      	mov	r0, r6
 8001620:	4621      	mov	r1, r4
 8001622:	beab      	bkpt	0x00ab
 8001624:	4604      	mov	r4, r0
 8001626:	1c66      	adds	r6, r4, #1
 8001628:	bf18      	it	ne
 800162a:	4620      	movne	r0, r4
 800162c:	d013      	beq.n	8001656 <_close+0x56>
 800162e:	b910      	cbnz	r0, 8001636 <_close+0x36>
 8001630:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001634:	602b      	str	r3, [r5, #0]
 8001636:	b002      	add	sp, #8
 8001638:	bd70      	pop	{r4, r5, r6, pc}
 800163a:	f640 03c0 	movw	r3, #2240	; 0x8c0
 800163e:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8001642:	689a      	ldr	r2, [r3, #8]
 8001644:	691b      	ldr	r3, [r3, #16]
 8001646:	429a      	cmp	r2, r3
 8001648:	bf02      	ittt	eq
 800164a:	f04f 33ff 	moveq.w	r3, #4294967295	; 0xffffffff
 800164e:	6003      	streq	r3, [r0, #0]
 8001650:	2000      	moveq	r0, #0
 8001652:	d1df      	bne.n	8001614 <_close+0x14>
 8001654:	e7ef      	b.n	8001636 <_close+0x36>
 8001656:	f7ff ff03 	bl	8001460 <checkerror.part.0>
 800165a:	2800      	cmp	r0, #0
 800165c:	d1eb      	bne.n	8001636 <_close+0x36>
 800165e:	e7e7      	b.n	8001630 <_close+0x30>
 8001660:	f000 fee4 	bl	800242c <__errno>
 8001664:	2309      	movs	r3, #9
 8001666:	6003      	str	r3, [r0, #0]
 8001668:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800166c:	e7e3      	b.n	8001636 <_close+0x36>
 800166e:	bf00      	nop

08001670 <_sbrk>:
 8001670:	b508      	push	{r3, lr}
 8001672:	f640 03bc 	movw	r3, #2236	; 0x8bc
 8001676:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800167a:	681a      	ldr	r2, [r3, #0]
 800167c:	b16a      	cbz	r2, 800169a <_sbrk+0x2a>
 800167e:	4410      	add	r0, r2
 8001680:	4669      	mov	r1, sp
 8001682:	4288      	cmp	r0, r1
 8001684:	d802      	bhi.n	800168c <_sbrk+0x1c>
 8001686:	6018      	str	r0, [r3, #0]
 8001688:	4610      	mov	r0, r2
 800168a:	bd08      	pop	{r3, pc}
 800168c:	f000 fece 	bl	800242c <__errno>
 8001690:	230c      	movs	r3, #12
 8001692:	6003      	str	r3, [r0, #0]
 8001694:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001698:	bd08      	pop	{r3, pc}
 800169a:	f640 12b0 	movw	r2, #2480	; 0x9b0
 800169e:	f2c2 0200 	movt	r2, #8192	; 0x2000
 80016a2:	601a      	str	r2, [r3, #0]
 80016a4:	e7eb      	b.n	800167e <_sbrk+0xe>
 80016a6:	bf00      	nop

080016a8 <_swistat>:
 80016a8:	b570      	push	{r4, r5, r6, lr}
 80016aa:	460c      	mov	r4, r1
 80016ac:	f7ff feba 	bl	8001424 <findslot>
 80016b0:	4605      	mov	r5, r0
 80016b2:	b1b8      	cbz	r0, 80016e4 <_swistat+0x3c>
 80016b4:	6863      	ldr	r3, [r4, #4]
 80016b6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80016ba:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80016be:	6063      	str	r3, [r4, #4]
 80016c0:	62e2      	str	r2, [r4, #44]	; 0x2c
 80016c2:	260c      	movs	r6, #12
 80016c4:	4630      	mov	r0, r6
 80016c6:	4629      	mov	r1, r5
 80016c8:	beab      	bkpt	0x00ab
 80016ca:	4605      	mov	r5, r0
 80016cc:	1c6a      	adds	r2, r5, #1
 80016ce:	bf18      	it	ne
 80016d0:	4628      	movne	r0, r5
 80016d2:	d002      	beq.n	80016da <_swistat+0x32>
 80016d4:	6120      	str	r0, [r4, #16]
 80016d6:	2000      	movs	r0, #0
 80016d8:	bd70      	pop	{r4, r5, r6, pc}
 80016da:	f7ff fec1 	bl	8001460 <checkerror.part.0>
 80016de:	1c43      	adds	r3, r0, #1
 80016e0:	d1f8      	bne.n	80016d4 <_swistat+0x2c>
 80016e2:	bd70      	pop	{r4, r5, r6, pc}
 80016e4:	f000 fea2 	bl	800242c <__errno>
 80016e8:	2309      	movs	r3, #9
 80016ea:	6003      	str	r3, [r0, #0]
 80016ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80016f0:	bd70      	pop	{r4, r5, r6, pc}
 80016f2:	bf00      	nop

080016f4 <_fstat>:
 80016f4:	b538      	push	{r3, r4, r5, lr}
 80016f6:	460c      	mov	r4, r1
 80016f8:	4605      	mov	r5, r0
 80016fa:	2100      	movs	r1, #0
 80016fc:	4620      	mov	r0, r4
 80016fe:	223c      	movs	r2, #60	; 0x3c
 8001700:	f7ff fde4 	bl	80012cc <memset>
 8001704:	4628      	mov	r0, r5
 8001706:	4621      	mov	r1, r4
 8001708:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800170c:	f7ff bfcc 	b.w	80016a8 <_swistat>

08001710 <_isatty>:
 8001710:	b570      	push	{r4, r5, r6, lr}
 8001712:	f7ff fe87 	bl	8001424 <findslot>
 8001716:	4604      	mov	r4, r0
 8001718:	b198      	cbz	r0, 8001742 <_isatty+0x32>
 800171a:	2509      	movs	r5, #9
 800171c:	4628      	mov	r0, r5
 800171e:	4621      	mov	r1, r4
 8001720:	beab      	bkpt	0x00ab
 8001722:	4604      	mov	r4, r0
 8001724:	2c01      	cmp	r4, #1
 8001726:	d00a      	beq.n	800173e <_isatty+0x2e>
 8001728:	f000 fe80 	bl	800242c <__errno>
 800172c:	2413      	movs	r4, #19
 800172e:	4605      	mov	r5, r0
 8001730:	2600      	movs	r6, #0
 8001732:	4620      	mov	r0, r4
 8001734:	4631      	mov	r1, r6
 8001736:	beab      	bkpt	0x00ab
 8001738:	4606      	mov	r6, r0
 800173a:	2400      	movs	r4, #0
 800173c:	602e      	str	r6, [r5, #0]
 800173e:	4620      	mov	r0, r4
 8001740:	bd70      	pop	{r4, r5, r6, pc}
 8001742:	f000 fe73 	bl	800242c <__errno>
 8001746:	2309      	movs	r3, #9
 8001748:	6003      	str	r3, [r0, #0]
 800174a:	e7f8      	b.n	800173e <_isatty+0x2e>

0800174c <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 800174c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001784 <LoopForever+0x2>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8001750:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8001752:	e003      	b.n	800175c <LoopCopyDataInit>

08001754 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8001754:	4b0c      	ldr	r3, [pc, #48]	; (8001788 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8001756:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8001758:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 800175a:	3104      	adds	r1, #4

0800175c <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 800175c:	480b      	ldr	r0, [pc, #44]	; (800178c <LoopForever+0xa>)
	ldr	r3, =_edata
 800175e:	4b0c      	ldr	r3, [pc, #48]	; (8001790 <LoopForever+0xe>)
	adds	r2, r0, r1
 8001760:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8001762:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8001764:	d3f6      	bcc.n	8001754 <CopyDataInit>
	ldr	r2, =_sbss
 8001766:	4a0b      	ldr	r2, [pc, #44]	; (8001794 <LoopForever+0x12>)
	b	LoopFillZerobss
 8001768:	e002      	b.n	8001770 <LoopFillZerobss>

0800176a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 800176a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 800176c:	f842 3b04 	str.w	r3, [r2], #4

08001770 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8001770:	4b09      	ldr	r3, [pc, #36]	; (8001798 <LoopForever+0x16>)
	cmp	r2, r3
 8001772:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8001774:	d3f9      	bcc.n	800176a <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8001776:	f000 f871 	bl	800185c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800177a:	f7ff fd79 	bl	8001270 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 800177e:	f000 f80f 	bl	80017a0 <main>

08001782 <LoopForever>:

LoopForever:
    b LoopForever
 8001782:	e7fe      	b.n	8001782 <LoopForever>

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001784:	20009fff 	.word	0x20009fff
/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
  b	LoopCopyDataInit

CopyDataInit:
	ldr	r3, =_sidata
 8001788:	08006ed0 	.word	0x08006ed0
	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
	adds	r1, r1, #4

LoopCopyDataInit:
	ldr	r0, =_sdata
 800178c:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8001790:	200008a0 	.word	0x200008a0
	adds	r2, r0, r1
	cmp	r2, r3
	bcc	CopyDataInit
	ldr	r2, =_sbss
 8001794:	200008a0 	.word	0x200008a0
FillZerobss:
	movs	r3, #0
	str	r3, [r2], #4

LoopFillZerobss:
	ldr	r3, = _ebss
 8001798:	200009b0 	.word	0x200009b0

0800179c <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 800179c:	e7fe      	b.n	800179c <ADC1_2_IRQHandler>
	...

080017a0 <main>:
  * @brief  Main program
  * @param  None
  * @retval None
  */
int main(void)
{
 80017a0:	b530      	push	{r4, r5, lr}
         duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
         handled in milliseconds basis.
       - Set NVIC Group Priority to 4
       - Low Level Initialization
     */
	setbuf(stdout,NULL);
 80017a2:	4b28      	ldr	r3, [pc, #160]	; (8001844 <main+0xa4>)
 80017a4:	681b      	ldr	r3, [r3, #0]
  * @brief  Main program
  * @param  None
  * @retval None
  */
int main(void)
{
 80017a6:	b091      	sub	sp, #68	; 0x44
         duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
         handled in milliseconds basis.
       - Set NVIC Group Priority to 4
       - Low Level Initialization
     */
	setbuf(stdout,NULL);
 80017a8:	6898      	ldr	r0, [r3, #8]
 80017aa:	2100      	movs	r1, #0
 80017ac:	f001 fa08 	bl	8002bc0 <setbuf>
	printf("Hello world!");
 80017b0:	4825      	ldr	r0, [pc, #148]	; (8001848 <main+0xa8>)
 80017b2:	f001 f9a3 	bl	8002afc <printf>
    HAL_Delay(100);
 80017b6:	2064      	movs	r0, #100	; 0x64
 80017b8:	f000 fcfa 	bl	80021b0 <HAL_Delay>
	printf("100ms later... \n");
 80017bc:	4823      	ldr	r0, [pc, #140]	; (800184c <main+0xac>)
 80017be:	f001 f9e3 	bl	8002b88 <puts>
  HAL_Init();
 80017c2:	f000 fcd5 	bl	8002170 <HAL_Init>
  RCC_ClkInitTypeDef RCC_ClkInitStruct;
  RCC_OscInitTypeDef RCC_OscInitStruct;
  
  /* Enable HSE Oscillator and activate PLL with HSE as source */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80017c6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
{
  RCC_ClkInitTypeDef RCC_ClkInitStruct;
  RCC_OscInitTypeDef RCC_OscInitStruct;
  
  /* Enable HSE Oscillator and activate PLL with HSE as source */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80017ca:	2401      	movs	r4, #1
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80017cc:	9307      	str	r3, [sp, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80017ce:	2200      	movs	r2, #0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80017d0:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80017d2:	930e      	str	r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct)!= HAL_OK)
 80017d4:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80017d6:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
{
  RCC_ClkInitTypeDef RCC_ClkInitStruct;
  RCC_OscInitTypeDef RCC_OscInitStruct;
  
  /* Enable HSE Oscillator and activate PLL with HSE as source */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80017da:	9406      	str	r4, [sp, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80017dc:	9208      	str	r2, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80017de:	950d      	str	r5, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80017e0:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct)!= HAL_OK)
 80017e2:	f000 f879 	bl	80018d8 <HAL_RCC_OscConfig>
 80017e6:	b100      	cbz	r0, 80017ea <main+0x4a>
 80017e8:	e7fe      	b.n	80017e8 <main+0x48>
    Error_Handler();
  }

  /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 
     clocks dividers */
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 80017ea:	230f      	movs	r3, #15
 80017ec:	9301      	str	r3, [sp, #4]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80017ee:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;  
 80017f0:	f44f 6380 	mov.w	r3, #1024	; 0x400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80017f4:	9005      	str	r0, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2)!= HAL_OK)
 80017f6:	4629      	mov	r1, r5
 80017f8:	a801      	add	r0, sp, #4
  }

  /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 
     clocks dividers */
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80017fa:	9502      	str	r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;  
 80017fc:	9304      	str	r3, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2)!= HAL_OK)
 80017fe:	f000 fb3b 	bl	8001e78 <HAL_RCC_ClockConfig>
 8001802:	b100      	cbz	r0, 8001806 <main+0x66>
 8001804:	e7fe      	b.n	8001804 <main+0x64>

  /* Configure the system clock to 72 Mhz */
  SystemClock_Config();
  
  /* -1- Enable GPIOE Clock (to be able to program the configuration registers) */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001806:	4b12      	ldr	r3, [pc, #72]	; (8001850 <main+0xb0>)

  /* -2- Configure PE.8 to PE.15 IOs in output push-pull mode to drive external LEDs */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001808:	4912      	ldr	r1, [pc, #72]	; (8001854 <main+0xb4>)

  /* Configure the system clock to 72 Mhz */
  SystemClock_Config();
  
  /* -1- Enable GPIOE Clock (to be able to program the configuration registers) */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800180a:	695a      	ldr	r2, [r3, #20]
  GPIO_InitStruct.Pin = GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct); 
 800180c:	4812      	ldr	r0, [pc, #72]	; (8001858 <main+0xb8>)

  /* Configure the system clock to 72 Mhz */
  SystemClock_Config();
  
  /* -1- Enable GPIOE Clock (to be able to program the configuration registers) */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800180e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8001812:	615a      	str	r2, [r3, #20]
 8001814:	695b      	ldr	r3, [r3, #20]

  /* -2- Configure PE.8 to PE.15 IOs in output push-pull mode to drive external LEDs */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001816:	608c      	str	r4, [r1, #8]

  /* Configure the system clock to 72 Mhz */
  SystemClock_Config();
  
  /* -1- Enable GPIOE Clock (to be able to program the configuration registers) */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001818:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800181c:	9306      	str	r3, [sp, #24]
 800181e:	9b06      	ldr	r3, [sp, #24]

  /* -2- Configure PE.8 to PE.15 IOs in output push-pull mode to drive external LEDs */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001820:	f44f 7300 	mov.w	r3, #512	; 0x200
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001824:	e881 0018 	stmia.w	r1, {r3, r4}
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001828:	2303      	movs	r3, #3
 800182a:	60cb      	str	r3, [r1, #12]
  
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct); 
 800182c:	f000 fd28 	bl	8002280 <HAL_GPIO_Init>

  /* -3- Toggle PE.8 to PE.15 IOs in an infinite loop */  
  while (1)
  {
    HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_9);
 8001830:	4809      	ldr	r0, [pc, #36]	; (8001858 <main+0xb8>)
 8001832:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001836:	f000 fdf5 	bl	8002424 <HAL_GPIO_TogglePin>
    /* Insert delay 100 ms */
    HAL_Delay(100);
 800183a:	2064      	movs	r0, #100	; 0x64
 800183c:	f000 fcb8 	bl	80021b0 <HAL_Delay>
 8001840:	e7f6      	b.n	8001830 <main+0x90>
 8001842:	bf00      	nop
 8001844:	20000428 	.word	0x20000428
 8001848:	08006ce8 	.word	0x08006ce8
 800184c:	08006cf5 	.word	0x08006cf5
 8001850:	40021000 	.word	0x40021000
 8001854:	20000960 	.word	0x20000960
 8001858:	48000400 	.word	0x48000400

0800185c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800185c:	4a15      	ldr	r2, [pc, #84]	; (80018b4 <SystemInit+0x58>)
 800185e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001862:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001866:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800186a:	4b13      	ldr	r3, [pc, #76]	; (80018b8 <SystemInit+0x5c>)
 800186c:	6819      	ldr	r1, [r3, #0]
 800186e:	f041 0101 	orr.w	r1, r1, #1
 8001872:	6019      	str	r1, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR &= 0xF87FC00C;
 8001874:	6858      	ldr	r0, [r3, #4]
 8001876:	4911      	ldr	r1, [pc, #68]	; (80018bc <SystemInit+0x60>)
 8001878:	4001      	ands	r1, r0
 800187a:	6059      	str	r1, [r3, #4]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800187c:	6819      	ldr	r1, [r3, #0]
 800187e:	f021 7184 	bic.w	r1, r1, #17301504	; 0x1080000
 8001882:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8001886:	6019      	str	r1, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8001888:	6819      	ldr	r1, [r3, #0]
 800188a:	f421 2180 	bic.w	r1, r1, #262144	; 0x40000
 800188e:	6019      	str	r1, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8001890:	6859      	ldr	r1, [r3, #4]
 8001892:	f421 01fe 	bic.w	r1, r1, #8323072	; 0x7f0000
 8001896:	6059      	str	r1, [r3, #4]

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 8001898:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800189a:	f021 010f 	bic.w	r1, r1, #15
 800189e:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 80018a0:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80018a2:	4907      	ldr	r1, [pc, #28]	; (80018c0 <SystemInit+0x64>)
 80018a4:	4001      	ands	r1, r0
 80018a6:	6319      	str	r1, [r3, #48]	; 0x30

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80018a8:	2100      	movs	r1, #0
 80018aa:	6099      	str	r1, [r3, #8]

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80018ac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80018b0:	6093      	str	r3, [r2, #8]
 80018b2:	4770      	bx	lr
 80018b4:	e000ed00 	.word	0xe000ed00
 80018b8:	40021000 	.word	0x40021000
 80018bc:	f87fc00c 	.word	0xf87fc00c
 80018c0:	ff00fccc 	.word	0xff00fccc

080018c4 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 80018c4:	4770      	bx	lr

080018c6 <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 80018c6:	e7fe      	b.n	80018c6 <HardFault_Handler>

080018c8 <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 80018c8:	e7fe      	b.n	80018c8 <MemManage_Handler>

080018ca <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 80018ca:	e7fe      	b.n	80018ca <BusFault_Handler>

080018cc <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 80018cc:	e7fe      	b.n	80018cc <UsageFault_Handler>

080018ce <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 80018ce:	4770      	bx	lr

080018d0 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 80018d0:	4770      	bx	lr

080018d2 <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 80018d2:	4770      	bx	lr

080018d4 <SysTick_Handler>:
  * @param  None
  * @retval None
  */
void SysTick_Handler(void)
{
  HAL_IncTick();
 80018d4:	f000 bc5e 	b.w	8002194 <HAL_IncTick>

080018d8 <HAL_RCC_OscConfig>:
  /* Check the parameters */
  assert_param(RCC_OscInitStruct != NULL);
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  
  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80018d8:	6803      	ldr	r3, [r0, #0]
 80018da:	07db      	lsls	r3, r3, #31
  *         contains the configuration information for the RCC Oscillators.
  * @note   The PLL is not disabled when used as system clock.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80018dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80018de:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(RCC_OscInitStruct != NULL);
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  
  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80018e0:	d404      	bmi.n	80018ec <HAL_RCC_OscConfig+0x14>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80018e2:	6823      	ldr	r3, [r4, #0]
 80018e4:	079d      	lsls	r5, r3, #30
 80018e6:	f100 80a9 	bmi.w	8001a3c <HAL_RCC_OscConfig+0x164>
 80018ea:	e123      	b.n	8001b34 <HAL_RCC_OscConfig+0x25c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
        
    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 80018ec:	4bbd      	ldr	r3, [pc, #756]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 80018ee:	685a      	ldr	r2, [r3, #4]
 80018f0:	f002 020c 	and.w	r2, r2, #12
 80018f4:	2a04      	cmp	r2, #4
 80018f6:	d007      	beq.n	8001908 <HAL_RCC_OscConfig+0x30>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80018f8:	685a      	ldr	r2, [r3, #4]
 80018fa:	f002 020c 	and.w	r2, r2, #12
 80018fe:	2a08      	cmp	r2, #8
 8001900:	d119      	bne.n	8001936 <HAL_RCC_OscConfig+0x5e>
 8001902:	685b      	ldr	r3, [r3, #4]
 8001904:	03d8      	lsls	r0, r3, #15
 8001906:	d516      	bpl.n	8001936 <HAL_RCC_OscConfig+0x5e>
__attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

#if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001908:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800190c:	fa93 f3a3 	rbit	r3, r3
 8001910:	4bb4      	ldr	r3, [pc, #720]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001912:	681a      	ldr	r2, [r3, #0]
 8001914:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001918:	fa93 f3a3 	rbit	r3, r3
 800191c:	fab3 f383 	clz	r3, r3
 8001920:	f003 031f 	and.w	r3, r3, #31
 8001924:	fa22 f303 	lsr.w	r3, r2, r3
 8001928:	07d9      	lsls	r1, r3, #31
 800192a:	d5da      	bpl.n	80018e2 <HAL_RCC_OscConfig+0xa>
 800192c:	6863      	ldr	r3, [r4, #4]
 800192e:	2b00      	cmp	r3, #0
 8001930:	d1d7      	bne.n	80018e2 <HAL_RCC_OscConfig+0xa>
      {
        return HAL_ERROR;
 8001932:	2001      	movs	r0, #1
 8001934:	e299      	b.n	8001e6a <HAL_RCC_OscConfig+0x592>
      }
    }
    else
    {
      /* Reset HSEON and HSEBYP bits before configuring the HSE --------------*/
      __HAL_RCC_HSE_CONFIG(RCC_HSE_OFF);
 8001936:	4bab      	ldr	r3, [pc, #684]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 8001938:	681a      	ldr	r2, [r3, #0]
 800193a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800193e:	601a      	str	r2, [r3, #0]
 8001940:	681a      	ldr	r2, [r3, #0]
 8001942:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001946:	601a      	str	r2, [r3, #0]
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001948:	f000 fc2c 	bl	80021a4 <HAL_GetTick>
 800194c:	4605      	mov	r5, r0
 800194e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001952:	fa93 f3a3 	rbit	r3, r3
 8001956:	4ba3      	ldr	r3, [pc, #652]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
      
      /* Wait till HSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001958:	681a      	ldr	r2, [r3, #0]
 800195a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800195e:	fa93 f3a3 	rbit	r3, r3
 8001962:	fab3 f383 	clz	r3, r3
 8001966:	f003 031f 	and.w	r3, r3, #31
 800196a:	fa22 f303 	lsr.w	r3, r2, r3
 800196e:	07da      	lsls	r2, r3, #31
 8001970:	d508      	bpl.n	8001984 <HAL_RCC_OscConfig+0xac>
      {
        if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001972:	f000 fc17 	bl	80021a4 <HAL_GetTick>
 8001976:	f241 3388 	movw	r3, #5000	; 0x1388
 800197a:	1b40      	subs	r0, r0, r5
 800197c:	4298      	cmp	r0, r3
 800197e:	d9e6      	bls.n	800194e <HAL_RCC_OscConfig+0x76>
        {
          return HAL_TIMEOUT;
 8001980:	2003      	movs	r0, #3
 8001982:	e272      	b.n	8001e6a <HAL_RCC_OscConfig+0x592>
        }
      }
      
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001984:	6862      	ldr	r2, [r4, #4]
 8001986:	4b97      	ldr	r3, [pc, #604]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 8001988:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800198c:	d007      	beq.n	800199e <HAL_RCC_OscConfig+0xc6>
 800198e:	6819      	ldr	r1, [r3, #0]
 8001990:	b14a      	cbz	r2, 80019a6 <HAL_RCC_OscConfig+0xce>
 8001992:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8001996:	d106      	bne.n	80019a6 <HAL_RCC_OscConfig+0xce>
 8001998:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
 800199c:	6019      	str	r1, [r3, #0]
 800199e:	6819      	ldr	r1, [r3, #0]
 80019a0:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 80019a4:	e005      	b.n	80019b2 <HAL_RCC_OscConfig+0xda>
 80019a6:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 80019aa:	6019      	str	r1, [r3, #0]
 80019ac:	6819      	ldr	r1, [r3, #0]
 80019ae:	f421 2180 	bic.w	r1, r1, #262144	; 0x40000
 80019b2:	6019      	str	r1, [r3, #0]
      
#if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
      /* Configure the HSE predivision factor --------------------------------*/
      __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 80019b4:	4b8b      	ldr	r3, [pc, #556]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 80019b6:	68a1      	ldr	r1, [r4, #8]
 80019b8:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80019ba:	f020 000f 	bic.w	r0, r0, #15
 80019be:	4301      	orrs	r1, r0
 80019c0:	62d9      	str	r1, [r3, #44]	; 0x2c
#endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80019c2:	b1ea      	cbz	r2, 8001a00 <HAL_RCC_OscConfig+0x128>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80019c4:	f000 fbee 	bl	80021a4 <HAL_GetTick>
 80019c8:	4605      	mov	r5, r0
 80019ca:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80019ce:	fa93 f3a3 	rbit	r3, r3
 80019d2:	4b84      	ldr	r3, [pc, #528]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80019d4:	681a      	ldr	r2, [r3, #0]
 80019d6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80019da:	fa93 f3a3 	rbit	r3, r3
 80019de:	fab3 f383 	clz	r3, r3
 80019e2:	f003 031f 	and.w	r3, r3, #31
 80019e6:	fa22 f303 	lsr.w	r3, r2, r3
 80019ea:	07db      	lsls	r3, r3, #31
 80019ec:	f53f af79 	bmi.w	80018e2 <HAL_RCC_OscConfig+0xa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80019f0:	f000 fbd8 	bl	80021a4 <HAL_GetTick>
 80019f4:	f241 3388 	movw	r3, #5000	; 0x1388
 80019f8:	1b40      	subs	r0, r0, r5
 80019fa:	4298      	cmp	r0, r3
 80019fc:	d9e5      	bls.n	80019ca <HAL_RCC_OscConfig+0xf2>
 80019fe:	e7bf      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001a00:	f000 fbd0 	bl	80021a4 <HAL_GetTick>
 8001a04:	4605      	mov	r5, r0
 8001a06:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001a0a:	fa93 f3a3 	rbit	r3, r3
 8001a0e:	4b75      	ldr	r3, [pc, #468]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
        
        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001a10:	681a      	ldr	r2, [r3, #0]
 8001a12:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001a16:	fa93 f3a3 	rbit	r3, r3
 8001a1a:	fab3 f383 	clz	r3, r3
 8001a1e:	f003 031f 	and.w	r3, r3, #31
 8001a22:	fa22 f303 	lsr.w	r3, r2, r3
 8001a26:	07d8      	lsls	r0, r3, #31
 8001a28:	f57f af5b 	bpl.w	80018e2 <HAL_RCC_OscConfig+0xa>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001a2c:	f000 fbba 	bl	80021a4 <HAL_GetTick>
 8001a30:	f241 3388 	movw	r3, #5000	; 0x1388
 8001a34:	1b40      	subs	r0, r0, r5
 8001a36:	4298      	cmp	r0, r3
 8001a38:	d9e5      	bls.n	8001a06 <HAL_RCC_OscConfig+0x12e>
 8001a3a:	e7a1      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8001a3c:	4b69      	ldr	r3, [pc, #420]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 8001a3e:	685a      	ldr	r2, [r3, #4]
 8001a40:	f012 0f0c 	tst.w	r2, #12
 8001a44:	d007      	beq.n	8001a56 <HAL_RCC_OscConfig+0x17e>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8001a46:	685a      	ldr	r2, [r3, #4]
 8001a48:	f002 020c 	and.w	r2, r2, #12
 8001a4c:	2a08      	cmp	r2, #8
 8001a4e:	d117      	bne.n	8001a80 <HAL_RCC_OscConfig+0x1a8>
 8001a50:	685b      	ldr	r3, [r3, #4]
 8001a52:	03d9      	lsls	r1, r3, #15
 8001a54:	d414      	bmi.n	8001a80 <HAL_RCC_OscConfig+0x1a8>
 8001a56:	2302      	movs	r3, #2
 8001a58:	fa93 f3a3 	rbit	r3, r3
 8001a5c:	4b61      	ldr	r3, [pc, #388]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001a5e:	681a      	ldr	r2, [r3, #0]
 8001a60:	2302      	movs	r3, #2
 8001a62:	fa93 f3a3 	rbit	r3, r3
 8001a66:	fab3 f383 	clz	r3, r3
 8001a6a:	f003 031f 	and.w	r3, r3, #31
 8001a6e:	fa22 f303 	lsr.w	r3, r2, r3
 8001a72:	07da      	lsls	r2, r3, #31
 8001a74:	d52b      	bpl.n	8001ace <HAL_RCC_OscConfig+0x1f6>
 8001a76:	6923      	ldr	r3, [r4, #16]
 8001a78:	2b01      	cmp	r3, #1
 8001a7a:	f47f af5a 	bne.w	8001932 <HAL_RCC_OscConfig+0x5a>
 8001a7e:	e026      	b.n	8001ace <HAL_RCC_OscConfig+0x1f6>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8001a80:	6922      	ldr	r2, [r4, #16]
 8001a82:	2301      	movs	r3, #1
 8001a84:	b392      	cbz	r2, 8001aec <HAL_RCC_OscConfig+0x214>
 8001a86:	fa93 f3a3 	rbit	r3, r3
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001a8a:	fab3 f383 	clz	r3, r3
 8001a8e:	009b      	lsls	r3, r3, #2
 8001a90:	f103 4384 	add.w	r3, r3, #1107296256	; 0x42000000
 8001a94:	f503 0384 	add.w	r3, r3, #4325376	; 0x420000
 8001a98:	2201      	movs	r2, #1
 8001a9a:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001a9c:	f000 fb82 	bl	80021a4 <HAL_GetTick>
 8001aa0:	4605      	mov	r5, r0
 8001aa2:	2302      	movs	r3, #2
 8001aa4:	fa93 f3a3 	rbit	r3, r3
 8001aa8:	4b4e      	ldr	r3, [pc, #312]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001aaa:	681a      	ldr	r2, [r3, #0]
 8001aac:	2302      	movs	r3, #2
 8001aae:	fa93 f3a3 	rbit	r3, r3
 8001ab2:	fab3 f383 	clz	r3, r3
 8001ab6:	f003 031f 	and.w	r3, r3, #31
 8001aba:	fa22 f303 	lsr.w	r3, r2, r3
 8001abe:	07db      	lsls	r3, r3, #31
 8001ac0:	d405      	bmi.n	8001ace <HAL_RCC_OscConfig+0x1f6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8001ac2:	f000 fb6f 	bl	80021a4 <HAL_GetTick>
 8001ac6:	1b40      	subs	r0, r0, r5
 8001ac8:	2864      	cmp	r0, #100	; 0x64
 8001aca:	d9ea      	bls.n	8001aa2 <HAL_RCC_OscConfig+0x1ca>
 8001acc:	e758      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001ace:	4b45      	ldr	r3, [pc, #276]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 8001ad0:	21f8      	movs	r1, #248	; 0xf8
 8001ad2:	681a      	ldr	r2, [r3, #0]
 8001ad4:	fa91 f1a1 	rbit	r1, r1
 8001ad8:	6963      	ldr	r3, [r4, #20]
 8001ada:	fab1 f181 	clz	r1, r1
 8001ade:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8001ae2:	408b      	lsls	r3, r1
 8001ae4:	4313      	orrs	r3, r2
 8001ae6:	4a3f      	ldr	r2, [pc, #252]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 8001ae8:	6013      	str	r3, [r2, #0]
 8001aea:	e023      	b.n	8001b34 <HAL_RCC_OscConfig+0x25c>
 8001aec:	fa93 f3a3 	rbit	r3, r3
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8001af0:	fab3 f383 	clz	r3, r3
 8001af4:	009b      	lsls	r3, r3, #2
 8001af6:	f103 4384 	add.w	r3, r3, #1107296256	; 0x42000000
 8001afa:	f503 0384 	add.w	r3, r3, #4325376	; 0x420000
 8001afe:	2200      	movs	r2, #0
 8001b00:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001b02:	f000 fb4f 	bl	80021a4 <HAL_GetTick>
 8001b06:	4605      	mov	r5, r0
 8001b08:	2302      	movs	r3, #2
 8001b0a:	fa93 f3a3 	rbit	r3, r3
 8001b0e:	4b35      	ldr	r3, [pc, #212]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001b10:	681a      	ldr	r2, [r3, #0]
 8001b12:	2302      	movs	r3, #2
 8001b14:	fa93 f3a3 	rbit	r3, r3
 8001b18:	fab3 f383 	clz	r3, r3
 8001b1c:	f003 031f 	and.w	r3, r3, #31
 8001b20:	fa22 f303 	lsr.w	r3, r2, r3
 8001b24:	07d8      	lsls	r0, r3, #31
 8001b26:	d505      	bpl.n	8001b34 <HAL_RCC_OscConfig+0x25c>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8001b28:	f000 fb3c 	bl	80021a4 <HAL_GetTick>
 8001b2c:	1b40      	subs	r0, r0, r5
 8001b2e:	2864      	cmp	r0, #100	; 0x64
 8001b30:	d9ea      	bls.n	8001b08 <HAL_RCC_OscConfig+0x230>
 8001b32:	e725      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001b34:	6823      	ldr	r3, [r4, #0]
 8001b36:	0719      	lsls	r1, r3, #28
 8001b38:	d404      	bmi.n	8001b44 <HAL_RCC_OscConfig+0x26c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001b3a:	6823      	ldr	r3, [r4, #0]
 8001b3c:	075a      	lsls	r2, r3, #29
 8001b3e:	f140 80aa 	bpl.w	8001c96 <HAL_RCC_OscConfig+0x3be>
 8001b42:	e053      	b.n	8001bec <HAL_RCC_OscConfig+0x314>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8001b44:	69a1      	ldr	r1, [r4, #24]
 8001b46:	4b28      	ldr	r3, [pc, #160]	; (8001be8 <HAL_RCC_OscConfig+0x310>)
 8001b48:	2201      	movs	r2, #1
 8001b4a:	b329      	cbz	r1, 8001b98 <HAL_RCC_OscConfig+0x2c0>
 8001b4c:	fa92 f2a2 	rbit	r2, r2
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8001b50:	fab2 f282 	clz	r2, r2
 8001b54:	2101      	movs	r1, #1
 8001b56:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001b5a:	f000 fb23 	bl	80021a4 <HAL_GetTick>
 8001b5e:	4605      	mov	r5, r0
 8001b60:	2302      	movs	r3, #2
 8001b62:	fa93 f3a3 	rbit	r3, r3
 8001b66:	2302      	movs	r3, #2
 8001b68:	fa93 f3a3 	rbit	r3, r3
 8001b6c:	2302      	movs	r3, #2
 8001b6e:	fa93 f3a3 	rbit	r3, r3
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001b72:	4b1c      	ldr	r3, [pc, #112]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 8001b74:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001b76:	2302      	movs	r3, #2
 8001b78:	fa93 f3a3 	rbit	r3, r3
 8001b7c:	fab3 f383 	clz	r3, r3
 8001b80:	f003 031f 	and.w	r3, r3, #31
 8001b84:	fa22 f303 	lsr.w	r3, r2, r3
 8001b88:	07db      	lsls	r3, r3, #31
 8001b8a:	d4d6      	bmi.n	8001b3a <HAL_RCC_OscConfig+0x262>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8001b8c:	f000 fb0a 	bl	80021a4 <HAL_GetTick>
 8001b90:	1b40      	subs	r0, r0, r5
 8001b92:	2864      	cmp	r0, #100	; 0x64
 8001b94:	d9e4      	bls.n	8001b60 <HAL_RCC_OscConfig+0x288>
 8001b96:	e6f3      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
 8001b98:	fa92 f2a2 	rbit	r2, r2
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8001b9c:	fab2 f282 	clz	r2, r2
 8001ba0:	2100      	movs	r1, #0
 8001ba2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001ba6:	f000 fafd 	bl	80021a4 <HAL_GetTick>
 8001baa:	4605      	mov	r5, r0
 8001bac:	2302      	movs	r3, #2
 8001bae:	fa93 f3a3 	rbit	r3, r3
 8001bb2:	2302      	movs	r3, #2
 8001bb4:	fa93 f3a3 	rbit	r3, r3
 8001bb8:	2302      	movs	r3, #2
 8001bba:	fa93 f3a3 	rbit	r3, r3
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001bbe:	4b09      	ldr	r3, [pc, #36]	; (8001be4 <HAL_RCC_OscConfig+0x30c>)
 8001bc0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001bc2:	2302      	movs	r3, #2
 8001bc4:	fa93 f3a3 	rbit	r3, r3
 8001bc8:	fab3 f383 	clz	r3, r3
 8001bcc:	f003 031f 	and.w	r3, r3, #31
 8001bd0:	fa22 f303 	lsr.w	r3, r2, r3
 8001bd4:	07d8      	lsls	r0, r3, #31
 8001bd6:	d5b0      	bpl.n	8001b3a <HAL_RCC_OscConfig+0x262>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8001bd8:	f000 fae4 	bl	80021a4 <HAL_GetTick>
 8001bdc:	1b40      	subs	r0, r0, r5
 8001bde:	2864      	cmp	r0, #100	; 0x64
 8001be0:	d9e4      	bls.n	8001bac <HAL_RCC_OscConfig+0x2d4>
 8001be2:	e6cd      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
 8001be4:	40021000 	.word	0x40021000
 8001be8:	42420480 	.word	0x42420480
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
    
    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8001bec:	4ba0      	ldr	r3, [pc, #640]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
 8001bee:	69da      	ldr	r2, [r3, #28]
 8001bf0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001bf4:	61da      	str	r2, [r3, #28]
 8001bf6:	69db      	ldr	r3, [r3, #28]
 8001bf8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001bfc:	9301      	str	r3, [sp, #4]
 8001bfe:	9b01      	ldr	r3, [sp, #4]
    
    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR, PWR_CR_DBP);
 8001c00:	4b9c      	ldr	r3, [pc, #624]	; (8001e74 <HAL_RCC_OscConfig+0x59c>)
 8001c02:	681a      	ldr	r2, [r3, #0]
 8001c04:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001c08:	601a      	str	r2, [r3, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8001c0a:	f000 facb 	bl	80021a4 <HAL_GetTick>
 8001c0e:	4605      	mov	r5, r0
    
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8001c10:	4b98      	ldr	r3, [pc, #608]	; (8001e74 <HAL_RCC_OscConfig+0x59c>)
 8001c12:	681b      	ldr	r3, [r3, #0]
 8001c14:	05d9      	lsls	r1, r3, #23
 8001c16:	d542      	bpl.n	8001c9e <HAL_RCC_OscConfig+0x3c6>
        return HAL_TIMEOUT;
      }      
    }
    
    /* Reset LSEON and LSEBYP bits before configuring the LSE ----------------*/
    __HAL_RCC_LSE_CONFIG(RCC_LSE_OFF);
 8001c18:	4b95      	ldr	r3, [pc, #596]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
 8001c1a:	6a1a      	ldr	r2, [r3, #32]
 8001c1c:	f022 0201 	bic.w	r2, r2, #1
 8001c20:	621a      	str	r2, [r3, #32]
 8001c22:	6a1a      	ldr	r2, [r3, #32]
 8001c24:	f022 0204 	bic.w	r2, r2, #4
 8001c28:	621a      	str	r2, [r3, #32]
    
    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001c2a:	f000 fabb 	bl	80021a4 <HAL_GetTick>
 8001c2e:	4605      	mov	r5, r0
 8001c30:	2302      	movs	r3, #2
 8001c32:	fa93 f3a3 	rbit	r3, r3
 8001c36:	2202      	movs	r2, #2
 8001c38:	fa92 f2a2 	rbit	r2, r2
 8001c3c:	4b8c      	ldr	r3, [pc, #560]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
    
    /* Wait till LSE is disabled */  
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001c3e:	2a00      	cmp	r2, #0
 8001c40:	d033      	beq.n	8001caa <HAL_RCC_OscConfig+0x3d2>
 8001c42:	6a1b      	ldr	r3, [r3, #32]
 8001c44:	2202      	movs	r2, #2
 8001c46:	fa92 f2a2 	rbit	r2, r2
 8001c4a:	fab2 f282 	clz	r2, r2
 8001c4e:	f002 021f 	and.w	r2, r2, #31
 8001c52:	40d3      	lsrs	r3, r2
 8001c54:	07da      	lsls	r2, r3, #31
 8001c56:	d42d      	bmi.n	8001cb4 <HAL_RCC_OscConfig+0x3dc>
        return HAL_TIMEOUT;
      }
    }
    
    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001c58:	68e2      	ldr	r2, [r4, #12]
 8001c5a:	4b85      	ldr	r3, [pc, #532]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
 8001c5c:	2a01      	cmp	r2, #1
 8001c5e:	d131      	bne.n	8001cc4 <HAL_RCC_OscConfig+0x3ec>
 8001c60:	6a1a      	ldr	r2, [r3, #32]
 8001c62:	f042 0201 	orr.w	r2, r2, #1
 8001c66:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001c68:	f000 fa9c 	bl	80021a4 <HAL_GetTick>
 8001c6c:	4605      	mov	r5, r0
 8001c6e:	2302      	movs	r3, #2
 8001c70:	fa93 f3a3 	rbit	r3, r3
 8001c74:	2202      	movs	r2, #2
 8001c76:	fa92 f2a2 	rbit	r2, r2
 8001c7a:	4b7d      	ldr	r3, [pc, #500]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001c7c:	2a00      	cmp	r2, #0
 8001c7e:	d03c      	beq.n	8001cfa <HAL_RCC_OscConfig+0x422>
 8001c80:	6a1b      	ldr	r3, [r3, #32]
 8001c82:	2202      	movs	r2, #2
 8001c84:	fa92 f2a2 	rbit	r2, r2
 8001c88:	fab2 f282 	clz	r2, r2
 8001c8c:	f002 021f 	and.w	r2, r2, #31
 8001c90:	40d3      	lsrs	r3, r2
 8001c92:	07db      	lsls	r3, r3, #31
 8001c94:	d536      	bpl.n	8001d04 <HAL_RCC_OscConfig+0x42c>
  }

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001c96:	69e3      	ldr	r3, [r4, #28]
 8001c98:	2b00      	cmp	r3, #0
 8001c9a:	d15c      	bne.n	8001d56 <HAL_RCC_OscConfig+0x47e>
 8001c9c:	e0b1      	b.n	8001e02 <HAL_RCC_OscConfig+0x52a>
    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
    
    while((PWR->CR & PWR_CR_DBP) == RESET)
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8001c9e:	f000 fa81 	bl	80021a4 <HAL_GetTick>
 8001ca2:	1b40      	subs	r0, r0, r5
 8001ca4:	2864      	cmp	r0, #100	; 0x64
 8001ca6:	d9b3      	bls.n	8001c10 <HAL_RCC_OscConfig+0x338>
 8001ca8:	e66a      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
 8001caa:	2202      	movs	r2, #2
 8001cac:	fa92 f2a2 	rbit	r2, r2
    
    /* Get Start Tick */
    tickstart = HAL_GetTick();
    
    /* Wait till LSE is disabled */  
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001cb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cb2:	e7c7      	b.n	8001c44 <HAL_RCC_OscConfig+0x36c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001cb4:	f000 fa76 	bl	80021a4 <HAL_GetTick>
 8001cb8:	f241 3388 	movw	r3, #5000	; 0x1388
 8001cbc:	1b40      	subs	r0, r0, r5
 8001cbe:	4298      	cmp	r0, r3
 8001cc0:	d9b6      	bls.n	8001c30 <HAL_RCC_OscConfig+0x358>
 8001cc2:	e65d      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
        return HAL_TIMEOUT;
      }
    }
    
    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001cc4:	b95a      	cbnz	r2, 8001cde <HAL_RCC_OscConfig+0x406>
 8001cc6:	6a1a      	ldr	r2, [r3, #32]
 8001cc8:	f022 0201 	bic.w	r2, r2, #1
 8001ccc:	621a      	str	r2, [r3, #32]
 8001cce:	6a1a      	ldr	r2, [r3, #32]
 8001cd0:	f022 0204 	bic.w	r2, r2, #4
 8001cd4:	621a      	str	r2, [r3, #32]
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001cd6:	f000 fa65 	bl	80021a4 <HAL_GetTick>
 8001cda:	4605      	mov	r5, r0
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001cdc:	e030      	b.n	8001d40 <HAL_RCC_OscConfig+0x468>
        return HAL_TIMEOUT;
      }
    }
    
    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001cde:	2a05      	cmp	r2, #5
 8001ce0:	6a1a      	ldr	r2, [r3, #32]
 8001ce2:	d103      	bne.n	8001cec <HAL_RCC_OscConfig+0x414>
 8001ce4:	f042 0204 	orr.w	r2, r2, #4
 8001ce8:	621a      	str	r2, [r3, #32]
 8001cea:	e7b9      	b.n	8001c60 <HAL_RCC_OscConfig+0x388>
 8001cec:	f022 0201 	bic.w	r2, r2, #1
 8001cf0:	621a      	str	r2, [r3, #32]
 8001cf2:	6a1a      	ldr	r2, [r3, #32]
 8001cf4:	f022 0204 	bic.w	r2, r2, #4
 8001cf8:	e7b5      	b.n	8001c66 <HAL_RCC_OscConfig+0x38e>
 8001cfa:	2202      	movs	r2, #2
 8001cfc:	fa92 f2a2 	rbit	r2, r2
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001d00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d02:	e7be      	b.n	8001c82 <HAL_RCC_OscConfig+0x3aa>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001d04:	f000 fa4e 	bl	80021a4 <HAL_GetTick>
 8001d08:	f241 3388 	movw	r3, #5000	; 0x1388
 8001d0c:	1b40      	subs	r0, r0, r5
 8001d0e:	4298      	cmp	r0, r3
 8001d10:	d9ad      	bls.n	8001c6e <HAL_RCC_OscConfig+0x396>
 8001d12:	e635      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
 8001d14:	2202      	movs	r2, #2
 8001d16:	fa92 f2a2 	rbit	r2, r2
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001d1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d1c:	2202      	movs	r2, #2
 8001d1e:	fa92 f2a2 	rbit	r2, r2
 8001d22:	fab2 f282 	clz	r2, r2
 8001d26:	f002 021f 	and.w	r2, r2, #31
 8001d2a:	40d3      	lsrs	r3, r2
 8001d2c:	07d8      	lsls	r0, r3, #31
 8001d2e:	d5b2      	bpl.n	8001c96 <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001d30:	f000 fa38 	bl	80021a4 <HAL_GetTick>
 8001d34:	f241 3388 	movw	r3, #5000	; 0x1388
 8001d38:	1b40      	subs	r0, r0, r5
 8001d3a:	4298      	cmp	r0, r3
 8001d3c:	f63f ae20 	bhi.w	8001980 <HAL_RCC_OscConfig+0xa8>
 8001d40:	2302      	movs	r3, #2
 8001d42:	fa93 f3a3 	rbit	r3, r3
 8001d46:	2202      	movs	r2, #2
 8001d48:	fa92 f2a2 	rbit	r2, r2
 8001d4c:	4b48      	ldr	r3, [pc, #288]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001d4e:	2a00      	cmp	r2, #0
 8001d50:	d0e0      	beq.n	8001d14 <HAL_RCC_OscConfig+0x43c>
 8001d52:	6a1b      	ldr	r3, [r3, #32]
 8001d54:	e7e2      	b.n	8001d1c <HAL_RCC_OscConfig+0x444>
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001d56:	4a46      	ldr	r2, [pc, #280]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
 8001d58:	6852      	ldr	r2, [r2, #4]
 8001d5a:	f002 020c 	and.w	r2, r2, #12
 8001d5e:	2a08      	cmp	r2, #8
 8001d60:	f43f ade7 	beq.w	8001932 <HAL_RCC_OscConfig+0x5a>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001d64:	2b02      	cmp	r3, #2
 8001d66:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001d6a:	d158      	bne.n	8001e1e <HAL_RCC_OscConfig+0x546>
 8001d6c:	fa93 f3a3 	rbit	r3, r3
#if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
#endif
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001d70:	fab3 f383 	clz	r3, r3
 8001d74:	009b      	lsls	r3, r3, #2
 8001d76:	f103 4384 	add.w	r3, r3, #1107296256	; 0x42000000
 8001d7a:	f503 0384 	add.w	r3, r3, #4325376	; 0x420000
 8001d7e:	2200      	movs	r2, #0
 8001d80:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001d82:	f000 fa0f 	bl	80021a4 <HAL_GetTick>
 8001d86:	4605      	mov	r5, r0
 8001d88:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001d8c:	fa93 f3a3 	rbit	r3, r3
 8001d90:	4b37      	ldr	r3, [pc, #220]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001d92:	681a      	ldr	r2, [r3, #0]
 8001d94:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001d98:	fa93 f3a3 	rbit	r3, r3
 8001d9c:	fab3 f383 	clz	r3, r3
 8001da0:	f003 031f 	and.w	r3, r3, #31
 8001da4:	fa22 f303 	lsr.w	r3, r2, r3
 8001da8:	07d9      	lsls	r1, r3, #31
 8001daa:	d42c      	bmi.n	8001e06 <HAL_RCC_OscConfig+0x52e>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
#else
      /* Configure the main PLL clock source and multiplication factor. */
      __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001dac:	4b30      	ldr	r3, [pc, #192]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
 8001dae:	6a20      	ldr	r0, [r4, #32]
 8001db0:	6859      	ldr	r1, [r3, #4]
 8001db2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001db4:	f421 1174 	bic.w	r1, r1, #3997696	; 0x3d0000
 8001db8:	4302      	orrs	r2, r0
 8001dba:	430a      	orrs	r2, r1
 8001dbc:	605a      	str	r2, [r3, #4]
 8001dbe:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001dc2:	fa93 f3a3 	rbit	r3, r3
                           RCC_OscInitStruct->PLL.PLLMUL);
#endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8001dc6:	fab3 f383 	clz	r3, r3
 8001dca:	009b      	lsls	r3, r3, #2
 8001dcc:	f103 4384 	add.w	r3, r3, #1107296256	; 0x42000000
 8001dd0:	f503 0384 	add.w	r3, r3, #4325376	; 0x420000
 8001dd4:	2201      	movs	r2, #1
 8001dd6:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001dd8:	f000 f9e4 	bl	80021a4 <HAL_GetTick>
 8001ddc:	4604      	mov	r4, r0
 8001dde:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001de2:	fa93 f3a3 	rbit	r3, r3
 8001de6:	4b22      	ldr	r3, [pc, #136]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001de8:	681a      	ldr	r2, [r3, #0]
 8001dea:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001dee:	fa93 f3a3 	rbit	r3, r3
 8001df2:	fab3 f383 	clz	r3, r3
 8001df6:	f003 031f 	and.w	r3, r3, #31
 8001dfa:	fa22 f303 	lsr.w	r3, r2, r3
 8001dfe:	07da      	lsls	r2, r3, #31
 8001e00:	d507      	bpl.n	8001e12 <HAL_RCC_OscConfig+0x53a>
    {
      return HAL_ERROR;
    }
  }
  
  return HAL_OK;
 8001e02:	2000      	movs	r0, #0
 8001e04:	e031      	b.n	8001e6a <HAL_RCC_OscConfig+0x592>
        tickstart = HAL_GetTick();
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001e06:	f000 f9cd 	bl	80021a4 <HAL_GetTick>
 8001e0a:	1b40      	subs	r0, r0, r5
 8001e0c:	2864      	cmp	r0, #100	; 0x64
 8001e0e:	d9bb      	bls.n	8001d88 <HAL_RCC_OscConfig+0x4b0>
 8001e10:	e5b6      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
        tickstart = HAL_GetTick();
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001e12:	f000 f9c7 	bl	80021a4 <HAL_GetTick>
 8001e16:	1b00      	subs	r0, r0, r4
 8001e18:	2864      	cmp	r0, #100	; 0x64
 8001e1a:	d9e0      	bls.n	8001dde <HAL_RCC_OscConfig+0x506>
 8001e1c:	e5b0      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
 8001e1e:	fa93 f3a3 	rbit	r3, r3
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001e22:	fab3 f383 	clz	r3, r3
 8001e26:	009b      	lsls	r3, r3, #2
 8001e28:	f103 4384 	add.w	r3, r3, #1107296256	; 0x42000000
 8001e2c:	f503 0384 	add.w	r3, r3, #4325376	; 0x420000
 8001e30:	2200      	movs	r2, #0
 8001e32:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001e34:	f000 f9b6 	bl	80021a4 <HAL_GetTick>
 8001e38:	4604      	mov	r4, r0
 8001e3a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001e3e:	fa93 f3a3 	rbit	r3, r3
 8001e42:	4b0b      	ldr	r3, [pc, #44]	; (8001e70 <HAL_RCC_OscConfig+0x598>)
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001e44:	681a      	ldr	r2, [r3, #0]
 8001e46:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001e4a:	fa93 f3a3 	rbit	r3, r3
 8001e4e:	fab3 f383 	clz	r3, r3
 8001e52:	f003 031f 	and.w	r3, r3, #31
 8001e56:	fa22 f303 	lsr.w	r3, r2, r3
 8001e5a:	07db      	lsls	r3, r3, #31
 8001e5c:	d5d1      	bpl.n	8001e02 <HAL_RCC_OscConfig+0x52a>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001e5e:	f000 f9a1 	bl	80021a4 <HAL_GetTick>
 8001e62:	1b00      	subs	r0, r0, r4
 8001e64:	2864      	cmp	r0, #100	; 0x64
 8001e66:	d9e8      	bls.n	8001e3a <HAL_RCC_OscConfig+0x562>
 8001e68:	e58a      	b.n	8001980 <HAL_RCC_OscConfig+0xa8>
      return HAL_ERROR;
    }
  }
  
  return HAL_OK;
}
 8001e6a:	b003      	add	sp, #12
 8001e6c:	bd30      	pop	{r4, r5, pc}
 8001e6e:	bf00      	nop
 8001e70:	40021000 	.word	0x40021000
 8001e74:	40007000 	.word	0x40007000

08001e78 <HAL_RCC_ClockConfig>:
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the CPU frequency */
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 8001e78:	4b8b      	ldr	r3, [pc, #556]	; (80020a8 <HAL_RCC_ClockConfig+0x230>)
 8001e7a:	681a      	ldr	r2, [r3, #0]
 8001e7c:	f002 0207 	and.w	r2, r2, #7
 8001e80:	4291      	cmp	r1, r2
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001e82:	b570      	push	{r4, r5, r6, lr}
 8001e84:	4604      	mov	r4, r0
 8001e86:	460d      	mov	r5, r1
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the CPU frequency */
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 8001e88:	f240 8084 	bls.w	8001f94 <HAL_RCC_ClockConfig+0x11c>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001e8c:	681a      	ldr	r2, [r3, #0]
 8001e8e:	f022 0207 	bic.w	r2, r2, #7
 8001e92:	430a      	orrs	r2, r1
 8001e94:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	f003 0307 	and.w	r3, r3, #7
 8001e9c:	428b      	cmp	r3, r1
 8001e9e:	d001      	beq.n	8001ea4 <HAL_RCC_ClockConfig+0x2c>
    {
      return HAL_ERROR;
 8001ea0:	2001      	movs	r0, #1
 8001ea2:	bd70      	pop	{r4, r5, r6, pc}
    }
    
    /*-------------------------- HCLK Configuration --------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001ea4:	6803      	ldr	r3, [r0, #0]
 8001ea6:	079d      	lsls	r5, r3, #30
 8001ea8:	d506      	bpl.n	8001eb8 <HAL_RCC_ClockConfig+0x40>
    {
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001eaa:	4a80      	ldr	r2, [pc, #512]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8001eac:	68a1      	ldr	r1, [r4, #8]
 8001eae:	6850      	ldr	r0, [r2, #4]
 8001eb0:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
 8001eb4:	4301      	orrs	r1, r0
 8001eb6:	6051      	str	r1, [r2, #4]
    }

    /*------------------------- SYSCLK Configuration ---------------------------*/ 
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001eb8:	07d8      	lsls	r0, r3, #31
 8001eba:	d40b      	bmi.n	8001ed4 <HAL_RCC_ClockConfig+0x5c>
      return HAL_ERROR;
    }
  }
  
  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001ebc:	6823      	ldr	r3, [r4, #0]
 8001ebe:	0759      	lsls	r1, r3, #29
 8001ec0:	f140 80e2 	bpl.w	8002088 <HAL_RCC_ClockConfig+0x210>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001ec4:	4a79      	ldr	r2, [pc, #484]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8001ec6:	68e1      	ldr	r1, [r4, #12]
 8001ec8:	6850      	ldr	r0, [r2, #4]
 8001eca:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8001ece:	4301      	orrs	r1, r0
 8001ed0:	6051      	str	r1, [r2, #4]
 8001ed2:	e0d9      	b.n	8002088 <HAL_RCC_ClockConfig+0x210>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001ed4:	6863      	ldr	r3, [r4, #4]
 8001ed6:	2b01      	cmp	r3, #1
 8001ed8:	d108      	bne.n	8001eec <HAL_RCC_ClockConfig+0x74>
 8001eda:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8001ede:	fa92 f2a2 	rbit	r2, r2
 8001ee2:	4a72      	ldr	r2, [pc, #456]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001ee4:	6811      	ldr	r1, [r2, #0]
 8001ee6:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8001eea:	e010      	b.n	8001f0e <HAL_RCC_ClockConfig+0x96>
        {
          return HAL_ERROR;
        }
      }
      /* PLL is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001eec:	2b02      	cmp	r3, #2
 8001eee:	d108      	bne.n	8001f02 <HAL_RCC_ClockConfig+0x8a>
 8001ef0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001ef4:	fa92 f2a2 	rbit	r2, r2
 8001ef8:	4a6c      	ldr	r2, [pc, #432]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
      {
        /* Check the PLL ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001efa:	6811      	ldr	r1, [r2, #0]
 8001efc:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001f00:	e005      	b.n	8001f0e <HAL_RCC_ClockConfig+0x96>
 8001f02:	2202      	movs	r2, #2
 8001f04:	fa92 f2a2 	rbit	r2, r2
 8001f08:	4a68      	ldr	r2, [pc, #416]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001f0a:	6811      	ldr	r1, [r2, #0]
 8001f0c:	2202      	movs	r2, #2
 8001f0e:	fa92 f2a2 	rbit	r2, r2
 8001f12:	fab2 f282 	clz	r2, r2
 8001f16:	f002 021f 	and.w	r2, r2, #31
 8001f1a:	fa21 f202 	lsr.w	r2, r1, r2
 8001f1e:	07d2      	lsls	r2, r2, #31
 8001f20:	d5be      	bpl.n	8001ea0 <HAL_RCC_ClockConfig+0x28>
        {
          return HAL_ERROR;
        }
      }
      __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001f22:	4a62      	ldr	r2, [pc, #392]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8001f24:	6851      	ldr	r1, [r2, #4]
 8001f26:	f021 0103 	bic.w	r1, r1, #3
 8001f2a:	430b      	orrs	r3, r1
 8001f2c:	6053      	str	r3, [r2, #4]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001f2e:	f000 f939 	bl	80021a4 <HAL_GetTick>
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001f32:	6863      	ldr	r3, [r4, #4]
 8001f34:	2b01      	cmp	r3, #1
        }
      }
      __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001f36:	4605      	mov	r5, r0
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001f38:	d10e      	bne.n	8001f58 <HAL_RCC_ClockConfig+0xe0>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8001f3a:	4b5c      	ldr	r3, [pc, #368]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8001f3c:	685b      	ldr	r3, [r3, #4]
 8001f3e:	f003 030c 	and.w	r3, r3, #12
 8001f42:	2b04      	cmp	r3, #4
 8001f44:	d0ba      	beq.n	8001ebc <HAL_RCC_ClockConfig+0x44>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001f46:	f000 f92d 	bl	80021a4 <HAL_GetTick>
 8001f4a:	f241 3388 	movw	r3, #5000	; 0x1388
 8001f4e:	1b40      	subs	r0, r0, r5
 8001f50:	4298      	cmp	r0, r3
 8001f52:	d9f2      	bls.n	8001f3a <HAL_RCC_ClockConfig+0xc2>
          {
            return HAL_TIMEOUT;
 8001f54:	2003      	movs	r0, #3
 8001f56:	bd70      	pop	{r4, r5, r6, pc}
          }
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001f58:	2b02      	cmp	r3, #2
 8001f5a:	d00c      	beq.n	8001f76 <HAL_RCC_ClockConfig+0xfe>
          }
        }
      }
      else
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8001f5c:	4b53      	ldr	r3, [pc, #332]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8001f5e:	685b      	ldr	r3, [r3, #4]
 8001f60:	f013 0f0c 	tst.w	r3, #12
 8001f64:	d10e      	bne.n	8001f84 <HAL_RCC_ClockConfig+0x10c>
 8001f66:	e7a9      	b.n	8001ebc <HAL_RCC_ClockConfig+0x44>
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001f68:	f000 f91c 	bl	80021a4 <HAL_GetTick>
 8001f6c:	f241 3388 	movw	r3, #5000	; 0x1388
 8001f70:	1b40      	subs	r0, r0, r5
 8001f72:	4298      	cmp	r0, r3
 8001f74:	d8ee      	bhi.n	8001f54 <HAL_RCC_ClockConfig+0xdc>
          }
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001f76:	4b4d      	ldr	r3, [pc, #308]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8001f78:	685b      	ldr	r3, [r3, #4]
 8001f7a:	f003 030c 	and.w	r3, r3, #12
 8001f7e:	2b08      	cmp	r3, #8
 8001f80:	d1f2      	bne.n	8001f68 <HAL_RCC_ClockConfig+0xf0>
 8001f82:	e79b      	b.n	8001ebc <HAL_RCC_ClockConfig+0x44>
      }
      else
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001f84:	f000 f90e 	bl	80021a4 <HAL_GetTick>
 8001f88:	f241 3388 	movw	r3, #5000	; 0x1388
 8001f8c:	1b40      	subs	r0, r0, r5
 8001f8e:	4298      	cmp	r0, r3
 8001f90:	d9e4      	bls.n	8001f5c <HAL_RCC_ClockConfig+0xe4>
 8001f92:	e7df      	b.n	8001f54 <HAL_RCC_ClockConfig+0xdc>
  }
  /* Decreasing the CPU frequency */
  else
  {
    /*-------------------------- HCLK Configuration --------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001f94:	6803      	ldr	r3, [r0, #0]
 8001f96:	079e      	lsls	r6, r3, #30
 8001f98:	d506      	bpl.n	8001fa8 <HAL_RCC_ClockConfig+0x130>
    {
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001f9a:	4a44      	ldr	r2, [pc, #272]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8001f9c:	68a1      	ldr	r1, [r4, #8]
 8001f9e:	6850      	ldr	r0, [r2, #4]
 8001fa0:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
 8001fa4:	4301      	orrs	r1, r0
 8001fa6:	6051      	str	r1, [r2, #4]
    }
    
    /*------------------------- SYSCLK Configuration -------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001fa8:	07d8      	lsls	r0, r3, #31
 8001faa:	d40c      	bmi.n	8001fc6 <HAL_RCC_ClockConfig+0x14e>
        }
      }      
    } 
    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001fac:	4b3e      	ldr	r3, [pc, #248]	; (80020a8 <HAL_RCC_ClockConfig+0x230>)
 8001fae:	681a      	ldr	r2, [r3, #0]
 8001fb0:	f022 0207 	bic.w	r2, r2, #7
 8001fb4:	432a      	orrs	r2, r5
 8001fb6:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	f003 0307 	and.w	r3, r3, #7
 8001fbe:	42ab      	cmp	r3, r5
 8001fc0:	f47f af6e 	bne.w	8001ea0 <HAL_RCC_ClockConfig+0x28>
 8001fc4:	e77a      	b.n	8001ebc <HAL_RCC_ClockConfig+0x44>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001fc6:	6863      	ldr	r3, [r4, #4]
 8001fc8:	2b01      	cmp	r3, #1
 8001fca:	d108      	bne.n	8001fde <HAL_RCC_ClockConfig+0x166>
 8001fcc:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8001fd0:	fa92 f2a2 	rbit	r2, r2
 8001fd4:	4a35      	ldr	r2, [pc, #212]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001fd6:	6811      	ldr	r1, [r2, #0]
 8001fd8:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8001fdc:	e010      	b.n	8002000 <HAL_RCC_ClockConfig+0x188>
        {
          return HAL_ERROR;
        }
      }
      /* PLL is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001fde:	2b02      	cmp	r3, #2
 8001fe0:	d108      	bne.n	8001ff4 <HAL_RCC_ClockConfig+0x17c>
 8001fe2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001fe6:	fa92 f2a2 	rbit	r2, r2
 8001fea:	4a30      	ldr	r2, [pc, #192]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
      {
        /* Check the PLL ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001fec:	6811      	ldr	r1, [r2, #0]
 8001fee:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001ff2:	e005      	b.n	8002000 <HAL_RCC_ClockConfig+0x188>
 8001ff4:	2202      	movs	r2, #2
 8001ff6:	fa92 f2a2 	rbit	r2, r2
 8001ffa:	4a2c      	ldr	r2, [pc, #176]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001ffc:	6811      	ldr	r1, [r2, #0]
 8001ffe:	2202      	movs	r2, #2
 8002000:	fa92 f2a2 	rbit	r2, r2
 8002004:	fab2 f282 	clz	r2, r2
 8002008:	f002 021f 	and.w	r2, r2, #31
 800200c:	fa21 f202 	lsr.w	r2, r1, r2
 8002010:	07d1      	lsls	r1, r2, #31
 8002012:	f57f af45 	bpl.w	8001ea0 <HAL_RCC_ClockConfig+0x28>
        {
          return HAL_ERROR;
        }
      }
      __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002016:	4a25      	ldr	r2, [pc, #148]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8002018:	6851      	ldr	r1, [r2, #4]
 800201a:	f021 0103 	bic.w	r1, r1, #3
 800201e:	430b      	orrs	r3, r1
 8002020:	6053      	str	r3, [r2, #4]
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002022:	f000 f8bf 	bl	80021a4 <HAL_GetTick>
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002026:	6863      	ldr	r3, [r4, #4]
 8002028:	2b01      	cmp	r3, #1
        }
      }
      __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800202a:	4606      	mov	r6, r0
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800202c:	d10d      	bne.n	800204a <HAL_RCC_ClockConfig+0x1d2>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 800202e:	4b1f      	ldr	r3, [pc, #124]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8002030:	685b      	ldr	r3, [r3, #4]
 8002032:	f003 030c 	and.w	r3, r3, #12
 8002036:	2b04      	cmp	r3, #4
 8002038:	d0b8      	beq.n	8001fac <HAL_RCC_ClockConfig+0x134>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800203a:	f000 f8b3 	bl	80021a4 <HAL_GetTick>
 800203e:	f241 3388 	movw	r3, #5000	; 0x1388
 8002042:	1b80      	subs	r0, r0, r6
 8002044:	4298      	cmp	r0, r3
 8002046:	d9f2      	bls.n	800202e <HAL_RCC_ClockConfig+0x1b6>
 8002048:	e784      	b.n	8001f54 <HAL_RCC_ClockConfig+0xdc>
          {
            return HAL_TIMEOUT;
          }
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800204a:	2b02      	cmp	r3, #2
 800204c:	d00d      	beq.n	800206a <HAL_RCC_ClockConfig+0x1f2>
          }
        }
      }
      else
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 800204e:	4b17      	ldr	r3, [pc, #92]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 8002050:	685b      	ldr	r3, [r3, #4]
 8002052:	f013 0f0c 	tst.w	r3, #12
 8002056:	d10f      	bne.n	8002078 <HAL_RCC_ClockConfig+0x200>
 8002058:	e7a8      	b.n	8001fac <HAL_RCC_ClockConfig+0x134>
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800205a:	f000 f8a3 	bl	80021a4 <HAL_GetTick>
 800205e:	f241 3388 	movw	r3, #5000	; 0x1388
 8002062:	1b80      	subs	r0, r0, r6
 8002064:	4298      	cmp	r0, r3
 8002066:	f63f af75 	bhi.w	8001f54 <HAL_RCC_ClockConfig+0xdc>
          }
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800206a:	4b10      	ldr	r3, [pc, #64]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 800206c:	685b      	ldr	r3, [r3, #4]
 800206e:	f003 030c 	and.w	r3, r3, #12
 8002072:	2b08      	cmp	r3, #8
 8002074:	d1f1      	bne.n	800205a <HAL_RCC_ClockConfig+0x1e2>
 8002076:	e799      	b.n	8001fac <HAL_RCC_ClockConfig+0x134>
      }
      else
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002078:	f000 f894 	bl	80021a4 <HAL_GetTick>
 800207c:	f241 3388 	movw	r3, #5000	; 0x1388
 8002080:	1b80      	subs	r0, r0, r6
 8002082:	4298      	cmp	r0, r3
 8002084:	d9e3      	bls.n	800204e <HAL_RCC_ClockConfig+0x1d6>
 8002086:	e765      	b.n	8001f54 <HAL_RCC_ClockConfig+0xdc>
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
  }
  
  /*-------------------------- PCLK2 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002088:	071a      	lsls	r2, r3, #28
 800208a:	d507      	bpl.n	800209c <HAL_RCC_ClockConfig+0x224>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800208c:	4b07      	ldr	r3, [pc, #28]	; (80020ac <HAL_RCC_ClockConfig+0x234>)
 800208e:	6921      	ldr	r1, [r4, #16]
 8002090:	685a      	ldr	r2, [r3, #4]
 8002092:	f422 5260 	bic.w	r2, r2, #14336	; 0x3800
 8002096:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800209a:	605a      	str	r2, [r3, #4]
  }
 
  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 800209c:	200f      	movs	r0, #15
 800209e:	f000 f854 	bl	800214a <HAL_InitTick>
  
  return HAL_OK;
 80020a2:	2000      	movs	r0, #0
}
 80020a4:	bd70      	pop	{r4, r5, r6, pc}
 80020a6:	bf00      	nop
 80020a8:	40022000 	.word	0x40022000
 80020ac:	40021000 	.word	0x40021000

080020b0 <HAL_RCC_GetSysClockFreq>:
uint32_t HAL_RCC_GetSysClockFreq(void)
{
  uint32_t tmpreg = 0, prediv = 0, pllclk = 0, pllmul = 0;
  uint32_t sysclockfreq = 0;
  
  tmpreg = RCC->CFGR;
 80020b0:	4a13      	ldr	r2, [pc, #76]	; (8002100 <HAL_RCC_GetSysClockFreq+0x50>)
 80020b2:	6853      	ldr	r3, [r2, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 80020b4:	f003 010c 	and.w	r1, r3, #12
 80020b8:	2908      	cmp	r1, #8
 80020ba:	4611      	mov	r1, r2
 80020bc:	d11e      	bne.n	80020fc <HAL_RCC_GetSysClockFreq+0x4c>
 80020be:	f44f 1270 	mov.w	r2, #3932160	; 0x3c0000
 80020c2:	fa92 f2a2 	rbit	r2, r2
      sysclockfreq = HSE_VALUE;
      break;
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLLMUL)];
 80020c6:	f403 1070 	and.w	r0, r3, #3932160	; 0x3c0000
 80020ca:	fab2 f282 	clz	r2, r2
 80020ce:	fa20 f202 	lsr.w	r2, r0, r2
 80020d2:	480c      	ldr	r0, [pc, #48]	; (8002104 <HAL_RCC_GetSysClockFreq+0x54>)
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFGR2_PREDIV)];
 80020d4:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
      sysclockfreq = HSE_VALUE;
      break;
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLLMUL)];
 80020d6:	5c82      	ldrb	r2, [r0, r2]
 80020d8:	200f      	movs	r0, #15
 80020da:	fa90 f0a0 	rbit	r0, r0
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFGR2_PREDIV)];
 80020de:	fab0 f080 	clz	r0, r0
 80020e2:	f001 010f 	and.w	r1, r1, #15
 80020e6:	40c1      	lsrs	r1, r0
 80020e8:	4807      	ldr	r0, [pc, #28]	; (8002108 <HAL_RCC_GetSysClockFreq+0x58>)
#if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 80020ea:	03db      	lsls	r3, r3, #15
      break;
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLLMUL)];
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFGR2_PREDIV)];
 80020ec:	5c41      	ldrb	r1, [r0, r1]
#if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (HSE_VALUE / prediv) * pllmul;
 80020ee:	bf4a      	itet	mi
 80020f0:	4806      	ldrmi	r0, [pc, #24]	; (800210c <HAL_RCC_GetSysClockFreq+0x5c>)
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (HSI_VALUE >> 1) * pllmul;
 80020f2:	4807      	ldrpl	r0, [pc, #28]	; (8002110 <HAL_RCC_GetSysClockFreq+0x60>)
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFGR2_PREDIV)];
#if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (HSE_VALUE / prediv) * pllmul;
 80020f4:	fbb0 f0f1 	udivmi	r0, r0, r1
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (HSI_VALUE >> 1) * pllmul;
 80020f8:	4350      	muls	r0, r2
 80020fa:	4770      	bx	lr
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80020fc:	4803      	ldr	r0, [pc, #12]	; (800210c <HAL_RCC_GetSysClockFreq+0x5c>)
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80020fe:	4770      	bx	lr
 8002100:	40021000 	.word	0x40021000
 8002104:	08006d15 	.word	0x08006d15
 8002108:	08006d05 	.word	0x08006d05
 800210c:	007a1200 	.word	0x007a1200
 8002110:	003d0900 	.word	0x003d0900

08002114 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8002114:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> aAPBAHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POSITION_VAL(RCC_CFGR_HPRE)];
 8002116:	f7ff ffcb 	bl	80020b0 <HAL_RCC_GetSysClockFreq>
 800211a:	4b08      	ldr	r3, [pc, #32]	; (800213c <HAL_RCC_GetHCLKFreq+0x28>)
 800211c:	22f0      	movs	r2, #240	; 0xf0
 800211e:	685b      	ldr	r3, [r3, #4]
 8002120:	fa92 f2a2 	rbit	r2, r2
 8002124:	fab2 f282 	clz	r2, r2
 8002128:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800212c:	40d3      	lsrs	r3, r2
 800212e:	4a04      	ldr	r2, [pc, #16]	; (8002140 <HAL_RCC_GetHCLKFreq+0x2c>)
 8002130:	5cd3      	ldrb	r3, [r2, r3]
 8002132:	40d8      	lsrs	r0, r3
 8002134:	4b03      	ldr	r3, [pc, #12]	; (8002144 <HAL_RCC_GetHCLKFreq+0x30>)
 8002136:	6018      	str	r0, [r3, #0]
  return SystemCoreClock;
}
 8002138:	bd08      	pop	{r3, pc}
 800213a:	bf00      	nop
 800213c:	40021000 	.word	0x40021000
 8002140:	08006d25 	.word	0x08006d25
 8002144:	2000042c 	.word	0x2000042c

08002148 <HAL_MspInit>:
/**
  * @brief  Initializes the MSP.
  * @retval None
  */
__weak void HAL_MspInit(void)
{
 8002148:	4770      	bx	lr

0800214a <HAL_InitTick>:
  *         implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800214a:	b510      	push	{r4, lr}
 800214c:	4604      	mov	r4, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 800214e:	f7ff ffe1 	bl	8002114 <HAL_RCC_GetHCLKFreq>
 8002152:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002156:	fbb0 f0f3 	udiv	r0, r0, r3
 800215a:	f000 f87b 	bl	8002254 <HAL_SYSTICK_Config>
 
  /*Configure the SysTick IRQ priority */
  HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 800215e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002162:	4621      	mov	r1, r4
 8002164:	2200      	movs	r2, #0
 8002166:	f000 f843 	bl	80021f0 <HAL_NVIC_SetPriority>

   /* Return function status */
  return HAL_OK;
}
 800216a:	2000      	movs	r0, #0
 800216c:	bd10      	pop	{r4, pc}
	...

08002170 <HAL_Init>:
  *         In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002170:	b508      	push	{r3, lr}
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002172:	4b07      	ldr	r3, [pc, #28]	; (8002190 <HAL_Init+0x20>)
 8002174:	681a      	ldr	r2, [r3, #0]
 8002176:	f042 0210 	orr.w	r2, r2, #16
 800217a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800217c:	2003      	movs	r0, #3
 800217e:	f000 f825 	bl	80021cc <HAL_NVIC_SetPriorityGrouping>

  /* Enable systick and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002182:	200f      	movs	r0, #15
 8002184:	f7ff ffe1 	bl	800214a <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002188:	f7ff ffde 	bl	8002148 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800218c:	2000      	movs	r0, #0
 800218e:	bd08      	pop	{r3, pc}
 8002190:	40022000 	.word	0x40022000

08002194 <HAL_IncTick>:
  *         implementations  in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick++;
 8002194:	4b02      	ldr	r3, [pc, #8]	; (80021a0 <HAL_IncTick+0xc>)
 8002196:	681a      	ldr	r2, [r3, #0]
 8002198:	3201      	adds	r2, #1
 800219a:	601a      	str	r2, [r3, #0]
 800219c:	4770      	bx	lr
 800219e:	bf00      	nop
 80021a0:	20000974 	.word	0x20000974

080021a4 <HAL_GetTick>:
  *         implementations  in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;  
 80021a4:	4b01      	ldr	r3, [pc, #4]	; (80021ac <HAL_GetTick+0x8>)
 80021a6:	6818      	ldr	r0, [r3, #0]
}
 80021a8:	4770      	bx	lr
 80021aa:	bf00      	nop
 80021ac:	20000974 	.word	0x20000974

080021b0 <HAL_Delay>:
  *         implementations  in user file.
  * @param  Delay: specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(__IO uint32_t Delay)
{
 80021b0:	b513      	push	{r0, r1, r4, lr}
 80021b2:	9001      	str	r0, [sp, #4]
  uint32_t tickstart = HAL_GetTick();
 80021b4:	f7ff fff6 	bl	80021a4 <HAL_GetTick>
 80021b8:	4604      	mov	r4, r0
  while((HAL_GetTick() - tickstart) < Delay)
 80021ba:	f7ff fff3 	bl	80021a4 <HAL_GetTick>
 80021be:	9b01      	ldr	r3, [sp, #4]
 80021c0:	1b00      	subs	r0, r0, r4
 80021c2:	4298      	cmp	r0, r3
 80021c4:	d3f9      	bcc.n	80021ba <HAL_Delay+0xa>
  {
  }
}
 80021c6:	b002      	add	sp, #8
 80021c8:	bd10      	pop	{r4, pc}
	...

080021cc <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80021cc:	4a07      	ldr	r2, [pc, #28]	; (80021ec <HAL_NVIC_SetPriorityGrouping+0x20>)
 80021ce:	68d1      	ldr	r1, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear bits to change               */
 80021d0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80021d4:	400b      	ands	r3, r1
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80021d6:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80021da:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
    \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80021de:	f000 0007 	and.w	r0, r0, #7

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear bits to change               */
  reg_value  =  (reg_value                                   |
 80021e2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8)                       );              /* Insert write key and priorty group */
  SCB->AIRCR =  reg_value;
 80021e6:	60d3      	str	r3, [r2, #12]
 80021e8:	4770      	bx	lr
 80021ea:	bf00      	nop
 80021ec:	e000ed00 	.word	0xe000ed00

080021f0 <HAL_NVIC_SetPriority>:

    \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80021f0:	4b16      	ldr	r3, [pc, #88]	; (800224c <HAL_NVIC_SetPriority+0x5c>)
 80021f2:	68db      	ldr	r3, [r3, #12]
 80021f4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15 as described in the table CORTEX_NVIC_Priority_Table
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80021f8:	b570      	push	{r4, r5, r6, lr}
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80021fa:	1d1d      	adds	r5, r3, #4
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80021fc:	f1c3 0407 	rsb	r4, r3, #7
 8002200:	2c04      	cmp	r4, #4
 8002202:	bf28      	it	cs
 8002204:	2404      	movcs	r4, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8002206:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002208:	f04f 0501 	mov.w	r5, #1
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800220c:	bf8c      	ite	hi
 800220e:	3b03      	subhi	r3, #3
 8002210:	2300      	movls	r3, #0

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002212:	fa05 f404 	lsl.w	r4, r5, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002216:	fa05 f603 	lsl.w	r6, r5, r3

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800221a:	3c01      	subs	r4, #1
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800221c:	3e01      	subs	r6, #1

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800221e:	4021      	ands	r1, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002220:	4032      	ands	r2, r6

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002222:	fa01 f303 	lsl.w	r3, r1, r3
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

  return (
 8002226:	4313      	orrs	r3, r2
    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if((int32_t)IRQn < 0) {
 8002228:	2800      	cmp	r0, #0
 800222a:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800222e:	da05      	bge.n	800223c <HAL_NVIC_SetPriority+0x4c>
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002230:	b2da      	uxtb	r2, r3
 8002232:	f000 000f 	and.w	r0, r0, #15
 8002236:	4b06      	ldr	r3, [pc, #24]	; (8002250 <HAL_NVIC_SetPriority+0x60>)
 8002238:	541a      	strb	r2, [r3, r0]
 800223a:	bd70      	pop	{r4, r5, r6, pc}
  }
  else {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800223c:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002240:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8002244:	b2db      	uxtb	r3, r3
 8002246:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
 800224a:	bd70      	pop	{r4, r5, r6, pc}
 800224c:	e000ed00 	.word	0xe000ed00
 8002250:	e000ed14 	.word	0xe000ed14

08002254 <HAL_SYSTICK_Config>:
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
 8002254:	3801      	subs	r0, #1
 8002256:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800225a:	d20a      	bcs.n	8002272 <HAL_SYSTICK_Config+0x1e>

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800225c:	4b06      	ldr	r3, [pc, #24]	; (8002278 <HAL_SYSTICK_Config+0x24>)
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if((int32_t)IRQn < 0) {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800225e:	4a07      	ldr	r2, [pc, #28]	; (800227c <HAL_SYSTICK_Config+0x28>)
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002260:	6058      	str	r0, [r3, #4]
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if((int32_t)IRQn < 0) {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002262:	21f0      	movs	r1, #240	; 0xf0
 8002264:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002268:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800226a:	2207      	movs	r2, #7
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800226c:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800226e:	601a      	str	r2, [r3, #0]
 8002270:	4770      	bx	lr
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
 8002272:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8002274:	4770      	bx	lr
 8002276:	bf00      	nop
 8002278:	e000e010 	.word	0xe000e010
 800227c:	e000ed00 	.word	0xe000ed00

08002280 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002280:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while ((GPIO_Init->Pin) >> position)
 8002284:	680f      	ldr	r7, [r1, #0]
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00;
 8002286:	2300      	movs	r3, #0
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while ((GPIO_Init->Pin) >> position)
 8002288:	fa37 f203 	lsrs.w	r2, r7, r3
 800228c:	f000 80c0 	beq.w	8002410 <HAL_GPIO_Init+0x190>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1 << position);
 8002290:	2401      	movs	r4, #1
 8002292:	409c      	lsls	r4, r3

    if(iocurrent)
 8002294:	403c      	ands	r4, r7
 8002296:	f000 80b9 	beq.w	800240c <HAL_GPIO_Init+0x18c>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800229a:	684a      	ldr	r2, [r1, #4]
 800229c:	f022 0610 	bic.w	r6, r2, #16
 80022a0:	2e02      	cmp	r6, #2
 80022a2:	d116      	bne.n	80022d2 <HAL_GPIO_Init+0x52>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 80022a4:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
 80022a8:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80022ac:	f003 0807 	and.w	r8, r3, #7
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 80022b0:	f8dc 5020 	ldr.w	r5, [ip, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80022b4:	ea4f 0888 	mov.w	r8, r8, lsl #2
 80022b8:	f04f 090f 	mov.w	r9, #15
 80022bc:	fa09 f908 	lsl.w	r9, r9, r8
 80022c0:	ea25 0909 	bic.w	r9, r5, r9
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 80022c4:	690d      	ldr	r5, [r1, #16]
 80022c6:	fa05 f808 	lsl.w	r8, r5, r8
 80022ca:	ea49 0508 	orr.w	r5, r9, r8
        GPIOx->AFR[position >> 3] = temp;
 80022ce:	f8cc 5020 	str.w	r5, [ip, #32]
 80022d2:	005d      	lsls	r5, r3, #1
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80022d4:	f04f 0c03 	mov.w	ip, #3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
        GPIOx->AFR[position >> 3] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80022d8:	f8d0 9000 	ldr.w	r9, [r0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80022dc:	fa0c fc05 	lsl.w	ip, ip, r5
 80022e0:	ea6f 0c0c 	mvn.w	ip, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80022e4:	f002 0803 	and.w	r8, r2, #3
        GPIOx->AFR[position >> 3] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80022e8:	ea0c 0909 	and.w	r9, ip, r9
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80022ec:	fa08 f805 	lsl.w	r8, r8, r5
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80022f0:	3e01      	subs	r6, #1
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80022f2:	ea49 0808 	orr.w	r8, r9, r8
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80022f6:	2e01      	cmp	r6, #1

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
      GPIOx->MODER = temp;
 80022f8:	f8c0 8000 	str.w	r8, [r0]

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80022fc:	d815      	bhi.n	800232a <HAL_GPIO_Init+0xaa>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80022fe:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8002300:	ea0c 0806 	and.w	r8, ip, r6
        temp |= (GPIO_Init->Speed << (position * 2));
 8002304:	68ce      	ldr	r6, [r1, #12]
 8002306:	40ae      	lsls	r6, r5
 8002308:	ea48 0606 	orr.w	r6, r8, r6
        GPIOx->OSPEEDR = temp;
 800230c:	6086      	str	r6, [r0, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800230e:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002310:	f04f 0801 	mov.w	r8, #1
 8002314:	fa08 f803 	lsl.w	r8, r8, r3
 8002318:	ea26 0608 	bic.w	r6, r6, r8
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800231c:	f3c2 1800 	ubfx	r8, r2, #4, #1
 8002320:	fa08 f803 	lsl.w	r8, r8, r3
 8002324:	ea46 0608 	orr.w	r6, r6, r8
        GPIOx->OTYPER = temp;
 8002328:	6046      	str	r6, [r0, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800232a:	68c6      	ldr	r6, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 800232c:	ea0c 0c06 	and.w	ip, ip, r6
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8002330:	688e      	ldr	r6, [r1, #8]
 8002332:	40ae      	lsls	r6, r5
 8002334:	ea4c 0506 	orr.w	r5, ip, r6
      GPIOx->PUPDR = temp;
 8002338:	60c5      	str	r5, [r0, #12]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800233a:	00d5      	lsls	r5, r2, #3
 800233c:	d566      	bpl.n	800240c <HAL_GPIO_Init+0x18c>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800233e:	4d36      	ldr	r5, [pc, #216]	; (8002418 <HAL_GPIO_Init+0x198>)
 8002340:	69ae      	ldr	r6, [r5, #24]
 8002342:	f046 0601 	orr.w	r6, r6, #1
 8002346:	61ae      	str	r6, [r5, #24]
 8002348:	69ad      	ldr	r5, [r5, #24]
 800234a:	f023 0603 	bic.w	r6, r3, #3
 800234e:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8002352:	f005 0501 	and.w	r5, r5, #1
 8002356:	f506 3680 	add.w	r6, r6, #65536	; 0x10000
 800235a:	9501      	str	r5, [sp, #4]

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800235c:	f003 0c03 	and.w	ip, r3, #3
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002360:	9d01      	ldr	r5, [sp, #4]

        temp = SYSCFG->EXTICR[position >> 2];
 8002362:	68b5      	ldr	r5, [r6, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8002364:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8002368:	f04f 080f 	mov.w	r8, #15
 800236c:	fa08 f80c 	lsl.w	r8, r8, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4 * (position & 0x03)));
 8002370:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8002374:	ea25 0808 	bic.w	r8, r5, r8
        temp |= (GPIO_GET_INDEX(GPIOx) << (4 * (position & 0x03)));
 8002378:	d011      	beq.n	800239e <HAL_GPIO_Init+0x11e>
 800237a:	4d28      	ldr	r5, [pc, #160]	; (800241c <HAL_GPIO_Init+0x19c>)
 800237c:	42a8      	cmp	r0, r5
 800237e:	d010      	beq.n	80023a2 <HAL_GPIO_Init+0x122>
 8002380:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8002384:	42a8      	cmp	r0, r5
 8002386:	d00e      	beq.n	80023a6 <HAL_GPIO_Init+0x126>
 8002388:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800238c:	42a8      	cmp	r0, r5
 800238e:	d00c      	beq.n	80023aa <HAL_GPIO_Init+0x12a>
 8002390:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8002394:	42a8      	cmp	r0, r5
 8002396:	bf14      	ite	ne
 8002398:	2505      	movne	r5, #5
 800239a:	2504      	moveq	r5, #4
 800239c:	e006      	b.n	80023ac <HAL_GPIO_Init+0x12c>
 800239e:	2500      	movs	r5, #0
 80023a0:	e004      	b.n	80023ac <HAL_GPIO_Init+0x12c>
 80023a2:	2501      	movs	r5, #1
 80023a4:	e002      	b.n	80023ac <HAL_GPIO_Init+0x12c>
 80023a6:	2502      	movs	r5, #2
 80023a8:	e000      	b.n	80023ac <HAL_GPIO_Init+0x12c>
 80023aa:	2503      	movs	r5, #3
 80023ac:	fa05 f50c 	lsl.w	r5, r5, ip
 80023b0:	ea45 0508 	orr.w	r5, r5, r8
        SYSCFG->EXTICR[position >> 2] = temp;
 80023b4:	60b5      	str	r5, [r6, #8]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80023b6:	4e1a      	ldr	r6, [pc, #104]	; (8002420 <HAL_GPIO_Init+0x1a0>)
 80023b8:	f8d6 c000 	ldr.w	ip, [r6]
        temp &= ~((uint32_t)iocurrent);
 80023bc:	43e5      	mvns	r5, r4
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80023be:	f412 3f80 	tst.w	r2, #65536	; 0x10000
        {
          temp |= iocurrent;
 80023c2:	bf14      	ite	ne
 80023c4:	ea44 0c0c 	orrne.w	ip, r4, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
 80023c8:	ea05 0c0c 	andeq.w	ip, r5, ip
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
        {
          temp |= iocurrent;
        }
        EXTI->IMR = temp;
 80023cc:	f8c6 c000 	str.w	ip, [r6]

        temp = EXTI->EMR;
 80023d0:	6876      	ldr	r6, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80023d2:	f412 3f00 	tst.w	r2, #131072	; 0x20000
        {
          temp |= iocurrent;
 80023d6:	bf14      	ite	ne
 80023d8:	ea44 0c06 	orrne.w	ip, r4, r6
          temp |= iocurrent;
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
 80023dc:	ea05 0c06 	andeq.w	ip, r5, r6
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
        {
          temp |= iocurrent;
        }
        EXTI->EMR = temp;
 80023e0:	4e0f      	ldr	r6, [pc, #60]	; (8002420 <HAL_GPIO_Init+0x1a0>)
 80023e2:	f8c6 c004 	str.w	ip, [r6, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80023e6:	f8d6 c008 	ldr.w	ip, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80023ea:	f412 1f80 	tst.w	r2, #1048576	; 0x100000
        {
          temp |= iocurrent;
 80023ee:	bf14      	ite	ne
 80023f0:	ea44 0c0c 	orrne.w	ip, r4, ip
        }
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
 80023f4:	ea05 0c0c 	andeq.w	ip, r5, ip
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
        {
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;
 80023f8:	f8c6 c008 	str.w	ip, [r6, #8]

        temp = EXTI->FTSR;
 80023fc:	68f6      	ldr	r6, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80023fe:	0292      	lsls	r2, r2, #10
        {
          temp |= iocurrent;
        }
        EXTI->FTSR = temp;
 8002400:	4a07      	ldr	r2, [pc, #28]	; (8002420 <HAL_GPIO_Init+0x1a0>)
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
 8002402:	bf54      	ite	pl
 8002404:	ea05 0406 	andpl.w	r4, r5, r6
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
        {
          temp |= iocurrent;
 8002408:	4334      	orrmi	r4, r6
        }
        EXTI->FTSR = temp;
 800240a:	60d4      	str	r4, [r2, #12]
      }
    }
    
    position++;
 800240c:	3301      	adds	r3, #1
 800240e:	e73b      	b.n	8002288 <HAL_GPIO_Init+0x8>
  }
}
 8002410:	b003      	add	sp, #12
 8002412:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002416:	bf00      	nop
 8002418:	40021000 	.word	0x40021000
 800241c:	48000400 	.word	0x48000400
 8002420:	40010400 	.word	0x40010400

08002424 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  GPIOx->ODR ^= GPIO_Pin;
 8002424:	6943      	ldr	r3, [r0, #20]
 8002426:	4059      	eors	r1, r3
 8002428:	6141      	str	r1, [r0, #20]
 800242a:	4770      	bx	lr

0800242c <__errno>:
 800242c:	f240 4328 	movw	r3, #1064	; 0x428
 8002430:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8002434:	6818      	ldr	r0, [r3, #0]
 8002436:	4770      	bx	lr

08002438 <_cleanup_r>:
 8002438:	f245 51a5 	movw	r1, #21925	; 0x55a5
 800243c:	f6c0 0100 	movt	r1, #2048	; 0x800
 8002440:	f000 b880 	b.w	8002544 <_fwalk>

08002444 <__sinit>:
 8002444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002448:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800244a:	b083      	sub	sp, #12
 800244c:	4607      	mov	r7, r0
 800244e:	2c00      	cmp	r4, #0
 8002450:	d170      	bne.n	8002534 <__sinit+0xf0>
 8002452:	6845      	ldr	r5, [r0, #4]
 8002454:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
 8002458:	f242 4339 	movw	r3, #9273	; 0x2439
 800245c:	f6c0 0300 	movt	r3, #2048	; 0x800
 8002460:	2003      	movs	r0, #3
 8002462:	f507 713b 	add.w	r1, r7, #748	; 0x2ec
 8002466:	2204      	movs	r2, #4
 8002468:	63fb      	str	r3, [r7, #60]	; 0x3c
 800246a:	f8c7 02e4 	str.w	r0, [r7, #740]	; 0x2e4
 800246e:	f8c7 12e8 	str.w	r1, [r7, #744]	; 0x2e8
 8002472:	f105 005c 	add.w	r0, r5, #92	; 0x5c
 8002476:	81aa      	strh	r2, [r5, #12]
 8002478:	602c      	str	r4, [r5, #0]
 800247a:	606c      	str	r4, [r5, #4]
 800247c:	60ac      	str	r4, [r5, #8]
 800247e:	666c      	str	r4, [r5, #100]	; 0x64
 8002480:	81ec      	strh	r4, [r5, #14]
 8002482:	612c      	str	r4, [r5, #16]
 8002484:	616c      	str	r4, [r5, #20]
 8002486:	61ac      	str	r4, [r5, #24]
 8002488:	4621      	mov	r1, r4
 800248a:	2208      	movs	r2, #8
 800248c:	f7fe ff1e 	bl	80012cc <memset>
 8002490:	f642 4be5 	movw	fp, #11493	; 0x2ce5
 8002494:	68be      	ldr	r6, [r7, #8]
 8002496:	61ed      	str	r5, [r5, #28]
 8002498:	f642 5a09 	movw	sl, #11529	; 0x2d09
 800249c:	f642 5941 	movw	r9, #11585	; 0x2d41
 80024a0:	f642 5861 	movw	r8, #11617	; 0x2d61
 80024a4:	2301      	movs	r3, #1
 80024a6:	f6c0 0b00 	movt	fp, #2048	; 0x800
 80024aa:	f6c0 0a00 	movt	sl, #2048	; 0x800
 80024ae:	f6c0 0900 	movt	r9, #2048	; 0x800
 80024b2:	f6c0 0800 	movt	r8, #2048	; 0x800
 80024b6:	2209      	movs	r2, #9
 80024b8:	f8c5 b020 	str.w	fp, [r5, #32]
 80024bc:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 80024c0:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
 80024c4:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
 80024c8:	4621      	mov	r1, r4
 80024ca:	81f3      	strh	r3, [r6, #14]
 80024cc:	81b2      	strh	r2, [r6, #12]
 80024ce:	6034      	str	r4, [r6, #0]
 80024d0:	6074      	str	r4, [r6, #4]
 80024d2:	60b4      	str	r4, [r6, #8]
 80024d4:	6674      	str	r4, [r6, #100]	; 0x64
 80024d6:	6134      	str	r4, [r6, #16]
 80024d8:	6174      	str	r4, [r6, #20]
 80024da:	61b4      	str	r4, [r6, #24]
 80024dc:	2208      	movs	r2, #8
 80024de:	f106 005c 	add.w	r0, r6, #92	; 0x5c
 80024e2:	9301      	str	r3, [sp, #4]
 80024e4:	f7fe fef2 	bl	80012cc <memset>
 80024e8:	68fd      	ldr	r5, [r7, #12]
 80024ea:	f8c6 b020 	str.w	fp, [r6, #32]
 80024ee:	2012      	movs	r0, #18
 80024f0:	2202      	movs	r2, #2
 80024f2:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
 80024f6:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
 80024fa:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
 80024fe:	61f6      	str	r6, [r6, #28]
 8002500:	4621      	mov	r1, r4
 8002502:	81a8      	strh	r0, [r5, #12]
 8002504:	81ea      	strh	r2, [r5, #14]
 8002506:	602c      	str	r4, [r5, #0]
 8002508:	606c      	str	r4, [r5, #4]
 800250a:	60ac      	str	r4, [r5, #8]
 800250c:	666c      	str	r4, [r5, #100]	; 0x64
 800250e:	612c      	str	r4, [r5, #16]
 8002510:	616c      	str	r4, [r5, #20]
 8002512:	61ac      	str	r4, [r5, #24]
 8002514:	f105 005c 	add.w	r0, r5, #92	; 0x5c
 8002518:	2208      	movs	r2, #8
 800251a:	f7fe fed7 	bl	80012cc <memset>
 800251e:	9b01      	ldr	r3, [sp, #4]
 8002520:	f8c5 b020 	str.w	fp, [r5, #32]
 8002524:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8002528:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
 800252c:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
 8002530:	61ed      	str	r5, [r5, #28]
 8002532:	63bb      	str	r3, [r7, #56]	; 0x38
 8002534:	b003      	add	sp, #12
 8002536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800253a:	bf00      	nop

0800253c <__sfp_lock_acquire>:
 800253c:	4770      	bx	lr
 800253e:	bf00      	nop

08002540 <__sfp_lock_release>:
 8002540:	4770      	bx	lr
 8002542:	bf00      	nop

08002544 <_fwalk>:
 8002544:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002548:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
 800254c:	4688      	mov	r8, r1
 800254e:	d01a      	beq.n	8002586 <_fwalk+0x42>
 8002550:	2600      	movs	r6, #0
 8002552:	687d      	ldr	r5, [r7, #4]
 8002554:	68bc      	ldr	r4, [r7, #8]
 8002556:	3d01      	subs	r5, #1
 8002558:	d40f      	bmi.n	800257a <_fwalk+0x36>
 800255a:	89a3      	ldrh	r3, [r4, #12]
 800255c:	2b01      	cmp	r3, #1
 800255e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8002562:	d906      	bls.n	8002572 <_fwalk+0x2e>
 8002564:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8002568:	3301      	adds	r3, #1
 800256a:	4620      	mov	r0, r4
 800256c:	d001      	beq.n	8002572 <_fwalk+0x2e>
 800256e:	47c0      	blx	r8
 8002570:	4306      	orrs	r6, r0
 8002572:	1c6b      	adds	r3, r5, #1
 8002574:	f104 0468 	add.w	r4, r4, #104	; 0x68
 8002578:	d1ef      	bne.n	800255a <_fwalk+0x16>
 800257a:	683f      	ldr	r7, [r7, #0]
 800257c:	2f00      	cmp	r7, #0
 800257e:	d1e8      	bne.n	8002552 <_fwalk+0xe>
 8002580:	4630      	mov	r0, r6
 8002582:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002586:	463e      	mov	r6, r7
 8002588:	4630      	mov	r0, r6
 800258a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800258e:	bf00      	nop

08002590 <_malloc_r>:
 8002590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002594:	f101 050b 	add.w	r5, r1, #11
 8002598:	2d16      	cmp	r5, #22
 800259a:	bf87      	ittee	hi
 800259c:	f025 0507 	bichi.w	r5, r5, #7
 80025a0:	0feb      	lsrhi	r3, r5, #31
 80025a2:	2300      	movls	r3, #0
 80025a4:	2510      	movls	r5, #16
 80025a6:	428d      	cmp	r5, r1
 80025a8:	bf2c      	ite	cs
 80025aa:	4619      	movcs	r1, r3
 80025ac:	f043 0101 	orrcc.w	r1, r3, #1
 80025b0:	b083      	sub	sp, #12
 80025b2:	4607      	mov	r7, r0
 80025b4:	2900      	cmp	r1, #0
 80025b6:	f040 80b5 	bne.w	8002724 <_malloc_r+0x194>
 80025ba:	f000 fa9b 	bl	8002af4 <__malloc_lock>
 80025be:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
 80025c2:	d21f      	bcs.n	8002604 <_malloc_r+0x74>
 80025c4:	f240 4630 	movw	r6, #1072	; 0x430
 80025c8:	f2c2 0600 	movt	r6, #8192	; 0x2000
 80025cc:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
 80025d0:	eb06 03cc 	add.w	r3, r6, ip, lsl #3
 80025d4:	68dc      	ldr	r4, [r3, #12]
 80025d6:	429c      	cmp	r4, r3
 80025d8:	f000 81f4 	beq.w	80029c4 <_malloc_r+0x434>
 80025dc:	6863      	ldr	r3, [r4, #4]
 80025de:	68e2      	ldr	r2, [r4, #12]
 80025e0:	68a1      	ldr	r1, [r4, #8]
 80025e2:	f023 0303 	bic.w	r3, r3, #3
 80025e6:	4423      	add	r3, r4
 80025e8:	4638      	mov	r0, r7
 80025ea:	685d      	ldr	r5, [r3, #4]
 80025ec:	60ca      	str	r2, [r1, #12]
 80025ee:	f045 0501 	orr.w	r5, r5, #1
 80025f2:	6091      	str	r1, [r2, #8]
 80025f4:	605d      	str	r5, [r3, #4]
 80025f6:	f000 fa7f 	bl	8002af8 <__malloc_unlock>
 80025fa:	3408      	adds	r4, #8
 80025fc:	4620      	mov	r0, r4
 80025fe:	b003      	add	sp, #12
 8002600:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002604:	ea5f 2c55 	movs.w	ip, r5, lsr #9
 8002608:	bf04      	itt	eq
 800260a:	217e      	moveq	r1, #126	; 0x7e
 800260c:	f04f 0c3f 	moveq.w	ip, #63	; 0x3f
 8002610:	f040 808f 	bne.w	8002732 <_malloc_r+0x1a2>
 8002614:	f240 4630 	movw	r6, #1072	; 0x430
 8002618:	f2c2 0600 	movt	r6, #8192	; 0x2000
 800261c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
 8002620:	68cc      	ldr	r4, [r1, #12]
 8002622:	42a1      	cmp	r1, r4
 8002624:	d106      	bne.n	8002634 <_malloc_r+0xa4>
 8002626:	e00d      	b.n	8002644 <_malloc_r+0xb4>
 8002628:	2b00      	cmp	r3, #0
 800262a:	f280 8163 	bge.w	80028f4 <_malloc_r+0x364>
 800262e:	68e4      	ldr	r4, [r4, #12]
 8002630:	42a1      	cmp	r1, r4
 8002632:	d007      	beq.n	8002644 <_malloc_r+0xb4>
 8002634:	6862      	ldr	r2, [r4, #4]
 8002636:	f022 0203 	bic.w	r2, r2, #3
 800263a:	1b53      	subs	r3, r2, r5
 800263c:	2b0f      	cmp	r3, #15
 800263e:	ddf3      	ble.n	8002628 <_malloc_r+0x98>
 8002640:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 8002644:	f10c 0c01 	add.w	ip, ip, #1
 8002648:	f240 4330 	movw	r3, #1072	; 0x430
 800264c:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8002650:	6934      	ldr	r4, [r6, #16]
 8002652:	f103 0e08 	add.w	lr, r3, #8
 8002656:	4574      	cmp	r4, lr
 8002658:	bf08      	it	eq
 800265a:	685a      	ldreq	r2, [r3, #4]
 800265c:	d022      	beq.n	80026a4 <_malloc_r+0x114>
 800265e:	6861      	ldr	r1, [r4, #4]
 8002660:	f021 0103 	bic.w	r1, r1, #3
 8002664:	1b4a      	subs	r2, r1, r5
 8002666:	2a0f      	cmp	r2, #15
 8002668:	f300 8190 	bgt.w	800298c <_malloc_r+0x3fc>
 800266c:	2a00      	cmp	r2, #0
 800266e:	f8c3 e014 	str.w	lr, [r3, #20]
 8002672:	f8c3 e010 	str.w	lr, [r3, #16]
 8002676:	da67      	bge.n	8002748 <_malloc_r+0x1b8>
 8002678:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800267c:	f080 815f 	bcs.w	800293e <_malloc_r+0x3ae>
 8002680:	08c9      	lsrs	r1, r1, #3
 8002682:	eb03 00c1 	add.w	r0, r3, r1, lsl #3
 8002686:	ea4f 08a1 	mov.w	r8, r1, asr #2
 800268a:	685a      	ldr	r2, [r3, #4]
 800268c:	6881      	ldr	r1, [r0, #8]
 800268e:	60e0      	str	r0, [r4, #12]
 8002690:	f04f 0901 	mov.w	r9, #1
 8002694:	fa09 f808 	lsl.w	r8, r9, r8
 8002698:	ea48 0202 	orr.w	r2, r8, r2
 800269c:	60a1      	str	r1, [r4, #8]
 800269e:	605a      	str	r2, [r3, #4]
 80026a0:	6084      	str	r4, [r0, #8]
 80026a2:	60cc      	str	r4, [r1, #12]
 80026a4:	ea4f 03ac 	mov.w	r3, ip, asr #2
 80026a8:	2001      	movs	r0, #1
 80026aa:	4098      	lsls	r0, r3
 80026ac:	4290      	cmp	r0, r2
 80026ae:	d858      	bhi.n	8002762 <_malloc_r+0x1d2>
 80026b0:	4202      	tst	r2, r0
 80026b2:	d106      	bne.n	80026c2 <_malloc_r+0x132>
 80026b4:	f02c 0c03 	bic.w	ip, ip, #3
 80026b8:	0040      	lsls	r0, r0, #1
 80026ba:	4202      	tst	r2, r0
 80026bc:	f10c 0c04 	add.w	ip, ip, #4
 80026c0:	d0fa      	beq.n	80026b8 <_malloc_r+0x128>
 80026c2:	eb06 08cc 	add.w	r8, r6, ip, lsl #3
 80026c6:	4644      	mov	r4, r8
 80026c8:	46e1      	mov	r9, ip
 80026ca:	68e3      	ldr	r3, [r4, #12]
 80026cc:	429c      	cmp	r4, r3
 80026ce:	d107      	bne.n	80026e0 <_malloc_r+0x150>
 80026d0:	e16f      	b.n	80029b2 <_malloc_r+0x422>
 80026d2:	2a00      	cmp	r2, #0
 80026d4:	f280 8180 	bge.w	80029d8 <_malloc_r+0x448>
 80026d8:	68db      	ldr	r3, [r3, #12]
 80026da:	429c      	cmp	r4, r3
 80026dc:	f000 8169 	beq.w	80029b2 <_malloc_r+0x422>
 80026e0:	6859      	ldr	r1, [r3, #4]
 80026e2:	f021 0103 	bic.w	r1, r1, #3
 80026e6:	1b4a      	subs	r2, r1, r5
 80026e8:	2a0f      	cmp	r2, #15
 80026ea:	ddf2      	ble.n	80026d2 <_malloc_r+0x142>
 80026ec:	461c      	mov	r4, r3
 80026ee:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 80026f2:	f854 8f08 	ldr.w	r8, [r4, #8]!
 80026f6:	1959      	adds	r1, r3, r5
 80026f8:	f045 0901 	orr.w	r9, r5, #1
 80026fc:	f042 0501 	orr.w	r5, r2, #1
 8002700:	f8c3 9004 	str.w	r9, [r3, #4]
 8002704:	4638      	mov	r0, r7
 8002706:	f8c8 c00c 	str.w	ip, [r8, #12]
 800270a:	f8cc 8008 	str.w	r8, [ip, #8]
 800270e:	6171      	str	r1, [r6, #20]
 8002710:	6131      	str	r1, [r6, #16]
 8002712:	f8c1 e00c 	str.w	lr, [r1, #12]
 8002716:	f8c1 e008 	str.w	lr, [r1, #8]
 800271a:	604d      	str	r5, [r1, #4]
 800271c:	508a      	str	r2, [r1, r2]
 800271e:	f000 f9eb 	bl	8002af8 <__malloc_unlock>
 8002722:	e76b      	b.n	80025fc <_malloc_r+0x6c>
 8002724:	230c      	movs	r3, #12
 8002726:	2400      	movs	r4, #0
 8002728:	6003      	str	r3, [r0, #0]
 800272a:	4620      	mov	r0, r4
 800272c:	b003      	add	sp, #12
 800272e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002732:	f1bc 0f04 	cmp.w	ip, #4
 8002736:	f200 80ee 	bhi.w	8002916 <_malloc_r+0x386>
 800273a:	ea4f 1c95 	mov.w	ip, r5, lsr #6
 800273e:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
 8002742:	ea4f 014c 	mov.w	r1, ip, lsl #1
 8002746:	e765      	b.n	8002614 <_malloc_r+0x84>
 8002748:	4421      	add	r1, r4
 800274a:	4638      	mov	r0, r7
 800274c:	684b      	ldr	r3, [r1, #4]
 800274e:	f043 0301 	orr.w	r3, r3, #1
 8002752:	604b      	str	r3, [r1, #4]
 8002754:	f000 f9d0 	bl	8002af8 <__malloc_unlock>
 8002758:	3408      	adds	r4, #8
 800275a:	4620      	mov	r0, r4
 800275c:	b003      	add	sp, #12
 800275e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002762:	68b4      	ldr	r4, [r6, #8]
 8002764:	6863      	ldr	r3, [r4, #4]
 8002766:	f023 0903 	bic.w	r9, r3, #3
 800276a:	454d      	cmp	r5, r9
 800276c:	d804      	bhi.n	8002778 <_malloc_r+0x1e8>
 800276e:	ebc5 0309 	rsb	r3, r5, r9
 8002772:	2b0f      	cmp	r3, #15
 8002774:	f300 80ae 	bgt.w	80028d4 <_malloc_r+0x344>
 8002778:	f640 1380 	movw	r3, #2432	; 0x980
 800277c:	f640 0a3c 	movw	sl, #2108	; 0x83c
 8002780:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8002784:	f2c2 0a00 	movt	sl, #8192	; 0x2000
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	f8da 1000 	ldr.w	r1, [sl]
 800278e:	442b      	add	r3, r5
 8002790:	3101      	adds	r1, #1
 8002792:	bf1d      	ittte	ne
 8002794:	f503 5380 	addne.w	r3, r3, #4096	; 0x1000
 8002798:	330f      	addne	r3, #15
 800279a:	f423 637f 	bicne.w	r3, r3, #4080	; 0xff0
 800279e:	f103 0c10 	addeq.w	ip, r3, #16
 80027a2:	bf18      	it	ne
 80027a4:	f023 0c0f 	bicne.w	ip, r3, #15
 80027a8:	eb04 0209 	add.w	r2, r4, r9
 80027ac:	4661      	mov	r1, ip
 80027ae:	4638      	mov	r0, r7
 80027b0:	9201      	str	r2, [sp, #4]
 80027b2:	f8cd c000 	str.w	ip, [sp]
 80027b6:	f000 f9ef 	bl	8002b98 <_sbrk_r>
 80027ba:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80027be:	4680      	mov	r8, r0
 80027c0:	9a01      	ldr	r2, [sp, #4]
 80027c2:	f8dd c000 	ldr.w	ip, [sp]
 80027c6:	f000 811d 	beq.w	8002a04 <_malloc_r+0x474>
 80027ca:	4282      	cmp	r2, r0
 80027cc:	f200 8117 	bhi.w	80029fe <_malloc_r+0x46e>
 80027d0:	f640 1b84 	movw	fp, #2436	; 0x984
 80027d4:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 80027d8:	4542      	cmp	r2, r8
 80027da:	f8db 3000 	ldr.w	r3, [fp]
 80027de:	4463      	add	r3, ip
 80027e0:	f8cb 3000 	str.w	r3, [fp]
 80027e4:	f000 815d 	beq.w	8002aa2 <_malloc_r+0x512>
 80027e8:	f8da 0000 	ldr.w	r0, [sl]
 80027ec:	f640 013c 	movw	r1, #2108	; 0x83c
 80027f0:	3001      	adds	r0, #1
 80027f2:	bf18      	it	ne
 80027f4:	ebc2 0208 	rsbne	r2, r2, r8
 80027f8:	f2c2 0100 	movt	r1, #8192	; 0x2000
 80027fc:	bf16      	itet	ne
 80027fe:	189b      	addne	r3, r3, r2
 8002800:	f8c1 8000 	streq.w	r8, [r1]
 8002804:	f8cb 3000 	strne.w	r3, [fp]
 8002808:	f018 0307 	ands.w	r3, r8, #7
 800280c:	bf1f      	itttt	ne
 800280e:	f1c3 0208 	rsbne	r2, r3, #8
 8002812:	4490      	addne	r8, r2
 8002814:	f5c3 5380 	rsbne	r3, r3, #4096	; 0x1000
 8002818:	f103 0a08 	addne.w	sl, r3, #8
 800281c:	eb08 030c 	add.w	r3, r8, ip
 8002820:	bf08      	it	eq
 8002822:	f44f 5a80 	moveq.w	sl, #4096	; 0x1000
 8002826:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800282a:	ebc3 0a0a 	rsb	sl, r3, sl
 800282e:	4651      	mov	r1, sl
 8002830:	4638      	mov	r0, r7
 8002832:	f000 f9b1 	bl	8002b98 <_sbrk_r>
 8002836:	1c43      	adds	r3, r0, #1
 8002838:	bf18      	it	ne
 800283a:	ebc8 0200 	rsbne	r2, r8, r0
 800283e:	f8db 3000 	ldr.w	r3, [fp]
 8002842:	f8c6 8008 	str.w	r8, [r6, #8]
 8002846:	bf15      	itete	ne
 8002848:	4452      	addne	r2, sl
 800284a:	f04f 0a00 	moveq.w	sl, #0
 800284e:	f042 0201 	orrne.w	r2, r2, #1
 8002852:	2201      	moveq	r2, #1
 8002854:	4453      	add	r3, sl
 8002856:	42b4      	cmp	r4, r6
 8002858:	f640 1a84 	movw	sl, #2436	; 0x984
 800285c:	f8c8 2004 	str.w	r2, [r8, #4]
 8002860:	f8cb 3000 	str.w	r3, [fp]
 8002864:	f2c2 0a00 	movt	sl, #8192	; 0x2000
 8002868:	d015      	beq.n	8002896 <_malloc_r+0x306>
 800286a:	f1b9 0f0f 	cmp.w	r9, #15
 800286e:	f240 80f8 	bls.w	8002a62 <_malloc_r+0x4d2>
 8002872:	6861      	ldr	r1, [r4, #4]
 8002874:	f1a9 020c 	sub.w	r2, r9, #12
 8002878:	f022 0207 	bic.w	r2, r2, #7
 800287c:	f001 0e01 	and.w	lr, r1, #1
 8002880:	18a1      	adds	r1, r4, r2
 8002882:	2005      	movs	r0, #5
 8002884:	ea42 0e0e 	orr.w	lr, r2, lr
 8002888:	2a0f      	cmp	r2, #15
 800288a:	f8c4 e004 	str.w	lr, [r4, #4]
 800288e:	6048      	str	r0, [r1, #4]
 8002890:	6088      	str	r0, [r1, #8]
 8002892:	f200 8112 	bhi.w	8002aba <_malloc_r+0x52a>
 8002896:	f640 127c 	movw	r2, #2428	; 0x97c
 800289a:	f2c2 0200 	movt	r2, #8192	; 0x2000
 800289e:	68b4      	ldr	r4, [r6, #8]
 80028a0:	6811      	ldr	r1, [r2, #0]
 80028a2:	428b      	cmp	r3, r1
 80028a4:	bf88      	it	hi
 80028a6:	6013      	strhi	r3, [r2, #0]
 80028a8:	f640 1278 	movw	r2, #2424	; 0x978
 80028ac:	f2c2 0200 	movt	r2, #8192	; 0x2000
 80028b0:	6811      	ldr	r1, [r2, #0]
 80028b2:	428b      	cmp	r3, r1
 80028b4:	bf88      	it	hi
 80028b6:	6013      	strhi	r3, [r2, #0]
 80028b8:	6862      	ldr	r2, [r4, #4]
 80028ba:	f022 0203 	bic.w	r2, r2, #3
 80028be:	4295      	cmp	r5, r2
 80028c0:	ebc5 0302 	rsb	r3, r5, r2
 80028c4:	d801      	bhi.n	80028ca <_malloc_r+0x33a>
 80028c6:	2b0f      	cmp	r3, #15
 80028c8:	dc04      	bgt.n	80028d4 <_malloc_r+0x344>
 80028ca:	4638      	mov	r0, r7
 80028cc:	f000 f914 	bl	8002af8 <__malloc_unlock>
 80028d0:	2400      	movs	r4, #0
 80028d2:	e693      	b.n	80025fc <_malloc_r+0x6c>
 80028d4:	1962      	adds	r2, r4, r5
 80028d6:	f043 0301 	orr.w	r3, r3, #1
 80028da:	f045 0501 	orr.w	r5, r5, #1
 80028de:	6065      	str	r5, [r4, #4]
 80028e0:	4638      	mov	r0, r7
 80028e2:	60b2      	str	r2, [r6, #8]
 80028e4:	6053      	str	r3, [r2, #4]
 80028e6:	f000 f907 	bl	8002af8 <__malloc_unlock>
 80028ea:	3408      	adds	r4, #8
 80028ec:	4620      	mov	r0, r4
 80028ee:	b003      	add	sp, #12
 80028f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80028f4:	4422      	add	r2, r4
 80028f6:	68e3      	ldr	r3, [r4, #12]
 80028f8:	6850      	ldr	r0, [r2, #4]
 80028fa:	68a1      	ldr	r1, [r4, #8]
 80028fc:	f040 0501 	orr.w	r5, r0, #1
 8002900:	60cb      	str	r3, [r1, #12]
 8002902:	4638      	mov	r0, r7
 8002904:	6099      	str	r1, [r3, #8]
 8002906:	6055      	str	r5, [r2, #4]
 8002908:	f000 f8f6 	bl	8002af8 <__malloc_unlock>
 800290c:	3408      	adds	r4, #8
 800290e:	4620      	mov	r0, r4
 8002910:	b003      	add	sp, #12
 8002912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002916:	f1bc 0f14 	cmp.w	ip, #20
 800291a:	bf9c      	itt	ls
 800291c:	f10c 0c5b 	addls.w	ip, ip, #91	; 0x5b
 8002920:	ea4f 014c 	movls.w	r1, ip, lsl #1
 8002924:	f67f ae76 	bls.w	8002614 <_malloc_r+0x84>
 8002928:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
 800292c:	f200 808f 	bhi.w	8002a4e <_malloc_r+0x4be>
 8002930:	ea4f 3c15 	mov.w	ip, r5, lsr #12
 8002934:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
 8002938:	ea4f 014c 	mov.w	r1, ip, lsl #1
 800293c:	e66a      	b.n	8002614 <_malloc_r+0x84>
 800293e:	0a4b      	lsrs	r3, r1, #9
 8002940:	2b04      	cmp	r3, #4
 8002942:	d958      	bls.n	80029f6 <_malloc_r+0x466>
 8002944:	2b14      	cmp	r3, #20
 8002946:	bf9c      	itt	ls
 8002948:	f103 025b 	addls.w	r2, r3, #91	; 0x5b
 800294c:	0050      	lslls	r0, r2, #1
 800294e:	d905      	bls.n	800295c <_malloc_r+0x3cc>
 8002950:	2b54      	cmp	r3, #84	; 0x54
 8002952:	f200 80ba 	bhi.w	8002aca <_malloc_r+0x53a>
 8002956:	0b0a      	lsrs	r2, r1, #12
 8002958:	326e      	adds	r2, #110	; 0x6e
 800295a:	0050      	lsls	r0, r2, #1
 800295c:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8002960:	f240 4830 	movw	r8, #1072	; 0x430
 8002964:	6883      	ldr	r3, [r0, #8]
 8002966:	4283      	cmp	r3, r0
 8002968:	f2c2 0800 	movt	r8, #8192	; 0x2000
 800296c:	d07f      	beq.n	8002a6e <_malloc_r+0x4de>
 800296e:	685a      	ldr	r2, [r3, #4]
 8002970:	f022 0203 	bic.w	r2, r2, #3
 8002974:	4291      	cmp	r1, r2
 8002976:	d202      	bcs.n	800297e <_malloc_r+0x3ee>
 8002978:	689b      	ldr	r3, [r3, #8]
 800297a:	4298      	cmp	r0, r3
 800297c:	d1f7      	bne.n	800296e <_malloc_r+0x3de>
 800297e:	68d9      	ldr	r1, [r3, #12]
 8002980:	6872      	ldr	r2, [r6, #4]
 8002982:	60e1      	str	r1, [r4, #12]
 8002984:	60a3      	str	r3, [r4, #8]
 8002986:	608c      	str	r4, [r1, #8]
 8002988:	60dc      	str	r4, [r3, #12]
 800298a:	e68b      	b.n	80026a4 <_malloc_r+0x114>
 800298c:	1961      	adds	r1, r4, r5
 800298e:	f042 0601 	orr.w	r6, r2, #1
 8002992:	f045 0501 	orr.w	r5, r5, #1
 8002996:	6065      	str	r5, [r4, #4]
 8002998:	4638      	mov	r0, r7
 800299a:	6159      	str	r1, [r3, #20]
 800299c:	6119      	str	r1, [r3, #16]
 800299e:	f8c1 e00c 	str.w	lr, [r1, #12]
 80029a2:	f8c1 e008 	str.w	lr, [r1, #8]
 80029a6:	604e      	str	r6, [r1, #4]
 80029a8:	508a      	str	r2, [r1, r2]
 80029aa:	3408      	adds	r4, #8
 80029ac:	f000 f8a4 	bl	8002af8 <__malloc_unlock>
 80029b0:	e624      	b.n	80025fc <_malloc_r+0x6c>
 80029b2:	f109 0901 	add.w	r9, r9, #1
 80029b6:	f019 0f03 	tst.w	r9, #3
 80029ba:	f104 0408 	add.w	r4, r4, #8
 80029be:	f47f ae84 	bne.w	80026ca <_malloc_r+0x13a>
 80029c2:	e028      	b.n	8002a16 <_malloc_r+0x486>
 80029c4:	f104 0308 	add.w	r3, r4, #8
 80029c8:	6964      	ldr	r4, [r4, #20]
 80029ca:	42a3      	cmp	r3, r4
 80029cc:	bf08      	it	eq
 80029ce:	f10c 0c02 	addeq.w	ip, ip, #2
 80029d2:	f43f ae39 	beq.w	8002648 <_malloc_r+0xb8>
 80029d6:	e601      	b.n	80025dc <_malloc_r+0x4c>
 80029d8:	4419      	add	r1, r3
 80029da:	461c      	mov	r4, r3
 80029dc:	6848      	ldr	r0, [r1, #4]
 80029de:	68db      	ldr	r3, [r3, #12]
 80029e0:	f854 2f08 	ldr.w	r2, [r4, #8]!
 80029e4:	f040 0501 	orr.w	r5, r0, #1
 80029e8:	604d      	str	r5, [r1, #4]
 80029ea:	4638      	mov	r0, r7
 80029ec:	60d3      	str	r3, [r2, #12]
 80029ee:	609a      	str	r2, [r3, #8]
 80029f0:	f000 f882 	bl	8002af8 <__malloc_unlock>
 80029f4:	e602      	b.n	80025fc <_malloc_r+0x6c>
 80029f6:	098a      	lsrs	r2, r1, #6
 80029f8:	3238      	adds	r2, #56	; 0x38
 80029fa:	0050      	lsls	r0, r2, #1
 80029fc:	e7ae      	b.n	800295c <_malloc_r+0x3cc>
 80029fe:	42b4      	cmp	r4, r6
 8002a00:	f43f aee6 	beq.w	80027d0 <_malloc_r+0x240>
 8002a04:	68b4      	ldr	r4, [r6, #8]
 8002a06:	6862      	ldr	r2, [r4, #4]
 8002a08:	f022 0203 	bic.w	r2, r2, #3
 8002a0c:	e757      	b.n	80028be <_malloc_r+0x32e>
 8002a0e:	f8d8 8000 	ldr.w	r8, [r8]
 8002a12:	4598      	cmp	r8, r3
 8002a14:	d16b      	bne.n	8002aee <_malloc_r+0x55e>
 8002a16:	f01c 0f03 	tst.w	ip, #3
 8002a1a:	f1a8 0308 	sub.w	r3, r8, #8
 8002a1e:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 8002a22:	d1f4      	bne.n	8002a0e <_malloc_r+0x47e>
 8002a24:	6873      	ldr	r3, [r6, #4]
 8002a26:	ea23 0300 	bic.w	r3, r3, r0
 8002a2a:	6073      	str	r3, [r6, #4]
 8002a2c:	0040      	lsls	r0, r0, #1
 8002a2e:	4298      	cmp	r0, r3
 8002a30:	f63f ae97 	bhi.w	8002762 <_malloc_r+0x1d2>
 8002a34:	2800      	cmp	r0, #0
 8002a36:	f43f ae94 	beq.w	8002762 <_malloc_r+0x1d2>
 8002a3a:	4203      	tst	r3, r0
 8002a3c:	46cc      	mov	ip, r9
 8002a3e:	f47f ae40 	bne.w	80026c2 <_malloc_r+0x132>
 8002a42:	0040      	lsls	r0, r0, #1
 8002a44:	4203      	tst	r3, r0
 8002a46:	f10c 0c04 	add.w	ip, ip, #4
 8002a4a:	d0fa      	beq.n	8002a42 <_malloc_r+0x4b2>
 8002a4c:	e639      	b.n	80026c2 <_malloc_r+0x132>
 8002a4e:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
 8002a52:	d817      	bhi.n	8002a84 <_malloc_r+0x4f4>
 8002a54:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
 8002a58:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
 8002a5c:	ea4f 014c 	mov.w	r1, ip, lsl #1
 8002a60:	e5d8      	b.n	8002614 <_malloc_r+0x84>
 8002a62:	2301      	movs	r3, #1
 8002a64:	f8c8 3004 	str.w	r3, [r8, #4]
 8002a68:	4644      	mov	r4, r8
 8002a6a:	2200      	movs	r2, #0
 8002a6c:	e727      	b.n	80028be <_malloc_r+0x32e>
 8002a6e:	1091      	asrs	r1, r2, #2
 8002a70:	2001      	movs	r0, #1
 8002a72:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8002a76:	fa00 f101 	lsl.w	r1, r0, r1
 8002a7a:	430a      	orrs	r2, r1
 8002a7c:	f8c8 2004 	str.w	r2, [r8, #4]
 8002a80:	4619      	mov	r1, r3
 8002a82:	e77e      	b.n	8002982 <_malloc_r+0x3f2>
 8002a84:	f240 5354 	movw	r3, #1364	; 0x554
 8002a88:	459c      	cmp	ip, r3
 8002a8a:	bf9d      	ittte	ls
 8002a8c:	ea4f 4c95 	movls.w	ip, r5, lsr #18
 8002a90:	f10c 0c7c 	addls.w	ip, ip, #124	; 0x7c
 8002a94:	ea4f 014c 	movls.w	r1, ip, lsl #1
 8002a98:	21fc      	movhi	r1, #252	; 0xfc
 8002a9a:	bf88      	it	hi
 8002a9c:	f04f 0c7e 	movhi.w	ip, #126	; 0x7e
 8002aa0:	e5b8      	b.n	8002614 <_malloc_r+0x84>
 8002aa2:	f3c2 010b 	ubfx	r1, r2, #0, #12
 8002aa6:	2900      	cmp	r1, #0
 8002aa8:	f47f ae9e 	bne.w	80027e8 <_malloc_r+0x258>
 8002aac:	eb0c 0109 	add.w	r1, ip, r9
 8002ab0:	68b2      	ldr	r2, [r6, #8]
 8002ab2:	f041 0101 	orr.w	r1, r1, #1
 8002ab6:	6051      	str	r1, [r2, #4]
 8002ab8:	e6ed      	b.n	8002896 <_malloc_r+0x306>
 8002aba:	f104 0108 	add.w	r1, r4, #8
 8002abe:	4638      	mov	r0, r7
 8002ac0:	f002 fe8e 	bl	80057e0 <_free_r>
 8002ac4:	f8da 3000 	ldr.w	r3, [sl]
 8002ac8:	e6e5      	b.n	8002896 <_malloc_r+0x306>
 8002aca:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8002ace:	d803      	bhi.n	8002ad8 <_malloc_r+0x548>
 8002ad0:	0bca      	lsrs	r2, r1, #15
 8002ad2:	3277      	adds	r2, #119	; 0x77
 8002ad4:	0050      	lsls	r0, r2, #1
 8002ad6:	e741      	b.n	800295c <_malloc_r+0x3cc>
 8002ad8:	f240 5254 	movw	r2, #1364	; 0x554
 8002adc:	4293      	cmp	r3, r2
 8002ade:	bf9d      	ittte	ls
 8002ae0:	0c8a      	lsrls	r2, r1, #18
 8002ae2:	327c      	addls	r2, #124	; 0x7c
 8002ae4:	0050      	lslls	r0, r2, #1
 8002ae6:	20fc      	movhi	r0, #252	; 0xfc
 8002ae8:	bf88      	it	hi
 8002aea:	227e      	movhi	r2, #126	; 0x7e
 8002aec:	e736      	b.n	800295c <_malloc_r+0x3cc>
 8002aee:	6873      	ldr	r3, [r6, #4]
 8002af0:	e79c      	b.n	8002a2c <_malloc_r+0x49c>
 8002af2:	bf00      	nop

08002af4 <__malloc_lock>:
 8002af4:	4770      	bx	lr
 8002af6:	bf00      	nop

08002af8 <__malloc_unlock>:
 8002af8:	4770      	bx	lr
 8002afa:	bf00      	nop

08002afc <printf>:
 8002afc:	b40f      	push	{r0, r1, r2, r3}
 8002afe:	b500      	push	{lr}
 8002b00:	f240 4228 	movw	r2, #1064	; 0x428
 8002b04:	b083      	sub	sp, #12
 8002b06:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8002b0a:	ab04      	add	r3, sp, #16
 8002b0c:	6810      	ldr	r0, [r2, #0]
 8002b0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8002b12:	6881      	ldr	r1, [r0, #8]
 8002b14:	9301      	str	r3, [sp, #4]
 8002b16:	f000 f957 	bl	8002dc8 <_vfprintf_r>
 8002b1a:	b003      	add	sp, #12
 8002b1c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002b20:	b004      	add	sp, #16
 8002b22:	4770      	bx	lr

08002b24 <_puts_r>:
 8002b24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b26:	4604      	mov	r4, r0
 8002b28:	b089      	sub	sp, #36	; 0x24
 8002b2a:	4608      	mov	r0, r1
 8002b2c:	460d      	mov	r5, r1
 8002b2e:	f000 f91b 	bl	8002d68 <strlen>
 8002b32:	68a3      	ldr	r3, [r4, #8]
 8002b34:	9005      	str	r0, [sp, #20]
 8002b36:	8999      	ldrh	r1, [r3, #12]
 8002b38:	9504      	str	r5, [sp, #16]
 8002b3a:	f646 5238 	movw	r2, #27960	; 0x6d38
 8002b3e:	f6c0 0200 	movt	r2, #2048	; 0x800
 8002b42:	9206      	str	r2, [sp, #24]
 8002b44:	048a      	lsls	r2, r1, #18
 8002b46:	bf5e      	ittt	pl
 8002b48:	6e5a      	ldrpl	r2, [r3, #100]	; 0x64
 8002b4a:	f441 5100 	orrpl.w	r1, r1, #8192	; 0x2000
 8002b4e:	f422 5200 	bicpl.w	r2, r2, #8192	; 0x2000
 8002b52:	f100 0001 	add.w	r0, r0, #1
 8002b56:	f04f 0701 	mov.w	r7, #1
 8002b5a:	bf58      	it	pl
 8002b5c:	665a      	strpl	r2, [r3, #100]	; 0x64
 8002b5e:	9003      	str	r0, [sp, #12]
 8002b60:	9707      	str	r7, [sp, #28]
 8002b62:	ae04      	add	r6, sp, #16
 8002b64:	bf58      	it	pl
 8002b66:	8199      	strhpl	r1, [r3, #12]
 8002b68:	2502      	movs	r5, #2
 8002b6a:	4620      	mov	r0, r4
 8002b6c:	4619      	mov	r1, r3
 8002b6e:	aa01      	add	r2, sp, #4
 8002b70:	9601      	str	r6, [sp, #4]
 8002b72:	9502      	str	r5, [sp, #8]
 8002b74:	f002 ff02 	bl	800597c <__sfvwrite_r>
 8002b78:	2800      	cmp	r0, #0
 8002b7a:	bf0c      	ite	eq
 8002b7c:	200a      	moveq	r0, #10
 8002b7e:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8002b82:	b009      	add	sp, #36	; 0x24
 8002b84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b86:	bf00      	nop

08002b88 <puts>:
 8002b88:	f240 4328 	movw	r3, #1064	; 0x428
 8002b8c:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8002b90:	4601      	mov	r1, r0
 8002b92:	6818      	ldr	r0, [r3, #0]
 8002b94:	f7ff bfc6 	b.w	8002b24 <_puts_r>

08002b98 <_sbrk_r>:
 8002b98:	b538      	push	{r3, r4, r5, lr}
 8002b9a:	f640 14ac 	movw	r4, #2476	; 0x9ac
 8002b9e:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8002ba2:	2300      	movs	r3, #0
 8002ba4:	4605      	mov	r5, r0
 8002ba6:	4608      	mov	r0, r1
 8002ba8:	6023      	str	r3, [r4, #0]
 8002baa:	f7fe fd61 	bl	8001670 <_sbrk>
 8002bae:	1c43      	adds	r3, r0, #1
 8002bb0:	d000      	beq.n	8002bb4 <_sbrk_r+0x1c>
 8002bb2:	bd38      	pop	{r3, r4, r5, pc}
 8002bb4:	6823      	ldr	r3, [r4, #0]
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	d0fb      	beq.n	8002bb2 <_sbrk_r+0x1a>
 8002bba:	602b      	str	r3, [r5, #0]
 8002bbc:	bd38      	pop	{r3, r4, r5, pc}
 8002bbe:	bf00      	nop

08002bc0 <setbuf>:
 8002bc0:	2900      	cmp	r1, #0
 8002bc2:	bf0c      	ite	eq
 8002bc4:	2202      	moveq	r2, #2
 8002bc6:	2200      	movne	r2, #0
 8002bc8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002bcc:	f000 b800 	b.w	8002bd0 <setvbuf>

08002bd0 <setvbuf>:
 8002bd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002bd4:	f240 4528 	movw	r5, #1064	; 0x428
 8002bd8:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8002bdc:	4604      	mov	r4, r0
 8002bde:	682e      	ldr	r6, [r5, #0]
 8002be0:	4689      	mov	r9, r1
 8002be2:	4617      	mov	r7, r2
 8002be4:	4698      	mov	r8, r3
 8002be6:	b116      	cbz	r6, 8002bee <setvbuf+0x1e>
 8002be8:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8002bea:	2b00      	cmp	r3, #0
 8002bec:	d058      	beq.n	8002ca0 <setvbuf+0xd0>
 8002bee:	ea4f 75d8 	mov.w	r5, r8, lsr #31
 8002bf2:	2f02      	cmp	r7, #2
 8002bf4:	bf88      	it	hi
 8002bf6:	f045 0501 	orrhi.w	r5, r5, #1
 8002bfa:	2d00      	cmp	r5, #0
 8002bfc:	d133      	bne.n	8002c66 <setvbuf+0x96>
 8002bfe:	4630      	mov	r0, r6
 8002c00:	4621      	mov	r1, r4
 8002c02:	f002 fd85 	bl	8005710 <_fflush_r>
 8002c06:	89a3      	ldrh	r3, [r4, #12]
 8002c08:	6065      	str	r5, [r4, #4]
 8002c0a:	061a      	lsls	r2, r3, #24
 8002c0c:	61a5      	str	r5, [r4, #24]
 8002c0e:	d42e      	bmi.n	8002c6e <setvbuf+0x9e>
 8002c10:	f64f 757c 	movw	r5, #65404	; 0xff7c
 8002c14:	401d      	ands	r5, r3
 8002c16:	2f02      	cmp	r7, #2
 8002c18:	81a5      	strh	r5, [r4, #12]
 8002c1a:	d033      	beq.n	8002c84 <setvbuf+0xb4>
 8002c1c:	f1b9 0f00 	cmp.w	r9, #0
 8002c20:	d042      	beq.n	8002ca8 <setvbuf+0xd8>
 8002c22:	2f01      	cmp	r7, #1
 8002c24:	bf02      	ittt	eq
 8002c26:	f045 0501 	orreq.w	r5, r5, #1
 8002c2a:	f1c8 0300 	rsbeq	r3, r8, #0
 8002c2e:	81a5      	strheq	r5, [r4, #12]
 8002c30:	b2ad      	uxth	r5, r5
 8002c32:	bf08      	it	eq
 8002c34:	61a3      	streq	r3, [r4, #24]
 8002c36:	f005 0008 	and.w	r0, r5, #8
 8002c3a:	f242 4339 	movw	r3, #9273	; 0x2439
 8002c3e:	f6c0 0300 	movt	r3, #2048	; 0x800
 8002c42:	b280      	uxth	r0, r0
 8002c44:	63f3      	str	r3, [r6, #60]	; 0x3c
 8002c46:	f8c4 9000 	str.w	r9, [r4]
 8002c4a:	f8c4 9010 	str.w	r9, [r4, #16]
 8002c4e:	f8c4 8014 	str.w	r8, [r4, #20]
 8002c52:	b150      	cbz	r0, 8002c6a <setvbuf+0x9a>
 8002c54:	f015 0f03 	tst.w	r5, #3
 8002c58:	bf0c      	ite	eq
 8002c5a:	4643      	moveq	r3, r8
 8002c5c:	2300      	movne	r3, #0
 8002c5e:	60a3      	str	r3, [r4, #8]
 8002c60:	2000      	movs	r0, #0
 8002c62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002c66:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002c6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002c6e:	4630      	mov	r0, r6
 8002c70:	6921      	ldr	r1, [r4, #16]
 8002c72:	f002 fdb5 	bl	80057e0 <_free_r>
 8002c76:	89a3      	ldrh	r3, [r4, #12]
 8002c78:	f64f 757c 	movw	r5, #65404	; 0xff7c
 8002c7c:	401d      	ands	r5, r3
 8002c7e:	2f02      	cmp	r7, #2
 8002c80:	81a5      	strh	r5, [r4, #12]
 8002c82:	d1cb      	bne.n	8002c1c <setvbuf+0x4c>
 8002c84:	2000      	movs	r0, #0
 8002c86:	f104 0343 	add.w	r3, r4, #67	; 0x43
 8002c8a:	f045 0502 	orr.w	r5, r5, #2
 8002c8e:	2100      	movs	r1, #0
 8002c90:	2201      	movs	r2, #1
 8002c92:	81a5      	strh	r5, [r4, #12]
 8002c94:	60a1      	str	r1, [r4, #8]
 8002c96:	6023      	str	r3, [r4, #0]
 8002c98:	6123      	str	r3, [r4, #16]
 8002c9a:	6162      	str	r2, [r4, #20]
 8002c9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002ca0:	4630      	mov	r0, r6
 8002ca2:	f7ff fbcf 	bl	8002444 <__sinit>
 8002ca6:	e7a2      	b.n	8002bee <setvbuf+0x1e>
 8002ca8:	f1b8 0f00 	cmp.w	r8, #0
 8002cac:	bf08      	it	eq
 8002cae:	f44f 6880 	moveq.w	r8, #1024	; 0x400
 8002cb2:	4640      	mov	r0, r8
 8002cb4:	f003 f886 	bl	8005dc4 <malloc>
 8002cb8:	4681      	mov	r9, r0
 8002cba:	b128      	cbz	r0, 8002cc8 <setvbuf+0xf8>
 8002cbc:	89a5      	ldrh	r5, [r4, #12]
 8002cbe:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8002cc2:	b2ad      	uxth	r5, r5
 8002cc4:	81a5      	strh	r5, [r4, #12]
 8002cc6:	e7ac      	b.n	8002c22 <setvbuf+0x52>
 8002cc8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8002ccc:	f003 f87a 	bl	8005dc4 <malloc>
 8002cd0:	4681      	mov	r9, r0
 8002cd2:	b918      	cbnz	r0, 8002cdc <setvbuf+0x10c>
 8002cd4:	89a5      	ldrh	r5, [r4, #12]
 8002cd6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002cda:	e7d4      	b.n	8002c86 <setvbuf+0xb6>
 8002cdc:	f44f 6880 	mov.w	r8, #1024	; 0x400
 8002ce0:	e7ec      	b.n	8002cbc <setvbuf+0xec>
 8002ce2:	bf00      	nop

08002ce4 <__sread>:
 8002ce4:	b510      	push	{r4, lr}
 8002ce6:	460c      	mov	r4, r1
 8002ce8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cec:	f003 fc2c 	bl	8006548 <_read_r>
 8002cf0:	2800      	cmp	r0, #0
 8002cf2:	bfab      	itete	ge
 8002cf4:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 8002cf6:	89a3      	ldrhlt	r3, [r4, #12]
 8002cf8:	181b      	addge	r3, r3, r0
 8002cfa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002cfe:	bfac      	ite	ge
 8002d00:	6523      	strge	r3, [r4, #80]	; 0x50
 8002d02:	81a3      	strhlt	r3, [r4, #12]
 8002d04:	bd10      	pop	{r4, pc}
 8002d06:	bf00      	nop

08002d08 <__swrite>:
 8002d08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d0c:	460c      	mov	r4, r1
 8002d0e:	8989      	ldrh	r1, [r1, #12]
 8002d10:	461d      	mov	r5, r3
 8002d12:	05cb      	lsls	r3, r1, #23
 8002d14:	4616      	mov	r6, r2
 8002d16:	4607      	mov	r7, r0
 8002d18:	d506      	bpl.n	8002d28 <__swrite+0x20>
 8002d1a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002d1e:	2200      	movs	r2, #0
 8002d20:	2302      	movs	r3, #2
 8002d22:	f002 ffc7 	bl	8005cb4 <_lseek_r>
 8002d26:	89a1      	ldrh	r1, [r4, #12]
 8002d28:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 8002d2c:	81a1      	strh	r1, [r4, #12]
 8002d2e:	4638      	mov	r0, r7
 8002d30:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002d34:	4632      	mov	r2, r6
 8002d36:	462b      	mov	r3, r5
 8002d38:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002d3c:	f001 bb22 	b.w	8004384 <_write_r>

08002d40 <__sseek>:
 8002d40:	b510      	push	{r4, lr}
 8002d42:	460c      	mov	r4, r1
 8002d44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d48:	f002 ffb4 	bl	8005cb4 <_lseek_r>
 8002d4c:	89a3      	ldrh	r3, [r4, #12]
 8002d4e:	1c42      	adds	r2, r0, #1
 8002d50:	bf0e      	itee	eq
 8002d52:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002d56:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002d5a:	6520      	strne	r0, [r4, #80]	; 0x50
 8002d5c:	81a3      	strh	r3, [r4, #12]
 8002d5e:	bd10      	pop	{r4, pc}

08002d60 <__sclose>:
 8002d60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d64:	f001 bb88 	b.w	8004478 <_close_r>

08002d68 <strlen>:
 8002d68:	f020 0103 	bic.w	r1, r0, #3
 8002d6c:	f010 0003 	ands.w	r0, r0, #3
 8002d70:	f1c0 0000 	rsb	r0, r0, #0
 8002d74:	f851 3b04 	ldr.w	r3, [r1], #4
 8002d78:	f100 0c04 	add.w	ip, r0, #4
 8002d7c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8002d80:	f06f 0200 	mvn.w	r2, #0
 8002d84:	bf1c      	itt	ne
 8002d86:	fa22 f20c 	lsrne.w	r2, r2, ip
 8002d8a:	4313      	orrne	r3, r2
 8002d8c:	f04f 0c01 	mov.w	ip, #1
 8002d90:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
 8002d94:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
 8002d98:	eba3 020c 	sub.w	r2, r3, ip
 8002d9c:	ea22 0203 	bic.w	r2, r2, r3
 8002da0:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
 8002da4:	bf04      	itt	eq
 8002da6:	f851 3b04 	ldreq.w	r3, [r1], #4
 8002daa:	3004      	addeq	r0, #4
 8002dac:	d0f4      	beq.n	8002d98 <strlen+0x30>
 8002dae:	f013 0fff 	tst.w	r3, #255	; 0xff
 8002db2:	bf1f      	itttt	ne
 8002db4:	3001      	addne	r0, #1
 8002db6:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
 8002dba:	3001      	addne	r0, #1
 8002dbc:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
 8002dc0:	bf18      	it	ne
 8002dc2:	3001      	addne	r0, #1
 8002dc4:	4770      	bx	lr
 8002dc6:	bf00      	nop

08002dc8 <_vfprintf_r>:
 8002dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002dcc:	b0c3      	sub	sp, #268	; 0x10c
 8002dce:	461c      	mov	r4, r3
 8002dd0:	4689      	mov	r9, r1
 8002dd2:	9206      	str	r2, [sp, #24]
 8002dd4:	900a      	str	r0, [sp, #40]	; 0x28
 8002dd6:	f002 ff67 	bl	8005ca8 <_localeconv_r>
 8002dda:	6800      	ldr	r0, [r0, #0]
 8002ddc:	9014      	str	r0, [sp, #80]	; 0x50
 8002dde:	f7ff ffc3 	bl	8002d68 <strlen>
 8002de2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8002de4:	9017      	str	r0, [sp, #92]	; 0x5c
 8002de6:	940e      	str	r4, [sp, #56]	; 0x38
 8002de8:	b11d      	cbz	r5, 8002df2 <_vfprintf_r+0x2a>
 8002dea:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	f000 811d 	beq.w	800302c <_vfprintf_r+0x264>
 8002df2:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8002df6:	b29a      	uxth	r2, r3
 8002df8:	0490      	lsls	r0, r2, #18
 8002dfa:	d40a      	bmi.n	8002e12 <_vfprintf_r+0x4a>
 8002dfc:	f8d9 2064 	ldr.w	r2, [r9, #100]	; 0x64
 8002e00:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002e04:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
 8002e08:	f8a9 300c 	strh.w	r3, [r9, #12]
 8002e0c:	b29a      	uxth	r2, r3
 8002e0e:	f8c9 1064 	str.w	r1, [r9, #100]	; 0x64
 8002e12:	0711      	lsls	r1, r2, #28
 8002e14:	f140 80d1 	bpl.w	8002fba <_vfprintf_r+0x1f2>
 8002e18:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8002e1c:	2b00      	cmp	r3, #0
 8002e1e:	f000 80cc 	beq.w	8002fba <_vfprintf_r+0x1f2>
 8002e22:	f002 021a 	and.w	r2, r2, #26
 8002e26:	2a0a      	cmp	r2, #10
 8002e28:	f000 80d3 	beq.w	8002fd2 <_vfprintf_r+0x20a>
 8002e2c:	f10d 05c7 	add.w	r5, sp, #199	; 0xc7
 8002e30:	9503      	str	r5, [sp, #12]
 8002e32:	ad32      	add	r5, sp, #200	; 0xc8
 8002e34:	46ac      	mov	ip, r5
 8002e36:	9525      	str	r5, [sp, #148]	; 0x94
 8002e38:	9d03      	ldr	r5, [sp, #12]
 8002e3a:	f8cd 901c 	str.w	r9, [sp, #28]
 8002e3e:	ac32      	add	r4, sp, #200	; 0xc8
 8002e40:	9404      	str	r4, [sp, #16]
 8002e42:	ebc5 040c 	rsb	r4, r5, ip
 8002e46:	f646 5b3c 	movw	fp, #27964	; 0x6d3c
 8002e4a:	941b      	str	r4, [sp, #108]	; 0x6c
 8002e4c:	f646 558c 	movw	r5, #28044	; 0x6d8c
 8002e50:	f646 5490 	movw	r4, #28048	; 0x6d90
 8002e54:	2300      	movs	r3, #0
 8002e56:	f6c0 0400 	movt	r4, #2048	; 0x800
 8002e5a:	f6c0 0b00 	movt	fp, #2048	; 0x800
 8002e5e:	f6c0 0500 	movt	r5, #2048	; 0x800
 8002e62:	930c      	str	r3, [sp, #48]	; 0x30
 8002e64:	9327      	str	r3, [sp, #156]	; 0x9c
 8002e66:	9326      	str	r3, [sp, #152]	; 0x98
 8002e68:	9316      	str	r3, [sp, #88]	; 0x58
 8002e6a:	9318      	str	r3, [sp, #96]	; 0x60
 8002e6c:	9315      	str	r3, [sp, #84]	; 0x54
 8002e6e:	9319      	str	r3, [sp, #100]	; 0x64
 8002e70:	930f      	str	r3, [sp, #60]	; 0x3c
 8002e72:	9411      	str	r4, [sp, #68]	; 0x44
 8002e74:	9512      	str	r5, [sp, #72]	; 0x48
 8002e76:	4666      	mov	r6, ip
 8002e78:	465f      	mov	r7, fp
 8002e7a:	9c06      	ldr	r4, [sp, #24]
 8002e7c:	7823      	ldrb	r3, [r4, #0]
 8002e7e:	2b25      	cmp	r3, #37	; 0x25
 8002e80:	bf18      	it	ne
 8002e82:	2b00      	cmpne	r3, #0
 8002e84:	f000 80d6 	beq.w	8003034 <_vfprintf_r+0x26c>
 8002e88:	1c62      	adds	r2, r4, #1
 8002e8a:	4614      	mov	r4, r2
 8002e8c:	3201      	adds	r2, #1
 8002e8e:	7823      	ldrb	r3, [r4, #0]
 8002e90:	2b25      	cmp	r3, #37	; 0x25
 8002e92:	bf18      	it	ne
 8002e94:	2b00      	cmpne	r3, #0
 8002e96:	d1f8      	bne.n	8002e8a <_vfprintf_r+0xc2>
 8002e98:	9806      	ldr	r0, [sp, #24]
 8002e9a:	1a25      	subs	r5, r4, r0
 8002e9c:	d00f      	beq.n	8002ebe <_vfprintf_r+0xf6>
 8002e9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002ea0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8002ea2:	6030      	str	r0, [r6, #0]
 8002ea4:	3301      	adds	r3, #1
 8002ea6:	442a      	add	r2, r5
 8002ea8:	2b07      	cmp	r3, #7
 8002eaa:	6075      	str	r5, [r6, #4]
 8002eac:	9227      	str	r2, [sp, #156]	; 0x9c
 8002eae:	9326      	str	r3, [sp, #152]	; 0x98
 8002eb0:	bfd8      	it	le
 8002eb2:	3608      	addle	r6, #8
 8002eb4:	f300 80a0 	bgt.w	8002ff8 <_vfprintf_r+0x230>
 8002eb8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8002eba:	4429      	add	r1, r5
 8002ebc:	910f      	str	r1, [sp, #60]	; 0x3c
 8002ebe:	7823      	ldrb	r3, [r4, #0]
 8002ec0:	2b00      	cmp	r3, #0
 8002ec2:	f001 804a 	beq.w	8003f5a <_vfprintf_r+0x1192>
 8002ec6:	2300      	movs	r3, #0
 8002ec8:	1c65      	adds	r5, r4, #1
 8002eca:	f894 9001 	ldrb.w	r9, [r4, #1]
 8002ece:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 8002ed2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8002ed6:	461a      	mov	r2, r3
 8002ed8:	930d      	str	r3, [sp, #52]	; 0x34
 8002eda:	9305      	str	r3, [sp, #20]
 8002edc:	9506      	str	r5, [sp, #24]
 8002ede:	9408      	str	r4, [sp, #32]
 8002ee0:	462b      	mov	r3, r5
 8002ee2:	3301      	adds	r3, #1
 8002ee4:	f1a9 0120 	sub.w	r1, r9, #32
 8002ee8:	2958      	cmp	r1, #88	; 0x58
 8002eea:	f200 8428 	bhi.w	800373e <_vfprintf_r+0x976>
 8002eee:	e8df f011 	tbh	[pc, r1, lsl #1]
 8002ef2:	03cf      	.short	0x03cf
 8002ef4:	04260426 	.word	0x04260426
 8002ef8:	0426041e 	.word	0x0426041e
 8002efc:	04260426 	.word	0x04260426
 8002f00:	04260426 	.word	0x04260426
 8002f04:	03750426 	.word	0x03750426
 8002f08:	042603cb 	.word	0x042603cb
 8002f0c:	0250005d 	.word	0x0250005d
 8002f10:	028f0426 	.word	0x028f0426
 8002f14:	02960296 	.word	0x02960296
 8002f18:	02960296 	.word	0x02960296
 8002f1c:	02960296 	.word	0x02960296
 8002f20:	02960296 	.word	0x02960296
 8002f24:	04260296 	.word	0x04260296
 8002f28:	04260426 	.word	0x04260426
 8002f2c:	04260426 	.word	0x04260426
 8002f30:	04260426 	.word	0x04260426
 8002f34:	04260426 	.word	0x04260426
 8002f38:	02710426 	.word	0x02710426
 8002f3c:	042602ae 	.word	0x042602ae
 8002f40:	042602ae 	.word	0x042602ae
 8002f44:	04260426 	.word	0x04260426
 8002f48:	02a70426 	.word	0x02a70426
 8002f4c:	04260426 	.word	0x04260426
 8002f50:	042602ed 	.word	0x042602ed
 8002f54:	04260426 	.word	0x04260426
 8002f58:	04260426 	.word	0x04260426
 8002f5c:	04260308 	.word	0x04260308
 8002f60:	03200426 	.word	0x03200426
 8002f64:	04260426 	.word	0x04260426
 8002f68:	04260426 	.word	0x04260426
 8002f6c:	04260426 	.word	0x04260426
 8002f70:	04260426 	.word	0x04260426
 8002f74:	04260426 	.word	0x04260426
 8002f78:	035d0347 	.word	0x035d0347
 8002f7c:	02ae02ae 	.word	0x02ae02ae
 8002f80:	03ee02ae 	.word	0x03ee02ae
 8002f84:	0426035d 	.word	0x0426035d
 8002f88:	03f50426 	.word	0x03f50426
 8002f8c:	040a0426 	.word	0x040a0426
 8002f90:	03d6023f 	.word	0x03d6023f
 8002f94:	04260382 	.word	0x04260382
 8002f98:	04260389 	.word	0x04260389
 8002f9c:	042600a3 	.word	0x042600a3
 8002fa0:	03b10426 	.word	0x03b10426
 8002fa4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8002fa6:	910e      	str	r1, [sp, #56]	; 0x38
 8002fa8:	4264      	negs	r4, r4
 8002faa:	940d      	str	r4, [sp, #52]	; 0x34
 8002fac:	9d05      	ldr	r5, [sp, #20]
 8002fae:	f045 0504 	orr.w	r5, r5, #4
 8002fb2:	9505      	str	r5, [sp, #20]
 8002fb4:	f893 9000 	ldrb.w	r9, [r3]
 8002fb8:	e793      	b.n	8002ee2 <_vfprintf_r+0x11a>
 8002fba:	980a      	ldr	r0, [sp, #40]	; 0x28
 8002fbc:	4649      	mov	r1, r9
 8002fbe:	f001 f9f7 	bl	80043b0 <__swsetup_r>
 8002fc2:	b9a0      	cbnz	r0, 8002fee <_vfprintf_r+0x226>
 8002fc4:	f8b9 200c 	ldrh.w	r2, [r9, #12]
 8002fc8:	f002 021a 	and.w	r2, r2, #26
 8002fcc:	2a0a      	cmp	r2, #10
 8002fce:	f47f af2d 	bne.w	8002e2c <_vfprintf_r+0x64>
 8002fd2:	f9b9 300e 	ldrsh.w	r3, [r9, #14]
 8002fd6:	2b00      	cmp	r3, #0
 8002fd8:	f6ff af28 	blt.w	8002e2c <_vfprintf_r+0x64>
 8002fdc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8002fde:	9a06      	ldr	r2, [sp, #24]
 8002fe0:	4649      	mov	r1, r9
 8002fe2:	4623      	mov	r3, r4
 8002fe4:	f001 f992 	bl	800430c <__sbprintf>
 8002fe8:	b043      	add	sp, #268	; 0x10c
 8002fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002fee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002ff2:	b043      	add	sp, #268	; 0x10c
 8002ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ff8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8002ffa:	9907      	ldr	r1, [sp, #28]
 8002ffc:	aa25      	add	r2, sp, #148	; 0x94
 8002ffe:	f003 fd11 	bl	8006a24 <__sprint_r>
 8003002:	b948      	cbnz	r0, 8003018 <_vfprintf_r+0x250>
 8003004:	ae32      	add	r6, sp, #200	; 0xc8
 8003006:	e757      	b.n	8002eb8 <_vfprintf_r+0xf0>
 8003008:	980a      	ldr	r0, [sp, #40]	; 0x28
 800300a:	9907      	ldr	r1, [sp, #28]
 800300c:	aa25      	add	r2, sp, #148	; 0x94
 800300e:	f003 fd09 	bl	8006a24 <__sprint_r>
 8003012:	2800      	cmp	r0, #0
 8003014:	f000 818c 	beq.w	8003330 <_vfprintf_r+0x568>
 8003018:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800301c:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8003020:	065b      	lsls	r3, r3, #25
 8003022:	d4e4      	bmi.n	8002fee <_vfprintf_r+0x226>
 8003024:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003026:	b043      	add	sp, #268	; 0x10c
 8003028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800302c:	4628      	mov	r0, r5
 800302e:	f7ff fa09 	bl	8002444 <__sinit>
 8003032:	e6de      	b.n	8002df2 <_vfprintf_r+0x2a>
 8003034:	9c06      	ldr	r4, [sp, #24]
 8003036:	e742      	b.n	8002ebe <_vfprintf_r+0xf6>
 8003038:	9c05      	ldr	r4, [sp, #20]
 800303a:	9306      	str	r3, [sp, #24]
 800303c:	06a3      	lsls	r3, r4, #26
 800303e:	f140 8269 	bpl.w	8003514 <_vfprintf_r+0x74c>
 8003042:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8003044:	1deb      	adds	r3, r5, #7
 8003046:	f023 0307 	bic.w	r3, r3, #7
 800304a:	f103 0408 	add.w	r4, r3, #8
 800304e:	940e      	str	r4, [sp, #56]	; 0x38
 8003050:	e9d3 4500 	ldrd	r4, r5, [r3]
 8003054:	2301      	movs	r3, #1
 8003056:	f04f 0a00 	mov.w	sl, #0
 800305a:	f88d a077 	strb.w	sl, [sp, #119]	; 0x77
 800305e:	9a08      	ldr	r2, [sp, #32]
 8003060:	2a00      	cmp	r2, #0
 8003062:	bfa2      	ittt	ge
 8003064:	9805      	ldrge	r0, [sp, #20]
 8003066:	f020 0080 	bicge.w	r0, r0, #128	; 0x80
 800306a:	9005      	strge	r0, [sp, #20]
 800306c:	ea54 0105 	orrs.w	r1, r4, r5
 8003070:	9808      	ldr	r0, [sp, #32]
 8003072:	bf0c      	ite	eq
 8003074:	2200      	moveq	r2, #0
 8003076:	2201      	movne	r2, #1
 8003078:	2800      	cmp	r0, #0
 800307a:	bf18      	it	ne
 800307c:	f042 0201 	orrne.w	r2, r2, #1
 8003080:	2a00      	cmp	r2, #0
 8003082:	f000 83e2 	beq.w	800384a <_vfprintf_r+0xa82>
 8003086:	2b01      	cmp	r3, #1
 8003088:	f000 8505 	beq.w	8003a96 <_vfprintf_r+0xcce>
 800308c:	2b02      	cmp	r3, #2
 800308e:	f10d 02c7 	add.w	r2, sp, #199	; 0xc7
 8003092:	f040 8151 	bne.w	8003338 <_vfprintf_r+0x570>
 8003096:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003098:	f004 010f 	and.w	r1, r4, #15
 800309c:	0923      	lsrs	r3, r4, #4
 800309e:	4690      	mov	r8, r2
 80030a0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 80030a4:	5c42      	ldrb	r2, [r0, r1]
 80030a6:	0929      	lsrs	r1, r5, #4
 80030a8:	461c      	mov	r4, r3
 80030aa:	460d      	mov	r5, r1
 80030ac:	ea54 0105 	orrs.w	r1, r4, r5
 80030b0:	f888 2000 	strb.w	r2, [r8]
 80030b4:	f108 32ff 	add.w	r2, r8, #4294967295	; 0xffffffff
 80030b8:	d1ee      	bne.n	8003098 <_vfprintf_r+0x2d0>
 80030ba:	9b04      	ldr	r3, [sp, #16]
 80030bc:	ebc8 0303 	rsb	r3, r8, r3
 80030c0:	930b      	str	r3, [sp, #44]	; 0x2c
 80030c2:	9c08      	ldr	r4, [sp, #32]
 80030c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80030c6:	42a5      	cmp	r5, r4
 80030c8:	bfb8      	it	lt
 80030ca:	4625      	movlt	r5, r4
 80030cc:	2400      	movs	r4, #0
 80030ce:	9509      	str	r5, [sp, #36]	; 0x24
 80030d0:	9413      	str	r4, [sp, #76]	; 0x4c
 80030d2:	f1ba 0f00 	cmp.w	sl, #0
 80030d6:	d002      	beq.n	80030de <_vfprintf_r+0x316>
 80030d8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80030da:	3401      	adds	r4, #1
 80030dc:	9409      	str	r4, [sp, #36]	; 0x24
 80030de:	9d05      	ldr	r5, [sp, #20]
 80030e0:	f015 0b02 	ands.w	fp, r5, #2
 80030e4:	bf18      	it	ne
 80030e6:	9c09      	ldrne	r4, [sp, #36]	; 0x24
 80030e8:	9d05      	ldr	r5, [sp, #20]
 80030ea:	bf1c      	itt	ne
 80030ec:	3402      	addne	r4, #2
 80030ee:	9409      	strne	r4, [sp, #36]	; 0x24
 80030f0:	f015 0584 	ands.w	r5, r5, #132	; 0x84
 80030f4:	9510      	str	r5, [sp, #64]	; 0x40
 80030f6:	f040 8337 	bne.w	8003768 <_vfprintf_r+0x9a0>
 80030fa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80030fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80030fe:	1a2c      	subs	r4, r5, r0
 8003100:	2c00      	cmp	r4, #0
 8003102:	f340 8331 	ble.w	8003768 <_vfprintf_r+0x9a0>
 8003106:	2c10      	cmp	r4, #16
 8003108:	f646 5a90 	movw	sl, #28048	; 0x6d90
 800310c:	f340 87a7 	ble.w	800405e <_vfprintf_r+0x1296>
 8003110:	4630      	mov	r0, r6
 8003112:	971a      	str	r7, [sp, #104]	; 0x68
 8003114:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8003116:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8003118:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800311a:	4627      	mov	r7, r4
 800311c:	f6c0 0a00 	movt	sl, #2048	; 0x800
 8003120:	2510      	movs	r5, #16
 8003122:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003124:	e002      	b.n	800312c <_vfprintf_r+0x364>
 8003126:	3f10      	subs	r7, #16
 8003128:	2f10      	cmp	r7, #16
 800312a:	dd17      	ble.n	800315c <_vfprintf_r+0x394>
 800312c:	3201      	adds	r2, #1
 800312e:	3110      	adds	r1, #16
 8003130:	2a07      	cmp	r2, #7
 8003132:	6006      	str	r6, [r0, #0]
 8003134:	6045      	str	r5, [r0, #4]
 8003136:	9127      	str	r1, [sp, #156]	; 0x9c
 8003138:	9226      	str	r2, [sp, #152]	; 0x98
 800313a:	bfd8      	it	le
 800313c:	3008      	addle	r0, #8
 800313e:	ddf2      	ble.n	8003126 <_vfprintf_r+0x35e>
 8003140:	4620      	mov	r0, r4
 8003142:	9907      	ldr	r1, [sp, #28]
 8003144:	aa25      	add	r2, sp, #148	; 0x94
 8003146:	f003 fc6d 	bl	8006a24 <__sprint_r>
 800314a:	2800      	cmp	r0, #0
 800314c:	f47f af64 	bne.w	8003018 <_vfprintf_r+0x250>
 8003150:	3f10      	subs	r7, #16
 8003152:	2f10      	cmp	r7, #16
 8003154:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8003156:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8003158:	a832      	add	r0, sp, #200	; 0xc8
 800315a:	dce7      	bgt.n	800312c <_vfprintf_r+0x364>
 800315c:	463c      	mov	r4, r7
 800315e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8003160:	4606      	mov	r6, r0
 8003162:	3201      	adds	r2, #1
 8003164:	4421      	add	r1, r4
 8003166:	2a07      	cmp	r2, #7
 8003168:	9127      	str	r1, [sp, #156]	; 0x9c
 800316a:	9226      	str	r2, [sp, #152]	; 0x98
 800316c:	f8c6 a000 	str.w	sl, [r6]
 8003170:	6074      	str	r4, [r6, #4]
 8003172:	f300 849e 	bgt.w	8003ab2 <_vfprintf_r+0xcea>
 8003176:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 800317a:	3608      	adds	r6, #8
 800317c:	460c      	mov	r4, r1
 800317e:	f1ba 0f00 	cmp.w	sl, #0
 8003182:	d00e      	beq.n	80031a2 <_vfprintf_r+0x3da>
 8003184:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003186:	3301      	adds	r3, #1
 8003188:	3401      	adds	r4, #1
 800318a:	f10d 0177 	add.w	r1, sp, #119	; 0x77
 800318e:	2201      	movs	r2, #1
 8003190:	2b07      	cmp	r3, #7
 8003192:	e886 0006 	stmia.w	r6, {r1, r2}
 8003196:	9427      	str	r4, [sp, #156]	; 0x9c
 8003198:	9326      	str	r3, [sp, #152]	; 0x98
 800319a:	bfd8      	it	le
 800319c:	3608      	addle	r6, #8
 800319e:	f300 82e5 	bgt.w	800376c <_vfprintf_r+0x9a4>
 80031a2:	f1bb 0f00 	cmp.w	fp, #0
 80031a6:	d00d      	beq.n	80031c4 <_vfprintf_r+0x3fc>
 80031a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80031aa:	3301      	adds	r3, #1
 80031ac:	3402      	adds	r4, #2
 80031ae:	a91e      	add	r1, sp, #120	; 0x78
 80031b0:	2202      	movs	r2, #2
 80031b2:	2b07      	cmp	r3, #7
 80031b4:	e886 0006 	stmia.w	r6, {r1, r2}
 80031b8:	9427      	str	r4, [sp, #156]	; 0x9c
 80031ba:	9326      	str	r3, [sp, #152]	; 0x98
 80031bc:	bfd8      	it	le
 80031be:	3608      	addle	r6, #8
 80031c0:	f300 8406 	bgt.w	80039d0 <_vfprintf_r+0xc08>
 80031c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80031c6:	2b80      	cmp	r3, #128	; 0x80
 80031c8:	f000 8352 	beq.w	8003870 <_vfprintf_r+0xaa8>
 80031cc:	9d08      	ldr	r5, [sp, #32]
 80031ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80031d0:	ebc3 0a05 	rsb	sl, r3, r5
 80031d4:	f1ba 0f00 	cmp.w	sl, #0
 80031d8:	dd44      	ble.n	8003264 <_vfprintf_r+0x49c>
 80031da:	f1ba 0f10 	cmp.w	sl, #16
 80031de:	f646 553c 	movw	r5, #27964	; 0x6d3c
 80031e2:	bfdc      	itt	le
 80031e4:	f6c0 0500 	movtle	r5, #2048	; 0x800
 80031e8:	9b26      	ldrle	r3, [sp, #152]	; 0x98
 80031ea:	dd27      	ble.n	800323c <_vfprintf_r+0x474>
 80031ec:	f6c0 0500 	movt	r5, #2048	; 0x800
 80031f0:	4622      	mov	r2, r4
 80031f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80031f4:	4654      	mov	r4, sl
 80031f6:	f04f 0b10 	mov.w	fp, #16
 80031fa:	46aa      	mov	sl, r5
 80031fc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80031fe:	e002      	b.n	8003206 <_vfprintf_r+0x43e>
 8003200:	3c10      	subs	r4, #16
 8003202:	2c10      	cmp	r4, #16
 8003204:	dd17      	ble.n	8003236 <_vfprintf_r+0x46e>
 8003206:	3301      	adds	r3, #1
 8003208:	3210      	adds	r2, #16
 800320a:	2b07      	cmp	r3, #7
 800320c:	e886 0880 	stmia.w	r6, {r7, fp}
 8003210:	9227      	str	r2, [sp, #156]	; 0x9c
 8003212:	9326      	str	r3, [sp, #152]	; 0x98
 8003214:	bfd8      	it	le
 8003216:	3608      	addle	r6, #8
 8003218:	ddf2      	ble.n	8003200 <_vfprintf_r+0x438>
 800321a:	4628      	mov	r0, r5
 800321c:	9907      	ldr	r1, [sp, #28]
 800321e:	aa25      	add	r2, sp, #148	; 0x94
 8003220:	f003 fc00 	bl	8006a24 <__sprint_r>
 8003224:	2800      	cmp	r0, #0
 8003226:	f47f aef7 	bne.w	8003018 <_vfprintf_r+0x250>
 800322a:	3c10      	subs	r4, #16
 800322c:	2c10      	cmp	r4, #16
 800322e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8003230:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003232:	ae32      	add	r6, sp, #200	; 0xc8
 8003234:	dce7      	bgt.n	8003206 <_vfprintf_r+0x43e>
 8003236:	4655      	mov	r5, sl
 8003238:	46a2      	mov	sl, r4
 800323a:	4614      	mov	r4, r2
 800323c:	3301      	adds	r3, #1
 800323e:	4454      	add	r4, sl
 8003240:	2b07      	cmp	r3, #7
 8003242:	e886 0420 	stmia.w	r6, {r5, sl}
 8003246:	9427      	str	r4, [sp, #156]	; 0x9c
 8003248:	9326      	str	r3, [sp, #152]	; 0x98
 800324a:	bfd8      	it	le
 800324c:	3608      	addle	r6, #8
 800324e:	dd09      	ble.n	8003264 <_vfprintf_r+0x49c>
 8003250:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003252:	9907      	ldr	r1, [sp, #28]
 8003254:	aa25      	add	r2, sp, #148	; 0x94
 8003256:	f003 fbe5 	bl	8006a24 <__sprint_r>
 800325a:	2800      	cmp	r0, #0
 800325c:	f47f aedc 	bne.w	8003018 <_vfprintf_r+0x250>
 8003260:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8003262:	ae32      	add	r6, sp, #200	; 0xc8
 8003264:	9d05      	ldr	r5, [sp, #20]
 8003266:	05ea      	lsls	r2, r5, #23
 8003268:	f100 828b 	bmi.w	8003782 <_vfprintf_r+0x9ba>
 800326c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800326e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8003270:	f8c6 8000 	str.w	r8, [r6]
 8003274:	3301      	adds	r3, #1
 8003276:	442c      	add	r4, r5
 8003278:	2b07      	cmp	r3, #7
 800327a:	9427      	str	r4, [sp, #156]	; 0x9c
 800327c:	6075      	str	r5, [r6, #4]
 800327e:	9326      	str	r3, [sp, #152]	; 0x98
 8003280:	f300 8396 	bgt.w	80039b0 <_vfprintf_r+0xbe8>
 8003284:	3608      	adds	r6, #8
 8003286:	9d05      	ldr	r5, [sp, #20]
 8003288:	076a      	lsls	r2, r5, #29
 800328a:	d546      	bpl.n	800331a <_vfprintf_r+0x552>
 800328c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800328e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003290:	1a45      	subs	r5, r0, r1
 8003292:	2d00      	cmp	r5, #0
 8003294:	dd41      	ble.n	800331a <_vfprintf_r+0x552>
 8003296:	2d10      	cmp	r5, #16
 8003298:	f646 5a90 	movw	sl, #28048	; 0x6d90
 800329c:	bfdc      	itt	le
 800329e:	f6c0 0a00 	movtle	sl, #2048	; 0x800
 80032a2:	9b26      	ldrle	r3, [sp, #152]	; 0x98
 80032a4:	dd27      	ble.n	80032f6 <_vfprintf_r+0x52e>
 80032a6:	9705      	str	r7, [sp, #20]
 80032a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80032aa:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80032ae:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80032b2:	9f11      	ldr	r7, [sp, #68]	; 0x44
 80032b4:	f6c0 0a00 	movt	sl, #2048	; 0x800
 80032b8:	f04f 0810 	mov.w	r8, #16
 80032bc:	e002      	b.n	80032c4 <_vfprintf_r+0x4fc>
 80032be:	3d10      	subs	r5, #16
 80032c0:	2d10      	cmp	r5, #16
 80032c2:	dd17      	ble.n	80032f4 <_vfprintf_r+0x52c>
 80032c4:	3301      	adds	r3, #1
 80032c6:	3410      	adds	r4, #16
 80032c8:	2b07      	cmp	r3, #7
 80032ca:	e886 0180 	stmia.w	r6, {r7, r8}
 80032ce:	9427      	str	r4, [sp, #156]	; 0x9c
 80032d0:	9326      	str	r3, [sp, #152]	; 0x98
 80032d2:	bfd8      	it	le
 80032d4:	3608      	addle	r6, #8
 80032d6:	ddf2      	ble.n	80032be <_vfprintf_r+0x4f6>
 80032d8:	4648      	mov	r0, r9
 80032da:	4659      	mov	r1, fp
 80032dc:	aa25      	add	r2, sp, #148	; 0x94
 80032de:	f003 fba1 	bl	8006a24 <__sprint_r>
 80032e2:	2800      	cmp	r0, #0
 80032e4:	f040 8443 	bne.w	8003b6e <_vfprintf_r+0xda6>
 80032e8:	3d10      	subs	r5, #16
 80032ea:	2d10      	cmp	r5, #16
 80032ec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 80032ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80032f0:	ae32      	add	r6, sp, #200	; 0xc8
 80032f2:	dce7      	bgt.n	80032c4 <_vfprintf_r+0x4fc>
 80032f4:	9f05      	ldr	r7, [sp, #20]
 80032f6:	3301      	adds	r3, #1
 80032f8:	442c      	add	r4, r5
 80032fa:	2b07      	cmp	r3, #7
 80032fc:	9427      	str	r4, [sp, #156]	; 0x9c
 80032fe:	9326      	str	r3, [sp, #152]	; 0x98
 8003300:	f8c6 a000 	str.w	sl, [r6]
 8003304:	6075      	str	r5, [r6, #4]
 8003306:	dd08      	ble.n	800331a <_vfprintf_r+0x552>
 8003308:	980a      	ldr	r0, [sp, #40]	; 0x28
 800330a:	9907      	ldr	r1, [sp, #28]
 800330c:	aa25      	add	r2, sp, #148	; 0x94
 800330e:	f003 fb89 	bl	8006a24 <__sprint_r>
 8003312:	2800      	cmp	r0, #0
 8003314:	f47f ae80 	bne.w	8003018 <_vfprintf_r+0x250>
 8003318:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 800331a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800331c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800331e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003320:	4281      	cmp	r1, r0
 8003322:	bfac      	ite	ge
 8003324:	186d      	addge	r5, r5, r1
 8003326:	182d      	addlt	r5, r5, r0
 8003328:	950f      	str	r5, [sp, #60]	; 0x3c
 800332a:	2c00      	cmp	r4, #0
 800332c:	f47f ae6c 	bne.w	8003008 <_vfprintf_r+0x240>
 8003330:	2300      	movs	r3, #0
 8003332:	9326      	str	r3, [sp, #152]	; 0x98
 8003334:	ae32      	add	r6, sp, #200	; 0xc8
 8003336:	e5a0      	b.n	8002e7a <_vfprintf_r+0xb2>
 8003338:	08e3      	lsrs	r3, r4, #3
 800333a:	4690      	mov	r8, r2
 800333c:	ea43 7345 	orr.w	r3, r3, r5, lsl #29
 8003340:	08ea      	lsrs	r2, r5, #3
 8003342:	f004 0107 	and.w	r1, r4, #7
 8003346:	4615      	mov	r5, r2
 8003348:	461c      	mov	r4, r3
 800334a:	f101 0330 	add.w	r3, r1, #48	; 0x30
 800334e:	ea54 0105 	orrs.w	r1, r4, r5
 8003352:	f888 3000 	strb.w	r3, [r8]
 8003356:	f108 32ff 	add.w	r2, r8, #4294967295	; 0xffffffff
 800335a:	d1ed      	bne.n	8003338 <_vfprintf_r+0x570>
 800335c:	9c05      	ldr	r4, [sp, #20]
 800335e:	07e0      	lsls	r0, r4, #31
 8003360:	4641      	mov	r1, r8
 8003362:	f100 84e8 	bmi.w	8003d36 <_vfprintf_r+0xf6e>
 8003366:	9d04      	ldr	r5, [sp, #16]
 8003368:	ebc8 0505 	rsb	r5, r8, r5
 800336c:	950b      	str	r5, [sp, #44]	; 0x2c
 800336e:	e6a8      	b.n	80030c2 <_vfprintf_r+0x2fa>
 8003370:	9d05      	ldr	r5, [sp, #20]
 8003372:	9306      	str	r3, [sp, #24]
 8003374:	f015 0320 	ands.w	r3, r5, #32
 8003378:	f000 80b2 	beq.w	80034e0 <_vfprintf_r+0x718>
 800337c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800337e:	1de3      	adds	r3, r4, #7
 8003380:	f023 0307 	bic.w	r3, r3, #7
 8003384:	f103 0508 	add.w	r5, r3, #8
 8003388:	950e      	str	r5, [sp, #56]	; 0x38
 800338a:	e9d3 4500 	ldrd	r4, r5, [r3]
 800338e:	2300      	movs	r3, #0
 8003390:	e661      	b.n	8003056 <_vfprintf_r+0x28e>
 8003392:	f893 9000 	ldrb.w	r9, [r3]
 8003396:	f1b9 0f2a 	cmp.w	r9, #42	; 0x2a
 800339a:	f103 0001 	add.w	r0, r3, #1
 800339e:	f000 8784 	beq.w	80042aa <_vfprintf_r+0x14e2>
 80033a2:	f1a9 0130 	sub.w	r1, r9, #48	; 0x30
 80033a6:	2909      	cmp	r1, #9
 80033a8:	bf82      	ittt	hi
 80033aa:	2400      	movhi	r4, #0
 80033ac:	4603      	movhi	r3, r0
 80033ae:	9408      	strhi	r4, [sp, #32]
 80033b0:	f63f ad98 	bhi.w	8002ee4 <_vfprintf_r+0x11c>
 80033b4:	2300      	movs	r3, #0
 80033b6:	f810 9b01 	ldrb.w	r9, [r0], #1
 80033ba:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80033be:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80033c2:	f1a9 0130 	sub.w	r1, r9, #48	; 0x30
 80033c6:	2909      	cmp	r1, #9
 80033c8:	d9f5      	bls.n	80033b6 <_vfprintf_r+0x5ee>
 80033ca:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80033ce:	9308      	str	r3, [sp, #32]
 80033d0:	4603      	mov	r3, r0
 80033d2:	e587      	b.n	8002ee4 <_vfprintf_r+0x11c>
 80033d4:	9d05      	ldr	r5, [sp, #20]
 80033d6:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 80033da:	f045 0510 	orr.w	r5, r5, #16
 80033de:	9505      	str	r5, [sp, #20]
 80033e0:	9c05      	ldr	r4, [sp, #20]
 80033e2:	9306      	str	r3, [sp, #24]
 80033e4:	06a2      	lsls	r2, r4, #26
 80033e6:	f140 80e8 	bpl.w	80035ba <_vfprintf_r+0x7f2>
 80033ea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80033ec:	1de9      	adds	r1, r5, #7
 80033ee:	f021 0107 	bic.w	r1, r1, #7
 80033f2:	e9d1 2300 	ldrd	r2, r3, [r1]
 80033f6:	3108      	adds	r1, #8
 80033f8:	910e      	str	r1, [sp, #56]	; 0x38
 80033fa:	4614      	mov	r4, r2
 80033fc:	461d      	mov	r5, r3
 80033fe:	2a00      	cmp	r2, #0
 8003400:	f173 0100 	sbcs.w	r1, r3, #0
 8003404:	f2c0 84a3 	blt.w	8003d4e <_vfprintf_r+0xf86>
 8003408:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 800340c:	2301      	movs	r3, #1
 800340e:	e626      	b.n	800305e <_vfprintf_r+0x296>
 8003410:	9c05      	ldr	r4, [sp, #20]
 8003412:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8003416:	9405      	str	r4, [sp, #20]
 8003418:	f893 9000 	ldrb.w	r9, [r3]
 800341c:	e561      	b.n	8002ee2 <_vfprintf_r+0x11a>
 800341e:	2500      	movs	r5, #0
 8003420:	f1a9 0130 	sub.w	r1, r9, #48	; 0x30
 8003424:	950d      	str	r5, [sp, #52]	; 0x34
 8003426:	4628      	mov	r0, r5
 8003428:	f813 9b01 	ldrb.w	r9, [r3], #1
 800342c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8003430:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 8003434:	f1a9 0130 	sub.w	r1, r9, #48	; 0x30
 8003438:	2909      	cmp	r1, #9
 800343a:	d9f5      	bls.n	8003428 <_vfprintf_r+0x660>
 800343c:	900d      	str	r0, [sp, #52]	; 0x34
 800343e:	e551      	b.n	8002ee4 <_vfprintf_r+0x11c>
 8003440:	9c05      	ldr	r4, [sp, #20]
 8003442:	f044 0408 	orr.w	r4, r4, #8
 8003446:	9405      	str	r4, [sp, #20]
 8003448:	f893 9000 	ldrb.w	r9, [r3]
 800344c:	e549      	b.n	8002ee2 <_vfprintf_r+0x11a>
 800344e:	9c05      	ldr	r4, [sp, #20]
 8003450:	9306      	str	r3, [sp, #24]
 8003452:	0724      	lsls	r4, r4, #28
 8003454:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 8003458:	f140 850f 	bpl.w	8003e7a <_vfprintf_r+0x10b2>
 800345c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800345e:	1deb      	adds	r3, r5, #7
 8003460:	f023 0307 	bic.w	r3, r3, #7
 8003464:	f103 0408 	add.w	r4, r3, #8
 8003468:	681d      	ldr	r5, [r3, #0]
 800346a:	940e      	str	r4, [sp, #56]	; 0x38
 800346c:	9516      	str	r5, [sp, #88]	; 0x58
 800346e:	685b      	ldr	r3, [r3, #4]
 8003470:	9318      	str	r3, [sp, #96]	; 0x60
 8003472:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8003474:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8003476:	ec43 2b10 	vmov	d0, r2, r3
 800347a:	f003 fa6b 	bl	8006954 <__fpclassifyd>
 800347e:	2801      	cmp	r0, #1
 8003480:	f040 846f 	bne.w	8003d62 <_vfprintf_r+0xf9a>
 8003484:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003486:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003488:	2200      	movs	r2, #0
 800348a:	2300      	movs	r3, #0
 800348c:	f7fd fba4 	bl	8000bd8 <__aeabi_dcmplt>
 8003490:	2800      	cmp	r0, #0
 8003492:	f040 8618 	bne.w	80040c6 <_vfprintf_r+0x12fe>
 8003496:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 800349a:	2503      	movs	r5, #3
 800349c:	9509      	str	r5, [sp, #36]	; 0x24
 800349e:	9d05      	ldr	r5, [sp, #20]
 80034a0:	2400      	movs	r4, #0
 80034a2:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 80034a6:	f646 5850 	movw	r8, #27984	; 0x6d50
 80034aa:	f646 534c 	movw	r3, #27980	; 0x6d4c
 80034ae:	f6c0 0800 	movt	r8, #2048	; 0x800
 80034b2:	f6c0 0300 	movt	r3, #2048	; 0x800
 80034b6:	9408      	str	r4, [sp, #32]
 80034b8:	9505      	str	r5, [sp, #20]
 80034ba:	2403      	movs	r4, #3
 80034bc:	2500      	movs	r5, #0
 80034be:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80034c2:	bfd8      	it	le
 80034c4:	4698      	movle	r8, r3
 80034c6:	940b      	str	r4, [sp, #44]	; 0x2c
 80034c8:	9513      	str	r5, [sp, #76]	; 0x4c
 80034ca:	e602      	b.n	80030d2 <_vfprintf_r+0x30a>
 80034cc:	9c05      	ldr	r4, [sp, #20]
 80034ce:	9306      	str	r3, [sp, #24]
 80034d0:	f044 0410 	orr.w	r4, r4, #16
 80034d4:	9405      	str	r4, [sp, #20]
 80034d6:	9d05      	ldr	r5, [sp, #20]
 80034d8:	f015 0320 	ands.w	r3, r5, #32
 80034dc:	f47f af4e 	bne.w	800337c <_vfprintf_r+0x5b4>
 80034e0:	9c05      	ldr	r4, [sp, #20]
 80034e2:	f014 0210 	ands.w	r2, r4, #16
 80034e6:	f040 832a 	bne.w	8003b3e <_vfprintf_r+0xd76>
 80034ea:	9c05      	ldr	r4, [sp, #20]
 80034ec:	f014 0340 	ands.w	r3, r4, #64	; 0x40
 80034f0:	f000 8325 	beq.w	8003b3e <_vfprintf_r+0xd76>
 80034f4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80034f6:	8804      	ldrh	r4, [r0, #0]
 80034f8:	3004      	adds	r0, #4
 80034fa:	4613      	mov	r3, r2
 80034fc:	2500      	movs	r5, #0
 80034fe:	900e      	str	r0, [sp, #56]	; 0x38
 8003500:	e5a9      	b.n	8003056 <_vfprintf_r+0x28e>
 8003502:	9d05      	ldr	r5, [sp, #20]
 8003504:	9306      	str	r3, [sp, #24]
 8003506:	f045 0510 	orr.w	r5, r5, #16
 800350a:	9505      	str	r5, [sp, #20]
 800350c:	9c05      	ldr	r4, [sp, #20]
 800350e:	06a3      	lsls	r3, r4, #26
 8003510:	f53f ad97 	bmi.w	8003042 <_vfprintf_r+0x27a>
 8003514:	9d05      	ldr	r5, [sp, #20]
 8003516:	06ed      	lsls	r5, r5, #27
 8003518:	f100 8318 	bmi.w	8003b4c <_vfprintf_r+0xd84>
 800351c:	9c05      	ldr	r4, [sp, #20]
 800351e:	0664      	lsls	r4, r4, #25
 8003520:	f140 8314 	bpl.w	8003b4c <_vfprintf_r+0xd84>
 8003524:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003526:	8804      	ldrh	r4, [r0, #0]
 8003528:	3004      	adds	r0, #4
 800352a:	2500      	movs	r5, #0
 800352c:	2301      	movs	r3, #1
 800352e:	900e      	str	r0, [sp, #56]	; 0x38
 8003530:	e591      	b.n	8003056 <_vfprintf_r+0x28e>
 8003532:	9d05      	ldr	r5, [sp, #20]
 8003534:	9306      	str	r3, [sp, #24]
 8003536:	f646 545c 	movw	r4, #27996	; 0x6d5c
 800353a:	f6c0 0400 	movt	r4, #2048	; 0x800
 800353e:	06a8      	lsls	r0, r5, #26
 8003540:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 8003544:	9415      	str	r4, [sp, #84]	; 0x54
 8003546:	f140 8091 	bpl.w	800366c <_vfprintf_r+0x8a4>
 800354a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800354c:	1de3      	adds	r3, r4, #7
 800354e:	f023 0307 	bic.w	r3, r3, #7
 8003552:	f103 0508 	add.w	r5, r3, #8
 8003556:	950e      	str	r5, [sp, #56]	; 0x38
 8003558:	e9d3 4500 	ldrd	r4, r5, [r3]
 800355c:	9805      	ldr	r0, [sp, #20]
 800355e:	07c3      	lsls	r3, r0, #31
 8003560:	f140 8242 	bpl.w	80039e8 <_vfprintf_r+0xc20>
 8003564:	ea54 0105 	orrs.w	r1, r4, r5
 8003568:	f000 823e 	beq.w	80039e8 <_vfprintf_r+0xc20>
 800356c:	2330      	movs	r3, #48	; 0x30
 800356e:	f040 0002 	orr.w	r0, r0, #2
 8003572:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
 8003576:	f88d 9079 	strb.w	r9, [sp, #121]	; 0x79
 800357a:	9005      	str	r0, [sp, #20]
 800357c:	2302      	movs	r3, #2
 800357e:	e56a      	b.n	8003056 <_vfprintf_r+0x28e>
 8003580:	9306      	str	r3, [sp, #24]
 8003582:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003584:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	f04f 0a00 	mov.w	sl, #0
 800358c:	2501      	movs	r5, #1
 800358e:	3404      	adds	r4, #4
 8003590:	f88d a077 	strb.w	sl, [sp, #119]	; 0x77
 8003594:	9509      	str	r5, [sp, #36]	; 0x24
 8003596:	f88d 30a0 	strb.w	r3, [sp, #160]	; 0xa0
 800359a:	940e      	str	r4, [sp, #56]	; 0x38
 800359c:	f8cd a020 	str.w	sl, [sp, #32]
 80035a0:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
 80035a4:	950b      	str	r5, [sp, #44]	; 0x2c
 80035a6:	f10d 08a0 	add.w	r8, sp, #160	; 0xa0
 80035aa:	e598      	b.n	80030de <_vfprintf_r+0x316>
 80035ac:	9c05      	ldr	r4, [sp, #20]
 80035ae:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 80035b2:	06a2      	lsls	r2, r4, #26
 80035b4:	9306      	str	r3, [sp, #24]
 80035b6:	f53f af18 	bmi.w	80033ea <_vfprintf_r+0x622>
 80035ba:	9c05      	ldr	r4, [sp, #20]
 80035bc:	06e3      	lsls	r3, r4, #27
 80035be:	f100 82cd 	bmi.w	8003b5c <_vfprintf_r+0xd94>
 80035c2:	9c05      	ldr	r4, [sp, #20]
 80035c4:	0665      	lsls	r5, r4, #25
 80035c6:	f140 82c9 	bpl.w	8003b5c <_vfprintf_r+0xd94>
 80035ca:	980e      	ldr	r0, [sp, #56]	; 0x38
 80035cc:	f9b0 4000 	ldrsh.w	r4, [r0]
 80035d0:	3004      	adds	r0, #4
 80035d2:	17e5      	asrs	r5, r4, #31
 80035d4:	4622      	mov	r2, r4
 80035d6:	462b      	mov	r3, r5
 80035d8:	900e      	str	r0, [sp, #56]	; 0x38
 80035da:	e710      	b.n	80033fe <_vfprintf_r+0x636>
 80035dc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80035de:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80035e0:	6824      	ldr	r4, [r4, #0]
 80035e2:	2c00      	cmp	r4, #0
 80035e4:	940d      	str	r4, [sp, #52]	; 0x34
 80035e6:	f105 0104 	add.w	r1, r5, #4
 80035ea:	f6ff acdb 	blt.w	8002fa4 <_vfprintf_r+0x1dc>
 80035ee:	910e      	str	r1, [sp, #56]	; 0x38
 80035f0:	f893 9000 	ldrb.w	r9, [r3]
 80035f4:	e475      	b.n	8002ee2 <_vfprintf_r+0x11a>
 80035f6:	9c05      	ldr	r4, [sp, #20]
 80035f8:	f044 0420 	orr.w	r4, r4, #32
 80035fc:	9405      	str	r4, [sp, #20]
 80035fe:	f893 9000 	ldrb.w	r9, [r3]
 8003602:	e46e      	b.n	8002ee2 <_vfprintf_r+0x11a>
 8003604:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003606:	9306      	str	r3, [sp, #24]
 8003608:	f8d4 8000 	ldr.w	r8, [r4]
 800360c:	2500      	movs	r5, #0
 800360e:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
 8003612:	3404      	adds	r4, #4
 8003614:	f1b8 0f00 	cmp.w	r8, #0
 8003618:	f000 8540 	beq.w	800409c <_vfprintf_r+0x12d4>
 800361c:	9808      	ldr	r0, [sp, #32]
 800361e:	2800      	cmp	r0, #0
 8003620:	4640      	mov	r0, r8
 8003622:	f2c0 850e 	blt.w	8004042 <_vfprintf_r+0x127a>
 8003626:	4629      	mov	r1, r5
 8003628:	9a08      	ldr	r2, [sp, #32]
 800362a:	f002 fbd3 	bl	8005dd4 <memchr>
 800362e:	2800      	cmp	r0, #0
 8003630:	f000 858b 	beq.w	800414a <_vfprintf_r+0x1382>
 8003634:	9908      	ldr	r1, [sp, #32]
 8003636:	940e      	str	r4, [sp, #56]	; 0x38
 8003638:	ebc8 0000 	rsb	r0, r8, r0
 800363c:	4288      	cmp	r0, r1
 800363e:	bfb8      	it	lt
 8003640:	4601      	movlt	r1, r0
 8003642:	ea21 74e1 	bic.w	r4, r1, r1, asr #31
 8003646:	910b      	str	r1, [sp, #44]	; 0x2c
 8003648:	9508      	str	r5, [sp, #32]
 800364a:	9409      	str	r4, [sp, #36]	; 0x24
 800364c:	9513      	str	r5, [sp, #76]	; 0x4c
 800364e:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 8003652:	e53e      	b.n	80030d2 <_vfprintf_r+0x30a>
 8003654:	9d05      	ldr	r5, [sp, #20]
 8003656:	9306      	str	r3, [sp, #24]
 8003658:	f646 5470 	movw	r4, #28016	; 0x6d70
 800365c:	f6c0 0400 	movt	r4, #2048	; 0x800
 8003660:	06a8      	lsls	r0, r5, #26
 8003662:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 8003666:	9415      	str	r4, [sp, #84]	; 0x54
 8003668:	f53f af6f 	bmi.w	800354a <_vfprintf_r+0x782>
 800366c:	9c05      	ldr	r4, [sp, #20]
 800366e:	06e1      	lsls	r1, r4, #27
 8003670:	f100 825f 	bmi.w	8003b32 <_vfprintf_r+0xd6a>
 8003674:	9c05      	ldr	r4, [sp, #20]
 8003676:	0662      	lsls	r2, r4, #25
 8003678:	f140 825b 	bpl.w	8003b32 <_vfprintf_r+0xd6a>
 800367c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800367e:	8804      	ldrh	r4, [r0, #0]
 8003680:	3004      	adds	r0, #4
 8003682:	2500      	movs	r5, #0
 8003684:	900e      	str	r0, [sp, #56]	; 0x38
 8003686:	e769      	b.n	800355c <_vfprintf_r+0x794>
 8003688:	f893 9000 	ldrb.w	r9, [r3]
 800368c:	222b      	movs	r2, #43	; 0x2b
 800368e:	e428      	b.n	8002ee2 <_vfprintf_r+0x11a>
 8003690:	f893 9000 	ldrb.w	r9, [r3]
 8003694:	2a00      	cmp	r2, #0
 8003696:	f47f ac24 	bne.w	8002ee2 <_vfprintf_r+0x11a>
 800369a:	2220      	movs	r2, #32
 800369c:	e421      	b.n	8002ee2 <_vfprintf_r+0x11a>
 800369e:	9d05      	ldr	r5, [sp, #20]
 80036a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80036a2:	9306      	str	r3, [sp, #24]
 80036a4:	f045 0502 	orr.w	r5, r5, #2
 80036a8:	f646 5070 	movw	r0, #28016	; 0x6d70
 80036ac:	2330      	movs	r3, #48	; 0x30
 80036ae:	f04f 0978 	mov.w	r9, #120	; 0x78
 80036b2:	9505      	str	r5, [sp, #20]
 80036b4:	f6c0 0000 	movt	r0, #2048	; 0x800
 80036b8:	1d15      	adds	r5, r2, #4
 80036ba:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
 80036be:	950e      	str	r5, [sp, #56]	; 0x38
 80036c0:	6814      	ldr	r4, [r2, #0]
 80036c2:	f88d 9079 	strb.w	r9, [sp, #121]	; 0x79
 80036c6:	2500      	movs	r5, #0
 80036c8:	9015      	str	r0, [sp, #84]	; 0x54
 80036ca:	2302      	movs	r3, #2
 80036cc:	e4c3      	b.n	8003056 <_vfprintf_r+0x28e>
 80036ce:	9d05      	ldr	r5, [sp, #20]
 80036d0:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 80036d4:	9505      	str	r5, [sp, #20]
 80036d6:	f893 9000 	ldrb.w	r9, [r3]
 80036da:	e402      	b.n	8002ee2 <_vfprintf_r+0x11a>
 80036dc:	f893 9000 	ldrb.w	r9, [r3]
 80036e0:	f1b9 0f6c 	cmp.w	r9, #108	; 0x6c
 80036e4:	bf0c      	ite	eq
 80036e6:	9c05      	ldreq	r4, [sp, #20]
 80036e8:	9d05      	ldrne	r5, [sp, #20]
 80036ea:	4619      	mov	r1, r3
 80036ec:	bf09      	itett	eq
 80036ee:	f044 0420 	orreq.w	r4, r4, #32
 80036f2:	f045 0510 	orrne.w	r5, r5, #16
 80036f6:	3301      	addeq	r3, #1
 80036f8:	9405      	streq	r4, [sp, #20]
 80036fa:	bf0c      	ite	eq
 80036fc:	f891 9001 	ldrbeq.w	r9, [r1, #1]
 8003700:	9505      	strne	r5, [sp, #20]
 8003702:	f7ff bbee 	b.w	8002ee2 <_vfprintf_r+0x11a>
 8003706:	9d05      	ldr	r5, [sp, #20]
 8003708:	9306      	str	r3, [sp, #24]
 800370a:	06a9      	lsls	r1, r5, #26
 800370c:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 8003710:	f140 83c0 	bpl.w	8003e94 <_vfprintf_r+0x10cc>
 8003714:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003716:	6821      	ldr	r1, [r4, #0]
 8003718:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800371a:	17e5      	asrs	r5, r4, #31
 800371c:	462b      	mov	r3, r5
 800371e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8003720:	4622      	mov	r2, r4
 8003722:	3504      	adds	r5, #4
 8003724:	950e      	str	r5, [sp, #56]	; 0x38
 8003726:	e9c1 2300 	strd	r2, r3, [r1]
 800372a:	f7ff bba6 	b.w	8002e7a <_vfprintf_r+0xb2>
 800372e:	9d05      	ldr	r5, [sp, #20]
 8003730:	f045 0501 	orr.w	r5, r5, #1
 8003734:	9505      	str	r5, [sp, #20]
 8003736:	f893 9000 	ldrb.w	r9, [r3]
 800373a:	f7ff bbd2 	b.w	8002ee2 <_vfprintf_r+0x11a>
 800373e:	9306      	str	r3, [sp, #24]
 8003740:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 8003744:	f1b9 0f00 	cmp.w	r9, #0
 8003748:	f000 8407 	beq.w	8003f5a <_vfprintf_r+0x1192>
 800374c:	2300      	movs	r3, #0
 800374e:	2501      	movs	r5, #1
 8003750:	469a      	mov	sl, r3
 8003752:	9509      	str	r5, [sp, #36]	; 0x24
 8003754:	f88d 90a0 	strb.w	r9, [sp, #160]	; 0xa0
 8003758:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 800375c:	9308      	str	r3, [sp, #32]
 800375e:	9313      	str	r3, [sp, #76]	; 0x4c
 8003760:	950b      	str	r5, [sp, #44]	; 0x2c
 8003762:	f10d 08a0 	add.w	r8, sp, #160	; 0xa0
 8003766:	e4ba      	b.n	80030de <_vfprintf_r+0x316>
 8003768:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 800376a:	e508      	b.n	800317e <_vfprintf_r+0x3b6>
 800376c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800376e:	9907      	ldr	r1, [sp, #28]
 8003770:	aa25      	add	r2, sp, #148	; 0x94
 8003772:	f003 f957 	bl	8006a24 <__sprint_r>
 8003776:	2800      	cmp	r0, #0
 8003778:	f47f ac4e 	bne.w	8003018 <_vfprintf_r+0x250>
 800377c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 800377e:	ae32      	add	r6, sp, #200	; 0xc8
 8003780:	e50f      	b.n	80031a2 <_vfprintf_r+0x3da>
 8003782:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8003786:	f340 80c2 	ble.w	800390e <_vfprintf_r+0xb46>
 800378a:	9816      	ldr	r0, [sp, #88]	; 0x58
 800378c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800378e:	2200      	movs	r2, #0
 8003790:	2300      	movs	r3, #0
 8003792:	f7fd fa17 	bl	8000bc4 <__aeabi_dcmpeq>
 8003796:	2800      	cmp	r0, #0
 8003798:	f000 8129 	beq.w	80039ee <_vfprintf_r+0xc26>
 800379c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800379e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80037a0:	3301      	adds	r3, #1
 80037a2:	3401      	adds	r4, #1
 80037a4:	2201      	movs	r2, #1
 80037a6:	2b07      	cmp	r3, #7
 80037a8:	6035      	str	r5, [r6, #0]
 80037aa:	6072      	str	r2, [r6, #4]
 80037ac:	9427      	str	r4, [sp, #156]	; 0x9c
 80037ae:	9326      	str	r3, [sp, #152]	; 0x98
 80037b0:	bfd8      	it	le
 80037b2:	3608      	addle	r6, #8
 80037b4:	f300 8379 	bgt.w	8003eaa <_vfprintf_r+0x10e2>
 80037b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80037ba:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80037bc:	42ab      	cmp	r3, r5
 80037be:	db03      	blt.n	80037c8 <_vfprintf_r+0xa00>
 80037c0:	9d05      	ldr	r5, [sp, #20]
 80037c2:	07eb      	lsls	r3, r5, #31
 80037c4:	f57f ad5f 	bpl.w	8003286 <_vfprintf_r+0x4be>
 80037c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80037ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80037cc:	6035      	str	r5, [r6, #0]
 80037ce:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80037d0:	3301      	adds	r3, #1
 80037d2:	442c      	add	r4, r5
 80037d4:	2b07      	cmp	r3, #7
 80037d6:	6075      	str	r5, [r6, #4]
 80037d8:	9427      	str	r4, [sp, #156]	; 0x9c
 80037da:	9326      	str	r3, [sp, #152]	; 0x98
 80037dc:	bfd8      	it	le
 80037de:	3608      	addle	r6, #8
 80037e0:	f300 83fe 	bgt.w	8003fe0 <_vfprintf_r+0x1218>
 80037e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80037e6:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80037ea:	f1b8 0f00 	cmp.w	r8, #0
 80037ee:	f77f ad4a 	ble.w	8003286 <_vfprintf_r+0x4be>
 80037f2:	f1b8 0f10 	cmp.w	r8, #16
 80037f6:	f646 553c 	movw	r5, #27964	; 0x6d3c
 80037fa:	f340 853a 	ble.w	8004272 <_vfprintf_r+0x14aa>
 80037fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003800:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8003804:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8003808:	f6c0 0500 	movt	r5, #2048	; 0x800
 800380c:	f04f 0910 	mov.w	r9, #16
 8003810:	e005      	b.n	800381e <_vfprintf_r+0xa56>
 8003812:	f1a8 0810 	sub.w	r8, r8, #16
 8003816:	f1b8 0f10 	cmp.w	r8, #16
 800381a:	f340 80c0 	ble.w	800399e <_vfprintf_r+0xbd6>
 800381e:	3301      	adds	r3, #1
 8003820:	3410      	adds	r4, #16
 8003822:	2b07      	cmp	r3, #7
 8003824:	e886 0280 	stmia.w	r6, {r7, r9}
 8003828:	9427      	str	r4, [sp, #156]	; 0x9c
 800382a:	9326      	str	r3, [sp, #152]	; 0x98
 800382c:	bfd8      	it	le
 800382e:	3608      	addle	r6, #8
 8003830:	ddef      	ble.n	8003812 <_vfprintf_r+0xa4a>
 8003832:	4650      	mov	r0, sl
 8003834:	4659      	mov	r1, fp
 8003836:	aa25      	add	r2, sp, #148	; 0x94
 8003838:	f003 f8f4 	bl	8006a24 <__sprint_r>
 800383c:	2800      	cmp	r0, #0
 800383e:	f040 8196 	bne.w	8003b6e <_vfprintf_r+0xda6>
 8003842:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8003844:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003846:	ae32      	add	r6, sp, #200	; 0xc8
 8003848:	e7e3      	b.n	8003812 <_vfprintf_r+0xa4a>
 800384a:	2b00      	cmp	r3, #0
 800384c:	f040 80bb 	bne.w	80039c6 <_vfprintf_r+0xbfe>
 8003850:	9c05      	ldr	r4, [sp, #20]
 8003852:	07e1      	lsls	r1, r4, #31
 8003854:	bf5c      	itt	pl
 8003856:	930b      	strpl	r3, [sp, #44]	; 0x2c
 8003858:	f10d 08c8 	addpl.w	r8, sp, #200	; 0xc8
 800385c:	f57f ac31 	bpl.w	80030c2 <_vfprintf_r+0x2fa>
 8003860:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8003862:	2330      	movs	r3, #48	; 0x30
 8003864:	f88d 30c7 	strb.w	r3, [sp, #199]	; 0xc7
 8003868:	950b      	str	r5, [sp, #44]	; 0x2c
 800386a:	f10d 08c7 	add.w	r8, sp, #199	; 0xc7
 800386e:	e428      	b.n	80030c2 <_vfprintf_r+0x2fa>
 8003870:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8003872:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003874:	ebc0 0a05 	rsb	sl, r0, r5
 8003878:	f1ba 0f00 	cmp.w	sl, #0
 800387c:	f77f aca6 	ble.w	80031cc <_vfprintf_r+0x404>
 8003880:	f1ba 0f10 	cmp.w	sl, #16
 8003884:	f646 553c 	movw	r5, #27964	; 0x6d3c
 8003888:	bfdc      	itt	le
 800388a:	f6c0 0500 	movtle	r5, #2048	; 0x800
 800388e:	9b26      	ldrle	r3, [sp, #152]	; 0x98
 8003890:	dd27      	ble.n	80038e2 <_vfprintf_r+0xb1a>
 8003892:	f6c0 0500 	movt	r5, #2048	; 0x800
 8003896:	4622      	mov	r2, r4
 8003898:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800389a:	4654      	mov	r4, sl
 800389c:	f04f 0b10 	mov.w	fp, #16
 80038a0:	46aa      	mov	sl, r5
 80038a2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80038a4:	e002      	b.n	80038ac <_vfprintf_r+0xae4>
 80038a6:	3c10      	subs	r4, #16
 80038a8:	2c10      	cmp	r4, #16
 80038aa:	dd17      	ble.n	80038dc <_vfprintf_r+0xb14>
 80038ac:	3301      	adds	r3, #1
 80038ae:	3210      	adds	r2, #16
 80038b0:	2b07      	cmp	r3, #7
 80038b2:	e886 0880 	stmia.w	r6, {r7, fp}
 80038b6:	9227      	str	r2, [sp, #156]	; 0x9c
 80038b8:	9326      	str	r3, [sp, #152]	; 0x98
 80038ba:	bfd8      	it	le
 80038bc:	3608      	addle	r6, #8
 80038be:	ddf2      	ble.n	80038a6 <_vfprintf_r+0xade>
 80038c0:	4628      	mov	r0, r5
 80038c2:	9907      	ldr	r1, [sp, #28]
 80038c4:	aa25      	add	r2, sp, #148	; 0x94
 80038c6:	f003 f8ad 	bl	8006a24 <__sprint_r>
 80038ca:	2800      	cmp	r0, #0
 80038cc:	f47f aba4 	bne.w	8003018 <_vfprintf_r+0x250>
 80038d0:	3c10      	subs	r4, #16
 80038d2:	2c10      	cmp	r4, #16
 80038d4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80038d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80038d8:	ae32      	add	r6, sp, #200	; 0xc8
 80038da:	dce7      	bgt.n	80038ac <_vfprintf_r+0xae4>
 80038dc:	4655      	mov	r5, sl
 80038de:	46a2      	mov	sl, r4
 80038e0:	4614      	mov	r4, r2
 80038e2:	3301      	adds	r3, #1
 80038e4:	4454      	add	r4, sl
 80038e6:	2b07      	cmp	r3, #7
 80038e8:	e886 0420 	stmia.w	r6, {r5, sl}
 80038ec:	9427      	str	r4, [sp, #156]	; 0x9c
 80038ee:	9326      	str	r3, [sp, #152]	; 0x98
 80038f0:	bfd8      	it	le
 80038f2:	3608      	addle	r6, #8
 80038f4:	f77f ac6a 	ble.w	80031cc <_vfprintf_r+0x404>
 80038f8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80038fa:	9907      	ldr	r1, [sp, #28]
 80038fc:	aa25      	add	r2, sp, #148	; 0x94
 80038fe:	f003 f891 	bl	8006a24 <__sprint_r>
 8003902:	2800      	cmp	r0, #0
 8003904:	f47f ab88 	bne.w	8003018 <_vfprintf_r+0x250>
 8003908:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 800390a:	ae32      	add	r6, sp, #200	; 0xc8
 800390c:	e45e      	b.n	80031cc <_vfprintf_r+0x404>
 800390e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003910:	2d01      	cmp	r5, #1
 8003912:	f340 81b1 	ble.w	8003c78 <_vfprintf_r+0xeb0>
 8003916:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003918:	f8c6 8000 	str.w	r8, [r6]
 800391c:	3301      	adds	r3, #1
 800391e:	1c62      	adds	r2, r4, #1
 8003920:	2101      	movs	r1, #1
 8003922:	2b07      	cmp	r3, #7
 8003924:	6071      	str	r1, [r6, #4]
 8003926:	9227      	str	r2, [sp, #156]	; 0x9c
 8003928:	9326      	str	r3, [sp, #152]	; 0x98
 800392a:	bfd8      	it	le
 800392c:	3608      	addle	r6, #8
 800392e:	f300 81ce 	bgt.w	8003cce <_vfprintf_r+0xf06>
 8003932:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8003934:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8003936:	4422      	add	r2, r4
 8003938:	6035      	str	r5, [r6, #0]
 800393a:	1c5c      	adds	r4, r3, #1
 800393c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800393e:	9227      	str	r2, [sp, #156]	; 0x9c
 8003940:	2c07      	cmp	r4, #7
 8003942:	9426      	str	r4, [sp, #152]	; 0x98
 8003944:	6075      	str	r5, [r6, #4]
 8003946:	f300 81ce 	bgt.w	8003ce6 <_vfprintf_r+0xf1e>
 800394a:	3608      	adds	r6, #8
 800394c:	4691      	mov	r9, r2
 800394e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003950:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003952:	2200      	movs	r2, #0
 8003954:	2300      	movs	r3, #0
 8003956:	f7fd f935 	bl	8000bc4 <__aeabi_dcmpeq>
 800395a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800395c:	2800      	cmp	r0, #0
 800395e:	f040 80b6 	bne.w	8003ace <_vfprintf_r+0xd06>
 8003962:	1e6b      	subs	r3, r5, #1
 8003964:	3401      	adds	r4, #1
 8003966:	f108 0101 	add.w	r1, r8, #1
 800396a:	eb03 0209 	add.w	r2, r3, r9
 800396e:	2c07      	cmp	r4, #7
 8003970:	6031      	str	r1, [r6, #0]
 8003972:	9426      	str	r4, [sp, #152]	; 0x98
 8003974:	9227      	str	r2, [sp, #156]	; 0x9c
 8003976:	6073      	str	r3, [r6, #4]
 8003978:	f300 819c 	bgt.w	8003cb4 <_vfprintf_r+0xeec>
 800397c:	3608      	adds	r6, #8
 800397e:	4691      	mov	r9, r2
 8003980:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003982:	1c63      	adds	r3, r4, #1
 8003984:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8003986:	9326      	str	r3, [sp, #152]	; 0x98
 8003988:	444a      	add	r2, r9
 800398a:	a921      	add	r1, sp, #132	; 0x84
 800398c:	2b07      	cmp	r3, #7
 800398e:	9227      	str	r2, [sp, #156]	; 0x9c
 8003990:	e886 0012 	stmia.w	r6, {r1, r4}
 8003994:	dc0c      	bgt.n	80039b0 <_vfprintf_r+0xbe8>
 8003996:	3608      	adds	r6, #8
 8003998:	4614      	mov	r4, r2
 800399a:	e474      	b.n	8003286 <_vfprintf_r+0x4be>
 800399c:	4614      	mov	r4, r2
 800399e:	3301      	adds	r3, #1
 80039a0:	4444      	add	r4, r8
 80039a2:	2b07      	cmp	r3, #7
 80039a4:	9427      	str	r4, [sp, #156]	; 0x9c
 80039a6:	9326      	str	r3, [sp, #152]	; 0x98
 80039a8:	e886 0120 	stmia.w	r6, {r5, r8}
 80039ac:	f77f ac6a 	ble.w	8003284 <_vfprintf_r+0x4bc>
 80039b0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80039b2:	9907      	ldr	r1, [sp, #28]
 80039b4:	aa25      	add	r2, sp, #148	; 0x94
 80039b6:	f003 f835 	bl	8006a24 <__sprint_r>
 80039ba:	2800      	cmp	r0, #0
 80039bc:	f47f ab2c 	bne.w	8003018 <_vfprintf_r+0x250>
 80039c0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 80039c2:	ae32      	add	r6, sp, #200	; 0xc8
 80039c4:	e45f      	b.n	8003286 <_vfprintf_r+0x4be>
 80039c6:	920b      	str	r2, [sp, #44]	; 0x2c
 80039c8:	f10d 08c8 	add.w	r8, sp, #200	; 0xc8
 80039cc:	f7ff bb79 	b.w	80030c2 <_vfprintf_r+0x2fa>
 80039d0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80039d2:	9907      	ldr	r1, [sp, #28]
 80039d4:	aa25      	add	r2, sp, #148	; 0x94
 80039d6:	f003 f825 	bl	8006a24 <__sprint_r>
 80039da:	2800      	cmp	r0, #0
 80039dc:	f47f ab1c 	bne.w	8003018 <_vfprintf_r+0x250>
 80039e0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 80039e2:	ae32      	add	r6, sp, #200	; 0xc8
 80039e4:	f7ff bbee 	b.w	80031c4 <_vfprintf_r+0x3fc>
 80039e8:	2302      	movs	r3, #2
 80039ea:	f7ff bb34 	b.w	8003056 <_vfprintf_r+0x28e>
 80039ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	f340 8265 	ble.w	8003ec0 <_vfprintf_r+0x10f8>
 80039f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80039f8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80039fa:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
 80039fe:	4285      	cmp	r5, r0
 8003a00:	bfa8      	it	ge
 8003a02:	4605      	movge	r5, r0
 8003a04:	2d00      	cmp	r5, #0
 8003a06:	44c3      	add	fp, r8
 8003a08:	dd0c      	ble.n	8003a24 <_vfprintf_r+0xc5c>
 8003a0a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003a0c:	f8c6 8000 	str.w	r8, [r6]
 8003a10:	3301      	adds	r3, #1
 8003a12:	442c      	add	r4, r5
 8003a14:	2b07      	cmp	r3, #7
 8003a16:	6075      	str	r5, [r6, #4]
 8003a18:	9427      	str	r4, [sp, #156]	; 0x9c
 8003a1a:	9326      	str	r3, [sp, #152]	; 0x98
 8003a1c:	bfd8      	it	le
 8003a1e:	3608      	addle	r6, #8
 8003a20:	f300 8323 	bgt.w	800406a <_vfprintf_r+0x12a2>
 8003a24:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003a26:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8003a2a:	ebc5 0901 	rsb	r9, r5, r1
 8003a2e:	f1b9 0f00 	cmp.w	r9, #0
 8003a32:	f340 80b5 	ble.w	8003ba0 <_vfprintf_r+0xdd8>
 8003a36:	f1b9 0f10 	cmp.w	r9, #16
 8003a3a:	f646 553c 	movw	r5, #27964	; 0x6d3c
 8003a3e:	bfdc      	itt	le
 8003a40:	f6c0 0500 	movtle	r5, #2048	; 0x800
 8003a44:	9b26      	ldrle	r3, [sp, #152]	; 0x98
 8003a46:	f340 8097 	ble.w	8003b78 <_vfprintf_r+0xdb0>
 8003a4a:	f6c0 0500 	movt	r5, #2048	; 0x800
 8003a4e:	4622      	mov	r2, r4
 8003a50:	9508      	str	r5, [sp, #32]
 8003a52:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003a54:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003a56:	9d07      	ldr	r5, [sp, #28]
 8003a58:	f04f 0a10 	mov.w	sl, #16
 8003a5c:	e005      	b.n	8003a6a <_vfprintf_r+0xca2>
 8003a5e:	f1a9 0910 	sub.w	r9, r9, #16
 8003a62:	f1b9 0f10 	cmp.w	r9, #16
 8003a66:	f340 8085 	ble.w	8003b74 <_vfprintf_r+0xdac>
 8003a6a:	3301      	adds	r3, #1
 8003a6c:	3210      	adds	r2, #16
 8003a6e:	2b07      	cmp	r3, #7
 8003a70:	e886 0480 	stmia.w	r6, {r7, sl}
 8003a74:	9227      	str	r2, [sp, #156]	; 0x9c
 8003a76:	9326      	str	r3, [sp, #152]	; 0x98
 8003a78:	bfd8      	it	le
 8003a7a:	3608      	addle	r6, #8
 8003a7c:	ddef      	ble.n	8003a5e <_vfprintf_r+0xc96>
 8003a7e:	4620      	mov	r0, r4
 8003a80:	4629      	mov	r1, r5
 8003a82:	aa25      	add	r2, sp, #148	; 0x94
 8003a84:	f002 ffce 	bl	8006a24 <__sprint_r>
 8003a88:	2800      	cmp	r0, #0
 8003a8a:	f040 8273 	bne.w	8003f74 <_vfprintf_r+0x11ac>
 8003a8e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8003a90:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003a92:	ae32      	add	r6, sp, #200	; 0xc8
 8003a94:	e7e3      	b.n	8003a5e <_vfprintf_r+0xc96>
 8003a96:	2d00      	cmp	r5, #0
 8003a98:	bf08      	it	eq
 8003a9a:	2c0a      	cmpeq	r4, #10
 8003a9c:	f080 8130 	bcs.w	8003d00 <_vfprintf_r+0xf38>
 8003aa0:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8003aa2:	3430      	adds	r4, #48	; 0x30
 8003aa4:	f88d 40c7 	strb.w	r4, [sp, #199]	; 0xc7
 8003aa8:	950b      	str	r5, [sp, #44]	; 0x2c
 8003aaa:	f10d 08c7 	add.w	r8, sp, #199	; 0xc7
 8003aae:	f7ff bb08 	b.w	80030c2 <_vfprintf_r+0x2fa>
 8003ab2:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ab4:	9907      	ldr	r1, [sp, #28]
 8003ab6:	aa25      	add	r2, sp, #148	; 0x94
 8003ab8:	f002 ffb4 	bl	8006a24 <__sprint_r>
 8003abc:	2800      	cmp	r0, #0
 8003abe:	f47f aaab 	bne.w	8003018 <_vfprintf_r+0x250>
 8003ac2:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 8003ac6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8003ac8:	ae32      	add	r6, sp, #200	; 0xc8
 8003aca:	f7ff bb58 	b.w	800317e <_vfprintf_r+0x3b6>
 8003ace:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8003ad2:	f1b8 0f00 	cmp.w	r8, #0
 8003ad6:	f77f af53 	ble.w	8003980 <_vfprintf_r+0xbb8>
 8003ada:	f646 553c 	movw	r5, #27964	; 0x6d3c
 8003ade:	f1b8 0f10 	cmp.w	r8, #16
 8003ae2:	f6c0 0500 	movt	r5, #2048	; 0x800
 8003ae6:	f340 80dc 	ble.w	8003ca2 <_vfprintf_r+0xeda>
 8003aea:	464b      	mov	r3, r9
 8003aec:	f04f 0a10 	mov.w	sl, #16
 8003af0:	46a9      	mov	r9, r5
 8003af2:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8003af6:	9d07      	ldr	r5, [sp, #28]
 8003af8:	e005      	b.n	8003b06 <_vfprintf_r+0xd3e>
 8003afa:	f1a8 0810 	sub.w	r8, r8, #16
 8003afe:	f1b8 0f10 	cmp.w	r8, #16
 8003b02:	f340 80cc 	ble.w	8003c9e <_vfprintf_r+0xed6>
 8003b06:	3401      	adds	r4, #1
 8003b08:	3310      	adds	r3, #16
 8003b0a:	2c07      	cmp	r4, #7
 8003b0c:	e886 0480 	stmia.w	r6, {r7, sl}
 8003b10:	9327      	str	r3, [sp, #156]	; 0x9c
 8003b12:	9426      	str	r4, [sp, #152]	; 0x98
 8003b14:	bfd8      	it	le
 8003b16:	3608      	addle	r6, #8
 8003b18:	ddef      	ble.n	8003afa <_vfprintf_r+0xd32>
 8003b1a:	4658      	mov	r0, fp
 8003b1c:	4629      	mov	r1, r5
 8003b1e:	aa25      	add	r2, sp, #148	; 0x94
 8003b20:	f002 ff80 	bl	8006a24 <__sprint_r>
 8003b24:	2800      	cmp	r0, #0
 8003b26:	f040 8225 	bne.w	8003f74 <_vfprintf_r+0x11ac>
 8003b2a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003b2c:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8003b2e:	ae32      	add	r6, sp, #200	; 0xc8
 8003b30:	e7e3      	b.n	8003afa <_vfprintf_r+0xd32>
 8003b32:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8003b34:	682c      	ldr	r4, [r5, #0]
 8003b36:	3504      	adds	r5, #4
 8003b38:	950e      	str	r5, [sp, #56]	; 0x38
 8003b3a:	2500      	movs	r5, #0
 8003b3c:	e50e      	b.n	800355c <_vfprintf_r+0x794>
 8003b3e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8003b40:	682c      	ldr	r4, [r5, #0]
 8003b42:	3504      	adds	r5, #4
 8003b44:	950e      	str	r5, [sp, #56]	; 0x38
 8003b46:	2500      	movs	r5, #0
 8003b48:	f7ff ba85 	b.w	8003056 <_vfprintf_r+0x28e>
 8003b4c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8003b4e:	682c      	ldr	r4, [r5, #0]
 8003b50:	3504      	adds	r5, #4
 8003b52:	950e      	str	r5, [sp, #56]	; 0x38
 8003b54:	2301      	movs	r3, #1
 8003b56:	2500      	movs	r5, #0
 8003b58:	f7ff ba7d 	b.w	8003056 <_vfprintf_r+0x28e>
 8003b5c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8003b5e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003b60:	682c      	ldr	r4, [r5, #0]
 8003b62:	3004      	adds	r0, #4
 8003b64:	17e5      	asrs	r5, r4, #31
 8003b66:	900e      	str	r0, [sp, #56]	; 0x38
 8003b68:	4622      	mov	r2, r4
 8003b6a:	462b      	mov	r3, r5
 8003b6c:	e447      	b.n	80033fe <_vfprintf_r+0x636>
 8003b6e:	46d9      	mov	r9, fp
 8003b70:	f7ff ba54 	b.w	800301c <_vfprintf_r+0x254>
 8003b74:	9d08      	ldr	r5, [sp, #32]
 8003b76:	4614      	mov	r4, r2
 8003b78:	3301      	adds	r3, #1
 8003b7a:	444c      	add	r4, r9
 8003b7c:	2b07      	cmp	r3, #7
 8003b7e:	e886 0220 	stmia.w	r6, {r5, r9}
 8003b82:	9427      	str	r4, [sp, #156]	; 0x9c
 8003b84:	9326      	str	r3, [sp, #152]	; 0x98
 8003b86:	bfd8      	it	le
 8003b88:	3608      	addle	r6, #8
 8003b8a:	dd09      	ble.n	8003ba0 <_vfprintf_r+0xdd8>
 8003b8c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003b8e:	9907      	ldr	r1, [sp, #28]
 8003b90:	aa25      	add	r2, sp, #148	; 0x94
 8003b92:	f002 ff47 	bl	8006a24 <__sprint_r>
 8003b96:	2800      	cmp	r0, #0
 8003b98:	f47f aa3e 	bne.w	8003018 <_vfprintf_r+0x250>
 8003b9c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8003b9e:	ae32      	add	r6, sp, #200	; 0xc8
 8003ba0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8003ba2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003ba4:	44a8      	add	r8, r5
 8003ba6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003ba8:	42ab      	cmp	r3, r5
 8003baa:	db4c      	blt.n	8003c46 <_vfprintf_r+0xe7e>
 8003bac:	9d05      	ldr	r5, [sp, #20]
 8003bae:	07e8      	lsls	r0, r5, #31
 8003bb0:	d449      	bmi.n	8003c46 <_vfprintf_r+0xe7e>
 8003bb2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003bb4:	ebc8 050b 	rsb	r5, r8, fp
 8003bb8:	1ac3      	subs	r3, r0, r3
 8003bba:	42ab      	cmp	r3, r5
 8003bbc:	bfb8      	it	lt
 8003bbe:	461d      	movlt	r5, r3
 8003bc0:	2d00      	cmp	r5, #0
 8003bc2:	dd0c      	ble.n	8003bde <_vfprintf_r+0xe16>
 8003bc4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8003bc6:	f8c6 8000 	str.w	r8, [r6]
 8003bca:	3201      	adds	r2, #1
 8003bcc:	442c      	add	r4, r5
 8003bce:	2a07      	cmp	r2, #7
 8003bd0:	6075      	str	r5, [r6, #4]
 8003bd2:	9427      	str	r4, [sp, #156]	; 0x9c
 8003bd4:	9226      	str	r2, [sp, #152]	; 0x98
 8003bd6:	bfd8      	it	le
 8003bd8:	3608      	addle	r6, #8
 8003bda:	f300 8251 	bgt.w	8004080 <_vfprintf_r+0x12b8>
 8003bde:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8003be2:	ebc5 0803 	rsb	r8, r5, r3
 8003be6:	f1b8 0f00 	cmp.w	r8, #0
 8003bea:	f77f ab4c 	ble.w	8003286 <_vfprintf_r+0x4be>
 8003bee:	f1b8 0f10 	cmp.w	r8, #16
 8003bf2:	f646 553c 	movw	r5, #27964	; 0x6d3c
 8003bf6:	f340 833c 	ble.w	8004272 <_vfprintf_r+0x14aa>
 8003bfa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003bfc:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8003c00:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8003c04:	f6c0 0500 	movt	r5, #2048	; 0x800
 8003c08:	f04f 0910 	mov.w	r9, #16
 8003c0c:	4622      	mov	r2, r4
 8003c0e:	e005      	b.n	8003c1c <_vfprintf_r+0xe54>
 8003c10:	f1a8 0810 	sub.w	r8, r8, #16
 8003c14:	f1b8 0f10 	cmp.w	r8, #16
 8003c18:	f77f aec0 	ble.w	800399c <_vfprintf_r+0xbd4>
 8003c1c:	3301      	adds	r3, #1
 8003c1e:	3210      	adds	r2, #16
 8003c20:	2b07      	cmp	r3, #7
 8003c22:	e886 0280 	stmia.w	r6, {r7, r9}
 8003c26:	9227      	str	r2, [sp, #156]	; 0x9c
 8003c28:	9326      	str	r3, [sp, #152]	; 0x98
 8003c2a:	bfd8      	it	le
 8003c2c:	3608      	addle	r6, #8
 8003c2e:	ddef      	ble.n	8003c10 <_vfprintf_r+0xe48>
 8003c30:	4650      	mov	r0, sl
 8003c32:	4659      	mov	r1, fp
 8003c34:	aa25      	add	r2, sp, #148	; 0x94
 8003c36:	f002 fef5 	bl	8006a24 <__sprint_r>
 8003c3a:	2800      	cmp	r0, #0
 8003c3c:	d197      	bne.n	8003b6e <_vfprintf_r+0xda6>
 8003c3e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8003c40:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003c42:	ae32      	add	r6, sp, #200	; 0xc8
 8003c44:	e7e4      	b.n	8003c10 <_vfprintf_r+0xe48>
 8003c46:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8003c48:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8003c4a:	6035      	str	r5, [r6, #0]
 8003c4c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8003c4e:	3201      	adds	r2, #1
 8003c50:	442c      	add	r4, r5
 8003c52:	2a07      	cmp	r2, #7
 8003c54:	6075      	str	r5, [r6, #4]
 8003c56:	9427      	str	r4, [sp, #156]	; 0x9c
 8003c58:	9226      	str	r2, [sp, #152]	; 0x98
 8003c5a:	bfd8      	it	le
 8003c5c:	3608      	addle	r6, #8
 8003c5e:	dda8      	ble.n	8003bb2 <_vfprintf_r+0xdea>
 8003c60:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003c62:	9907      	ldr	r1, [sp, #28]
 8003c64:	aa25      	add	r2, sp, #148	; 0x94
 8003c66:	f002 fedd 	bl	8006a24 <__sprint_r>
 8003c6a:	2800      	cmp	r0, #0
 8003c6c:	f47f a9d4 	bne.w	8003018 <_vfprintf_r+0x250>
 8003c70:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003c72:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8003c74:	ae32      	add	r6, sp, #200	; 0xc8
 8003c76:	e79c      	b.n	8003bb2 <_vfprintf_r+0xdea>
 8003c78:	9d05      	ldr	r5, [sp, #20]
 8003c7a:	07e9      	lsls	r1, r5, #31
 8003c7c:	f53f ae4b 	bmi.w	8003916 <_vfprintf_r+0xb4e>
 8003c80:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8003c82:	f8c6 8000 	str.w	r8, [r6]
 8003c86:	1c63      	adds	r3, r4, #1
 8003c88:	1c54      	adds	r4, r2, #1
 8003c8a:	2c07      	cmp	r4, #7
 8003c8c:	f04f 0201 	mov.w	r2, #1
 8003c90:	9327      	str	r3, [sp, #156]	; 0x9c
 8003c92:	9426      	str	r4, [sp, #152]	; 0x98
 8003c94:	6072      	str	r2, [r6, #4]
 8003c96:	dc0d      	bgt.n	8003cb4 <_vfprintf_r+0xeec>
 8003c98:	3608      	adds	r6, #8
 8003c9a:	4699      	mov	r9, r3
 8003c9c:	e670      	b.n	8003980 <_vfprintf_r+0xbb8>
 8003c9e:	464d      	mov	r5, r9
 8003ca0:	4699      	mov	r9, r3
 8003ca2:	3401      	adds	r4, #1
 8003ca4:	eb08 0309 	add.w	r3, r8, r9
 8003ca8:	2c07      	cmp	r4, #7
 8003caa:	9327      	str	r3, [sp, #156]	; 0x9c
 8003cac:	9426      	str	r4, [sp, #152]	; 0x98
 8003cae:	e886 0120 	stmia.w	r6, {r5, r8}
 8003cb2:	ddf1      	ble.n	8003c98 <_vfprintf_r+0xed0>
 8003cb4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003cb6:	9907      	ldr	r1, [sp, #28]
 8003cb8:	aa25      	add	r2, sp, #148	; 0x94
 8003cba:	f002 feb3 	bl	8006a24 <__sprint_r>
 8003cbe:	2800      	cmp	r0, #0
 8003cc0:	f47f a9aa 	bne.w	8003018 <_vfprintf_r+0x250>
 8003cc4:	f8dd 909c 	ldr.w	r9, [sp, #156]	; 0x9c
 8003cc8:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8003cca:	ae32      	add	r6, sp, #200	; 0xc8
 8003ccc:	e658      	b.n	8003980 <_vfprintf_r+0xbb8>
 8003cce:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003cd0:	9907      	ldr	r1, [sp, #28]
 8003cd2:	aa25      	add	r2, sp, #148	; 0x94
 8003cd4:	f002 fea6 	bl	8006a24 <__sprint_r>
 8003cd8:	2800      	cmp	r0, #0
 8003cda:	f47f a99d 	bne.w	8003018 <_vfprintf_r+0x250>
 8003cde:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8003ce0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003ce2:	ae32      	add	r6, sp, #200	; 0xc8
 8003ce4:	e625      	b.n	8003932 <_vfprintf_r+0xb6a>
 8003ce6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ce8:	9907      	ldr	r1, [sp, #28]
 8003cea:	aa25      	add	r2, sp, #148	; 0x94
 8003cec:	f002 fe9a 	bl	8006a24 <__sprint_r>
 8003cf0:	2800      	cmp	r0, #0
 8003cf2:	f47f a991 	bne.w	8003018 <_vfprintf_r+0x250>
 8003cf6:	f8dd 909c 	ldr.w	r9, [sp, #156]	; 0x9c
 8003cfa:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8003cfc:	ae32      	add	r6, sp, #200	; 0xc8
 8003cfe:	e626      	b.n	800394e <_vfprintf_r+0xb86>
 8003d00:	f10d 0bc7 	add.w	fp, sp, #199	; 0xc7
 8003d04:	4620      	mov	r0, r4
 8003d06:	4629      	mov	r1, r5
 8003d08:	220a      	movs	r2, #10
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	f7fc ffb4 	bl	8000c78 <__aeabi_uldivmod>
 8003d10:	3230      	adds	r2, #48	; 0x30
 8003d12:	f88b 2000 	strb.w	r2, [fp]
 8003d16:	4620      	mov	r0, r4
 8003d18:	4629      	mov	r1, r5
 8003d1a:	220a      	movs	r2, #10
 8003d1c:	2300      	movs	r3, #0
 8003d1e:	f7fc ffab 	bl	8000c78 <__aeabi_uldivmod>
 8003d22:	4604      	mov	r4, r0
 8003d24:	460d      	mov	r5, r1
 8003d26:	ea54 0005 	orrs.w	r0, r4, r5
 8003d2a:	46d8      	mov	r8, fp
 8003d2c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8003d30:	d1e8      	bne.n	8003d04 <_vfprintf_r+0xf3c>
 8003d32:	f7ff b9c2 	b.w	80030ba <_vfprintf_r+0x2f2>
 8003d36:	2b30      	cmp	r3, #48	; 0x30
 8003d38:	f43f a9bf 	beq.w	80030ba <_vfprintf_r+0x2f2>
 8003d3c:	9c04      	ldr	r4, [sp, #16]
 8003d3e:	2330      	movs	r3, #48	; 0x30
 8003d40:	1aa4      	subs	r4, r4, r2
 8003d42:	4690      	mov	r8, r2
 8003d44:	940b      	str	r4, [sp, #44]	; 0x2c
 8003d46:	f801 3c01 	strb.w	r3, [r1, #-1]
 8003d4a:	f7ff b9ba 	b.w	80030c2 <_vfprintf_r+0x2fa>
 8003d4e:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 8003d52:	4264      	negs	r4, r4
 8003d54:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8003d58:	f88d a077 	strb.w	sl, [sp, #119]	; 0x77
 8003d5c:	2301      	movs	r3, #1
 8003d5e:	f7ff b97e 	b.w	800305e <_vfprintf_r+0x296>
 8003d62:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8003d64:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8003d66:	ec43 2b10 	vmov	d0, r2, r3
 8003d6a:	f002 fdf3 	bl	8006954 <__fpclassifyd>
 8003d6e:	2800      	cmp	r0, #0
 8003d70:	f000 8111 	beq.w	8003f96 <_vfprintf_r+0x11ce>
 8003d74:	9c08      	ldr	r4, [sp, #32]
 8003d76:	3401      	adds	r4, #1
 8003d78:	bf08      	it	eq
 8003d7a:	2406      	moveq	r4, #6
 8003d7c:	f029 0520 	bic.w	r5, r9, #32
 8003d80:	bf08      	it	eq
 8003d82:	9408      	streq	r4, [sp, #32]
 8003d84:	d006      	beq.n	8003d94 <_vfprintf_r+0xfcc>
 8003d86:	2d47      	cmp	r5, #71	; 0x47
 8003d88:	d104      	bne.n	8003d94 <_vfprintf_r+0xfcc>
 8003d8a:	9c08      	ldr	r4, [sp, #32]
 8003d8c:	2c00      	cmp	r4, #0
 8003d8e:	bf08      	it	eq
 8003d90:	2401      	moveq	r4, #1
 8003d92:	9408      	str	r4, [sp, #32]
 8003d94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8003d96:	9c05      	ldr	r4, [sp, #20]
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	f444 7480 	orr.w	r4, r4, #256	; 0x100
 8003d9e:	9410      	str	r4, [sp, #64]	; 0x40
 8003da0:	bfbd      	ittte	lt
 8003da2:	461c      	movlt	r4, r3
 8003da4:	f104 4a00 	addlt.w	sl, r4, #2147483648	; 0x80000000
 8003da8:	f04f 0b2d 	movlt.w	fp, #45	; 0x2d
 8003dac:	f8dd a060 	ldrge.w	sl, [sp, #96]	; 0x60
 8003db0:	bfa8      	it	ge
 8003db2:	f04f 0b00 	movge.w	fp, #0
 8003db6:	f1b5 0046 	subs.w	r0, r5, #70	; 0x46
 8003dba:	f1d0 0c00 	rsbs	ip, r0, #0
 8003dbe:	eb5c 0c00 	adcs.w	ip, ip, r0
 8003dc2:	f1bc 0f00 	cmp.w	ip, #0
 8003dc6:	f040 818f 	bne.w	80040e8 <_vfprintf_r+0x1320>
 8003dca:	2d45      	cmp	r5, #69	; 0x45
 8003dcc:	f040 81ff 	bne.w	80041ce <_vfprintf_r+0x1406>
 8003dd0:	9808      	ldr	r0, [sp, #32]
 8003dd2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8003dd4:	1c44      	adds	r4, r0, #1
 8003dd6:	4653      	mov	r3, sl
 8003dd8:	a820      	add	r0, sp, #128	; 0x80
 8003dda:	a923      	add	r1, sp, #140	; 0x8c
 8003ddc:	ec43 2b10 	vmov	d0, r2, r3
 8003de0:	e88d 0003 	stmia.w	sp, {r0, r1}
 8003de4:	4622      	mov	r2, r4
 8003de6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003de8:	2102      	movs	r1, #2
 8003dea:	ab1f      	add	r3, sp, #124	; 0x7c
 8003dec:	f000 fbf0 	bl	80045d0 <_dtoa_r>
 8003df0:	4680      	mov	r8, r0
 8003df2:	4404      	add	r4, r0
 8003df4:	2300      	movs	r3, #0
 8003df6:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003df8:	4651      	mov	r1, sl
 8003dfa:	2200      	movs	r2, #0
 8003dfc:	f7fc fee2 	bl	8000bc4 <__aeabi_dcmpeq>
 8003e00:	4623      	mov	r3, r4
 8003e02:	b948      	cbnz	r0, 8003e18 <_vfprintf_r+0x1050>
 8003e04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003e06:	429c      	cmp	r4, r3
 8003e08:	d906      	bls.n	8003e18 <_vfprintf_r+0x1050>
 8003e0a:	2130      	movs	r1, #48	; 0x30
 8003e0c:	1c5a      	adds	r2, r3, #1
 8003e0e:	9223      	str	r2, [sp, #140]	; 0x8c
 8003e10:	7019      	strb	r1, [r3, #0]
 8003e12:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003e14:	429c      	cmp	r4, r3
 8003e16:	d8f9      	bhi.n	8003e0c <_vfprintf_r+0x1044>
 8003e18:	ebc8 0303 	rsb	r3, r8, r3
 8003e1c:	2d47      	cmp	r5, #71	; 0x47
 8003e1e:	930c      	str	r3, [sp, #48]	; 0x30
 8003e20:	f000 818b 	beq.w	800413a <_vfprintf_r+0x1372>
 8003e24:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8003e28:	f340 826a 	ble.w	8004300 <_vfprintf_r+0x1538>
 8003e2c:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8003e30:	f000 81dd 	beq.w	80041ee <_vfprintf_r+0x1426>
 8003e34:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8003e36:	9513      	str	r5, [sp, #76]	; 0x4c
 8003e38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8003e3a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003e3c:	42ac      	cmp	r4, r5
 8003e3e:	f2c0 81c8 	blt.w	80041d2 <_vfprintf_r+0x140a>
 8003e42:	9c05      	ldr	r4, [sp, #20]
 8003e44:	07e0      	lsls	r0, r4, #31
 8003e46:	bf49      	itett	mi
 8003e48:	9b13      	ldrmi	r3, [sp, #76]	; 0x4c
 8003e4a:	9d13      	ldrpl	r5, [sp, #76]	; 0x4c
 8003e4c:	3301      	addmi	r3, #1
 8003e4e:	930b      	strmi	r3, [sp, #44]	; 0x2c
 8003e50:	bf5a      	itte	pl
 8003e52:	ea25 73e5 	bicpl.w	r3, r5, r5, asr #31
 8003e56:	950b      	strpl	r5, [sp, #44]	; 0x2c
 8003e58:	ea23 73e3 	bicmi.w	r3, r3, r3, asr #31
 8003e5c:	f04f 0967 	mov.w	r9, #103	; 0x67
 8003e60:	f1bb 0f00 	cmp.w	fp, #0
 8003e64:	f040 8135 	bne.w	80040d2 <_vfprintf_r+0x130a>
 8003e68:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8003e6a:	9309      	str	r3, [sp, #36]	; 0x24
 8003e6c:	9405      	str	r4, [sp, #20]
 8003e6e:	f8cd b020 	str.w	fp, [sp, #32]
 8003e72:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 8003e76:	f7ff b92c 	b.w	80030d2 <_vfprintf_r+0x30a>
 8003e7a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003e7c:	1de3      	adds	r3, r4, #7
 8003e7e:	f023 0307 	bic.w	r3, r3, #7
 8003e82:	f103 0508 	add.w	r5, r3, #8
 8003e86:	681c      	ldr	r4, [r3, #0]
 8003e88:	950e      	str	r5, [sp, #56]	; 0x38
 8003e8a:	9416      	str	r4, [sp, #88]	; 0x58
 8003e8c:	685b      	ldr	r3, [r3, #4]
 8003e8e:	9318      	str	r3, [sp, #96]	; 0x60
 8003e90:	f7ff baef 	b.w	8003472 <_vfprintf_r+0x6aa>
 8003e94:	9c05      	ldr	r4, [sp, #20]
 8003e96:	06e2      	lsls	r2, r4, #27
 8003e98:	d56f      	bpl.n	8003f7a <_vfprintf_r+0x11b2>
 8003e9a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8003e9c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8003e9e:	682b      	ldr	r3, [r5, #0]
 8003ea0:	3504      	adds	r5, #4
 8003ea2:	950e      	str	r5, [sp, #56]	; 0x38
 8003ea4:	601c      	str	r4, [r3, #0]
 8003ea6:	f7fe bfe8 	b.w	8002e7a <_vfprintf_r+0xb2>
 8003eaa:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003eac:	9907      	ldr	r1, [sp, #28]
 8003eae:	aa25      	add	r2, sp, #148	; 0x94
 8003eb0:	f002 fdb8 	bl	8006a24 <__sprint_r>
 8003eb4:	2800      	cmp	r0, #0
 8003eb6:	f47f a8af 	bne.w	8003018 <_vfprintf_r+0x250>
 8003eba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8003ebc:	ae32      	add	r6, sp, #200	; 0xc8
 8003ebe:	e47b      	b.n	80037b8 <_vfprintf_r+0x9f0>
 8003ec0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8003ec2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8003ec4:	3201      	adds	r2, #1
 8003ec6:	3401      	adds	r4, #1
 8003ec8:	2101      	movs	r1, #1
 8003eca:	2a07      	cmp	r2, #7
 8003ecc:	6035      	str	r5, [r6, #0]
 8003ece:	9427      	str	r4, [sp, #156]	; 0x9c
 8003ed0:	9226      	str	r2, [sp, #152]	; 0x98
 8003ed2:	6071      	str	r1, [r6, #4]
 8003ed4:	dc78      	bgt.n	8003fc8 <_vfprintf_r+0x1200>
 8003ed6:	3608      	adds	r6, #8
 8003ed8:	4618      	mov	r0, r3
 8003eda:	b928      	cbnz	r0, 8003ee8 <_vfprintf_r+0x1120>
 8003edc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003ede:	b91d      	cbnz	r5, 8003ee8 <_vfprintf_r+0x1120>
 8003ee0:	9d05      	ldr	r5, [sp, #20]
 8003ee2:	07ed      	lsls	r5, r5, #31
 8003ee4:	f57f a9cf 	bpl.w	8003286 <_vfprintf_r+0x4be>
 8003ee8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003eea:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003eec:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8003eee:	4421      	add	r1, r4
 8003ef0:	3301      	adds	r3, #1
 8003ef2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8003ef4:	6035      	str	r5, [r6, #0]
 8003ef6:	2b07      	cmp	r3, #7
 8003ef8:	9127      	str	r1, [sp, #156]	; 0x9c
 8003efa:	6074      	str	r4, [r6, #4]
 8003efc:	9326      	str	r3, [sp, #152]	; 0x98
 8003efe:	bfd8      	it	le
 8003f00:	f106 0208 	addle.w	r2, r6, #8
 8003f04:	f300 8156 	bgt.w	80041b4 <_vfprintf_r+0x13ec>
 8003f08:	4244      	negs	r4, r0
 8003f0a:	2c00      	cmp	r4, #0
 8003f0c:	f340 8089 	ble.w	8004022 <_vfprintf_r+0x125a>
 8003f10:	f646 553c 	movw	r5, #27964	; 0x6d3c
 8003f14:	2c10      	cmp	r4, #16
 8003f16:	f6c0 0500 	movt	r5, #2048	; 0x800
 8003f1a:	dd6d      	ble.n	8003ff8 <_vfprintf_r+0x1230>
 8003f1c:	2610      	movs	r6, #16
 8003f1e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8003f22:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8003f26:	e002      	b.n	8003f2e <_vfprintf_r+0x1166>
 8003f28:	3c10      	subs	r4, #16
 8003f2a:	2c10      	cmp	r4, #16
 8003f2c:	dd64      	ble.n	8003ff8 <_vfprintf_r+0x1230>
 8003f2e:	3301      	adds	r3, #1
 8003f30:	3110      	adds	r1, #16
 8003f32:	2b07      	cmp	r3, #7
 8003f34:	6017      	str	r7, [r2, #0]
 8003f36:	6056      	str	r6, [r2, #4]
 8003f38:	9127      	str	r1, [sp, #156]	; 0x9c
 8003f3a:	9326      	str	r3, [sp, #152]	; 0x98
 8003f3c:	bfd8      	it	le
 8003f3e:	3208      	addle	r2, #8
 8003f40:	ddf2      	ble.n	8003f28 <_vfprintf_r+0x1160>
 8003f42:	4648      	mov	r0, r9
 8003f44:	4651      	mov	r1, sl
 8003f46:	aa25      	add	r2, sp, #148	; 0x94
 8003f48:	f002 fd6c 	bl	8006a24 <__sprint_r>
 8003f4c:	2800      	cmp	r0, #0
 8003f4e:	f040 815d 	bne.w	800420c <_vfprintf_r+0x1444>
 8003f52:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8003f54:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003f56:	aa32      	add	r2, sp, #200	; 0xc8
 8003f58:	e7e6      	b.n	8003f28 <_vfprintf_r+0x1160>
 8003f5a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003f5c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	f43f a85b 	beq.w	800301c <_vfprintf_r+0x254>
 8003f66:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003f68:	4649      	mov	r1, r9
 8003f6a:	aa25      	add	r2, sp, #148	; 0x94
 8003f6c:	f002 fd5a 	bl	8006a24 <__sprint_r>
 8003f70:	f7ff b854 	b.w	800301c <_vfprintf_r+0x254>
 8003f74:	46a9      	mov	r9, r5
 8003f76:	f7ff b851 	b.w	800301c <_vfprintf_r+0x254>
 8003f7a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003f7c:	9d05      	ldr	r5, [sp, #20]
 8003f7e:	6823      	ldr	r3, [r4, #0]
 8003f80:	f015 0f40 	tst.w	r5, #64	; 0x40
 8003f84:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8003f86:	f104 0404 	add.w	r4, r4, #4
 8003f8a:	940e      	str	r4, [sp, #56]	; 0x38
 8003f8c:	bf14      	ite	ne
 8003f8e:	801d      	strhne	r5, [r3, #0]
 8003f90:	601d      	streq	r5, [r3, #0]
 8003f92:	f7fe bf72 	b.w	8002e7a <_vfprintf_r+0xb2>
 8003f96:	9d05      	ldr	r5, [sp, #20]
 8003f98:	9008      	str	r0, [sp, #32]
 8003f9a:	f646 5858 	movw	r8, #27992	; 0x6d58
 8003f9e:	f646 5354 	movw	r3, #27988	; 0x6d54
 8003fa2:	2403      	movs	r4, #3
 8003fa4:	f6c0 0800 	movt	r8, #2048	; 0x800
 8003fa8:	f6c0 0300 	movt	r3, #2048	; 0x800
 8003fac:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8003fb0:	9409      	str	r4, [sp, #36]	; 0x24
 8003fb2:	9505      	str	r5, [sp, #20]
 8003fb4:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8003fb8:	bfd8      	it	le
 8003fba:	4698      	movle	r8, r3
 8003fbc:	9013      	str	r0, [sp, #76]	; 0x4c
 8003fbe:	940b      	str	r4, [sp, #44]	; 0x2c
 8003fc0:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 8003fc4:	f7ff b885 	b.w	80030d2 <_vfprintf_r+0x30a>
 8003fc8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003fca:	9907      	ldr	r1, [sp, #28]
 8003fcc:	aa25      	add	r2, sp, #148	; 0x94
 8003fce:	f002 fd29 	bl	8006a24 <__sprint_r>
 8003fd2:	2800      	cmp	r0, #0
 8003fd4:	f47f a820 	bne.w	8003018 <_vfprintf_r+0x250>
 8003fd8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8003fda:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8003fdc:	ae32      	add	r6, sp, #200	; 0xc8
 8003fde:	e77c      	b.n	8003eda <_vfprintf_r+0x1112>
 8003fe0:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003fe2:	9907      	ldr	r1, [sp, #28]
 8003fe4:	aa25      	add	r2, sp, #148	; 0x94
 8003fe6:	f002 fd1d 	bl	8006a24 <__sprint_r>
 8003fea:	2800      	cmp	r0, #0
 8003fec:	f47f a814 	bne.w	8003018 <_vfprintf_r+0x250>
 8003ff0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8003ff2:	ae32      	add	r6, sp, #200	; 0xc8
 8003ff4:	f7ff bbf6 	b.w	80037e4 <_vfprintf_r+0xa1c>
 8003ff8:	3301      	adds	r3, #1
 8003ffa:	4421      	add	r1, r4
 8003ffc:	2b07      	cmp	r3, #7
 8003ffe:	6015      	str	r5, [r2, #0]
 8004000:	6054      	str	r4, [r2, #4]
 8004002:	9127      	str	r1, [sp, #156]	; 0x9c
 8004004:	9326      	str	r3, [sp, #152]	; 0x98
 8004006:	bfd8      	it	le
 8004008:	3208      	addle	r2, #8
 800400a:	dd0a      	ble.n	8004022 <_vfprintf_r+0x125a>
 800400c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800400e:	9907      	ldr	r1, [sp, #28]
 8004010:	aa25      	add	r2, sp, #148	; 0x94
 8004012:	f002 fd07 	bl	8006a24 <__sprint_r>
 8004016:	2800      	cmp	r0, #0
 8004018:	f47e affe 	bne.w	8003018 <_vfprintf_r+0x250>
 800401c:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800401e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004020:	aa32      	add	r2, sp, #200	; 0xc8
 8004022:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004024:	f8c2 8000 	str.w	r8, [r2]
 8004028:	3301      	adds	r3, #1
 800402a:	4429      	add	r1, r5
 800402c:	2b07      	cmp	r3, #7
 800402e:	9127      	str	r1, [sp, #156]	; 0x9c
 8004030:	9326      	str	r3, [sp, #152]	; 0x98
 8004032:	6055      	str	r5, [r2, #4]
 8004034:	f73f acbc 	bgt.w	80039b0 <_vfprintf_r+0xbe8>
 8004038:	f102 0608 	add.w	r6, r2, #8
 800403c:	460c      	mov	r4, r1
 800403e:	f7ff b922 	b.w	8003286 <_vfprintf_r+0x4be>
 8004042:	9508      	str	r5, [sp, #32]
 8004044:	f7fe fe90 	bl	8002d68 <strlen>
 8004048:	940e      	str	r4, [sp, #56]	; 0x38
 800404a:	9c08      	ldr	r4, [sp, #32]
 800404c:	900b      	str	r0, [sp, #44]	; 0x2c
 800404e:	ea20 75e0 	bic.w	r5, r0, r0, asr #31
 8004052:	9509      	str	r5, [sp, #36]	; 0x24
 8004054:	9413      	str	r4, [sp, #76]	; 0x4c
 8004056:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 800405a:	f7ff b83a 	b.w	80030d2 <_vfprintf_r+0x30a>
 800405e:	f6c0 0a00 	movt	sl, #2048	; 0x800
 8004062:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8004064:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004066:	f7ff b87c 	b.w	8003162 <_vfprintf_r+0x39a>
 800406a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800406c:	9907      	ldr	r1, [sp, #28]
 800406e:	aa25      	add	r2, sp, #148	; 0x94
 8004070:	f002 fcd8 	bl	8006a24 <__sprint_r>
 8004074:	2800      	cmp	r0, #0
 8004076:	f47e afcf 	bne.w	8003018 <_vfprintf_r+0x250>
 800407a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 800407c:	ae32      	add	r6, sp, #200	; 0xc8
 800407e:	e4d1      	b.n	8003a24 <_vfprintf_r+0xc5c>
 8004080:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004082:	9907      	ldr	r1, [sp, #28]
 8004084:	aa25      	add	r2, sp, #148	; 0x94
 8004086:	f002 fccd 	bl	8006a24 <__sprint_r>
 800408a:	2800      	cmp	r0, #0
 800408c:	f47e afc4 	bne.w	8003018 <_vfprintf_r+0x250>
 8004090:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004092:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004094:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8004096:	1acb      	subs	r3, r1, r3
 8004098:	ae32      	add	r6, sp, #200	; 0xc8
 800409a:	e5a0      	b.n	8003bde <_vfprintf_r+0xe16>
 800409c:	9d08      	ldr	r5, [sp, #32]
 800409e:	940e      	str	r4, [sp, #56]	; 0x38
 80040a0:	2d06      	cmp	r5, #6
 80040a2:	bf28      	it	cs
 80040a4:	2506      	movcs	r5, #6
 80040a6:	46c2      	mov	sl, r8
 80040a8:	950b      	str	r5, [sp, #44]	; 0x2c
 80040aa:	f646 5884 	movw	r8, #28036	; 0x6d84
 80040ae:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80040b2:	f8cd a020 	str.w	sl, [sp, #32]
 80040b6:	4654      	mov	r4, sl
 80040b8:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
 80040bc:	9509      	str	r5, [sp, #36]	; 0x24
 80040be:	f6c0 0800 	movt	r8, #2048	; 0x800
 80040c2:	f7ff b806 	b.w	80030d2 <_vfprintf_r+0x30a>
 80040c6:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 80040ca:	f88d a077 	strb.w	sl, [sp, #119]	; 0x77
 80040ce:	f7ff b9e4 	b.w	800349a <_vfprintf_r+0x6d2>
 80040d2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80040d4:	9309      	str	r3, [sp, #36]	; 0x24
 80040d6:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 80040da:	2400      	movs	r4, #0
 80040dc:	9505      	str	r5, [sp, #20]
 80040de:	f88d a077 	strb.w	sl, [sp, #119]	; 0x77
 80040e2:	9408      	str	r4, [sp, #32]
 80040e4:	f7fe bff8 	b.w	80030d8 <_vfprintf_r+0x310>
 80040e8:	2103      	movs	r1, #3
 80040ea:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80040ec:	f8cd c008 	str.w	ip, [sp, #8]
 80040f0:	4653      	mov	r3, sl
 80040f2:	a823      	add	r0, sp, #140	; 0x8c
 80040f4:	ac20      	add	r4, sp, #128	; 0x80
 80040f6:	ec43 2b10 	vmov	d0, r2, r3
 80040fa:	9001      	str	r0, [sp, #4]
 80040fc:	9400      	str	r4, [sp, #0]
 80040fe:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004100:	9a08      	ldr	r2, [sp, #32]
 8004102:	ab1f      	add	r3, sp, #124	; 0x7c
 8004104:	f000 fa64 	bl	80045d0 <_dtoa_r>
 8004108:	2d47      	cmp	r5, #71	; 0x47
 800410a:	4680      	mov	r8, r0
 800410c:	f8dd c008 	ldr.w	ip, [sp, #8]
 8004110:	d102      	bne.n	8004118 <_vfprintf_r+0x1350>
 8004112:	9c05      	ldr	r4, [sp, #20]
 8004114:	07e1      	lsls	r1, r4, #31
 8004116:	d50d      	bpl.n	8004134 <_vfprintf_r+0x136c>
 8004118:	9c08      	ldr	r4, [sp, #32]
 800411a:	4444      	add	r4, r8
 800411c:	f1bc 0f00 	cmp.w	ip, #0
 8004120:	f43f ae68 	beq.w	8003df4 <_vfprintf_r+0x102c>
 8004124:	f898 3000 	ldrb.w	r3, [r8]
 8004128:	2b30      	cmp	r3, #48	; 0x30
 800412a:	f000 80af 	beq.w	800428c <_vfprintf_r+0x14c4>
 800412e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004130:	441c      	add	r4, r3
 8004132:	e65f      	b.n	8003df4 <_vfprintf_r+0x102c>
 8004134:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004136:	1a1b      	subs	r3, r3, r0
 8004138:	930c      	str	r3, [sp, #48]	; 0x30
 800413a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800413c:	1cda      	adds	r2, r3, #3
 800413e:	db11      	blt.n	8004164 <_vfprintf_r+0x139c>
 8004140:	9c08      	ldr	r4, [sp, #32]
 8004142:	429c      	cmp	r4, r3
 8004144:	db0e      	blt.n	8004164 <_vfprintf_r+0x139c>
 8004146:	9313      	str	r3, [sp, #76]	; 0x4c
 8004148:	e676      	b.n	8003e38 <_vfprintf_r+0x1070>
 800414a:	9d08      	ldr	r5, [sp, #32]
 800414c:	940e      	str	r4, [sp, #56]	; 0x38
 800414e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8004152:	9509      	str	r5, [sp, #36]	; 0x24
 8004154:	9d08      	ldr	r5, [sp, #32]
 8004156:	9013      	str	r0, [sp, #76]	; 0x4c
 8004158:	950b      	str	r5, [sp, #44]	; 0x2c
 800415a:	9008      	str	r0, [sp, #32]
 800415c:	f89d a077 	ldrb.w	sl, [sp, #119]	; 0x77
 8004160:	f7fe bfb7 	b.w	80030d2 <_vfprintf_r+0x30a>
 8004164:	f1a9 0902 	sub.w	r9, r9, #2
 8004168:	3b01      	subs	r3, #1
 800416a:	2b00      	cmp	r3, #0
 800416c:	931f      	str	r3, [sp, #124]	; 0x7c
 800416e:	bfba      	itte	lt
 8004170:	425b      	neglt	r3, r3
 8004172:	222d      	movlt	r2, #45	; 0x2d
 8004174:	222b      	movge	r2, #43	; 0x2b
 8004176:	2b09      	cmp	r3, #9
 8004178:	f88d 9084 	strb.w	r9, [sp, #132]	; 0x84
 800417c:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
 8004180:	dc47      	bgt.n	8004212 <_vfprintf_r+0x144a>
 8004182:	3330      	adds	r3, #48	; 0x30
 8004184:	2230      	movs	r2, #48	; 0x30
 8004186:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
 800418a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
 800418e:	ab22      	add	r3, sp, #136	; 0x88
 8004190:	aa21      	add	r2, sp, #132	; 0x84
 8004192:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004194:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004196:	1a9a      	subs	r2, r3, r2
 8004198:	4414      	add	r4, r2
 800419a:	2d01      	cmp	r5, #1
 800419c:	9219      	str	r2, [sp, #100]	; 0x64
 800419e:	940b      	str	r4, [sp, #44]	; 0x2c
 80041a0:	f340 80a4 	ble.w	80042ec <_vfprintf_r+0x1524>
 80041a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80041a6:	2400      	movs	r4, #0
 80041a8:	3301      	adds	r3, #1
 80041aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80041ac:	9413      	str	r4, [sp, #76]	; 0x4c
 80041ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80041b2:	e655      	b.n	8003e60 <_vfprintf_r+0x1098>
 80041b4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80041b6:	9907      	ldr	r1, [sp, #28]
 80041b8:	aa25      	add	r2, sp, #148	; 0x94
 80041ba:	f002 fc33 	bl	8006a24 <__sprint_r>
 80041be:	2800      	cmp	r0, #0
 80041c0:	f47e af2a 	bne.w	8003018 <_vfprintf_r+0x250>
 80041c4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80041c6:	9927      	ldr	r1, [sp, #156]	; 0x9c
 80041c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80041ca:	aa32      	add	r2, sp, #200	; 0xc8
 80041cc:	e69c      	b.n	8003f08 <_vfprintf_r+0x1140>
 80041ce:	2102      	movs	r1, #2
 80041d0:	e78b      	b.n	80040ea <_vfprintf_r+0x1322>
 80041d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80041d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80041d6:	2c00      	cmp	r4, #0
 80041d8:	bfd4      	ite	le
 80041da:	f1c4 0302 	rsble	r3, r4, #2
 80041de:	2301      	movgt	r3, #1
 80041e0:	441d      	add	r5, r3
 80041e2:	950b      	str	r5, [sp, #44]	; 0x2c
 80041e4:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
 80041e8:	f04f 0967 	mov.w	r9, #103	; 0x67
 80041ec:	e638      	b.n	8003e60 <_vfprintf_r+0x1098>
 80041ee:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 80041f0:	2c00      	cmp	r4, #0
 80041f2:	9413      	str	r4, [sp, #76]	; 0x4c
 80041f4:	dd6b      	ble.n	80042ce <_vfprintf_r+0x1506>
 80041f6:	9d08      	ldr	r5, [sp, #32]
 80041f8:	2d00      	cmp	r5, #0
 80041fa:	d13f      	bne.n	800427c <_vfprintf_r+0x14b4>
 80041fc:	9c05      	ldr	r4, [sp, #20]
 80041fe:	07e5      	lsls	r5, r4, #31
 8004200:	d43c      	bmi.n	800427c <_vfprintf_r+0x14b4>
 8004202:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8004204:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
 8004208:	950b      	str	r5, [sp, #44]	; 0x2c
 800420a:	e629      	b.n	8003e60 <_vfprintf_r+0x1098>
 800420c:	46d1      	mov	r9, sl
 800420e:	f7fe bf05 	b.w	800301c <_vfprintf_r+0x254>
 8004212:	f246 6067 	movw	r0, #26215	; 0x6667
 8004216:	f2c6 6066 	movt	r0, #26214	; 0x6666
 800421a:	f10d 0192 	add.w	r1, sp, #146	; 0x92
 800421e:	fb80 5403 	smull	r5, r4, r0, r3
 8004222:	17da      	asrs	r2, r3, #31
 8004224:	ebc2 02a4 	rsb	r2, r2, r4, asr #2
 8004228:	eb02 0482 	add.w	r4, r2, r2, lsl #2
 800422c:	460d      	mov	r5, r1
 800422e:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
 8004232:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8004236:	2a09      	cmp	r2, #9
 8004238:	7029      	strb	r1, [r5, #0]
 800423a:	4613      	mov	r3, r2
 800423c:	f105 31ff 	add.w	r1, r5, #4294967295	; 0xffffffff
 8004240:	dced      	bgt.n	800421e <_vfprintf_r+0x1456>
 8004242:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8004246:	f10d 0093 	add.w	r0, sp, #147	; 0x93
 800424a:	b2da      	uxtb	r2, r3
 800424c:	4288      	cmp	r0, r1
 800424e:	f805 2c01 	strb.w	r2, [r5, #-1]
 8004252:	d957      	bls.n	8004304 <_vfprintf_r+0x153c>
 8004254:	f10d 0185 	add.w	r1, sp, #133	; 0x85
 8004258:	462b      	mov	r3, r5
 800425a:	e001      	b.n	8004260 <_vfprintf_r+0x1498>
 800425c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004260:	4283      	cmp	r3, r0
 8004262:	f801 2f01 	strb.w	r2, [r1, #1]!
 8004266:	d1f9      	bne.n	800425c <_vfprintf_r+0x1494>
 8004268:	a842      	add	r0, sp, #264	; 0x108
 800426a:	ebc5 0340 	rsb	r3, r5, r0, lsl #1
 800426e:	3bf6      	subs	r3, #246	; 0xf6
 8004270:	e78e      	b.n	8004190 <_vfprintf_r+0x13c8>
 8004272:	f6c0 0500 	movt	r5, #2048	; 0x800
 8004276:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004278:	f7ff bb91 	b.w	800399e <_vfprintf_r+0xbd6>
 800427c:	9c08      	ldr	r4, [sp, #32]
 800427e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8004280:	1c63      	adds	r3, r4, #1
 8004282:	441d      	add	r5, r3
 8004284:	950b      	str	r5, [sp, #44]	; 0x2c
 8004286:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
 800428a:	e5e9      	b.n	8003e60 <_vfprintf_r+0x1098>
 800428c:	9816      	ldr	r0, [sp, #88]	; 0x58
 800428e:	4651      	mov	r1, sl
 8004290:	2200      	movs	r2, #0
 8004292:	2300      	movs	r3, #0
 8004294:	f7fc fc96 	bl	8000bc4 <__aeabi_dcmpeq>
 8004298:	2800      	cmp	r0, #0
 800429a:	f47f af48 	bne.w	800412e <_vfprintf_r+0x1366>
 800429e:	9808      	ldr	r0, [sp, #32]
 80042a0:	f1c0 0301 	rsb	r3, r0, #1
 80042a4:	931f      	str	r3, [sp, #124]	; 0x7c
 80042a6:	441c      	add	r4, r3
 80042a8:	e5a4      	b.n	8003df4 <_vfprintf_r+0x102c>
 80042aa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80042ac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80042ae:	682d      	ldr	r5, [r5, #0]
 80042b0:	f893 9001 	ldrb.w	r9, [r3, #1]
 80042b4:	9508      	str	r5, [sp, #32]
 80042b6:	2d00      	cmp	r5, #0
 80042b8:	f104 0104 	add.w	r1, r4, #4
 80042bc:	bfb8      	it	lt
 80042be:	f04f 35ff 	movlt.w	r5, #4294967295	; 0xffffffff
 80042c2:	910e      	str	r1, [sp, #56]	; 0x38
 80042c4:	4603      	mov	r3, r0
 80042c6:	bfb8      	it	lt
 80042c8:	9508      	strlt	r5, [sp, #32]
 80042ca:	f7fe be0a 	b.w	8002ee2 <_vfprintf_r+0x11a>
 80042ce:	9c08      	ldr	r4, [sp, #32]
 80042d0:	b934      	cbnz	r4, 80042e0 <_vfprintf_r+0x1518>
 80042d2:	9d05      	ldr	r5, [sp, #20]
 80042d4:	07ec      	lsls	r4, r5, #31
 80042d6:	bf5c      	itt	pl
 80042d8:	2301      	movpl	r3, #1
 80042da:	930b      	strpl	r3, [sp, #44]	; 0x2c
 80042dc:	f57f adc0 	bpl.w	8003e60 <_vfprintf_r+0x1098>
 80042e0:	9b08      	ldr	r3, [sp, #32]
 80042e2:	3302      	adds	r3, #2
 80042e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80042e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80042ea:	e5b9      	b.n	8003e60 <_vfprintf_r+0x1098>
 80042ec:	9c05      	ldr	r4, [sp, #20]
 80042ee:	f014 0301 	ands.w	r3, r4, #1
 80042f2:	f47f af57 	bne.w	80041a4 <_vfprintf_r+0x13dc>
 80042f6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80042f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80042fa:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
 80042fe:	e5af      	b.n	8003e60 <_vfprintf_r+0x1098>
 8004300:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004302:	e731      	b.n	8004168 <_vfprintf_r+0x13a0>
 8004304:	f10d 0386 	add.w	r3, sp, #134	; 0x86
 8004308:	e742      	b.n	8004190 <_vfprintf_r+0x13c8>
 800430a:	bf00      	nop

0800430c <__sbprintf>:
 800430c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004310:	460c      	mov	r4, r1
 8004312:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 8004316:	69e7      	ldr	r7, [r4, #28]
 8004318:	f8b1 900c 	ldrh.w	r9, [r1, #12]
 800431c:	6e49      	ldr	r1, [r1, #100]	; 0x64
 800431e:	f8b4 800e 	ldrh.w	r8, [r4, #14]
 8004322:	9707      	str	r7, [sp, #28]
 8004324:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8004326:	9119      	str	r1, [sp, #100]	; 0x64
 8004328:	ad1a      	add	r5, sp, #104	; 0x68
 800432a:	f44f 6680 	mov.w	r6, #1024	; 0x400
 800432e:	f04f 0e00 	mov.w	lr, #0
 8004332:	f029 0902 	bic.w	r9, r9, #2
 8004336:	4669      	mov	r1, sp
 8004338:	9500      	str	r5, [sp, #0]
 800433a:	9504      	str	r5, [sp, #16]
 800433c:	9602      	str	r6, [sp, #8]
 800433e:	9605      	str	r6, [sp, #20]
 8004340:	f8ad 900c 	strh.w	r9, [sp, #12]
 8004344:	f8ad 800e 	strh.w	r8, [sp, #14]
 8004348:	9709      	str	r7, [sp, #36]	; 0x24
 800434a:	f8cd e018 	str.w	lr, [sp, #24]
 800434e:	4606      	mov	r6, r0
 8004350:	f7fe fd3a 	bl	8002dc8 <_vfprintf_r>
 8004354:	1e05      	subs	r5, r0, #0
 8004356:	db07      	blt.n	8004368 <__sbprintf+0x5c>
 8004358:	4630      	mov	r0, r6
 800435a:	4669      	mov	r1, sp
 800435c:	f001 f9d8 	bl	8005710 <_fflush_r>
 8004360:	2800      	cmp	r0, #0
 8004362:	bf18      	it	ne
 8004364:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
 8004368:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800436c:	065e      	lsls	r6, r3, #25
 800436e:	bf48      	it	mi
 8004370:	89a3      	ldrhmi	r3, [r4, #12]
 8004372:	4628      	mov	r0, r5
 8004374:	bf44      	itt	mi
 8004376:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800437a:	81a3      	strhmi	r3, [r4, #12]
 800437c:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 8004380:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004384 <_write_r>:
 8004384:	b570      	push	{r4, r5, r6, lr}
 8004386:	f640 14ac 	movw	r4, #2476	; 0x9ac
 800438a:	f2c2 0400 	movt	r4, #8192	; 0x2000
 800438e:	4606      	mov	r6, r0
 8004390:	2500      	movs	r5, #0
 8004392:	4608      	mov	r0, r1
 8004394:	4611      	mov	r1, r2
 8004396:	461a      	mov	r2, r3
 8004398:	6025      	str	r5, [r4, #0]
 800439a:	f7fd f905 	bl	80015a8 <_write>
 800439e:	1c43      	adds	r3, r0, #1
 80043a0:	d000      	beq.n	80043a4 <_write_r+0x20>
 80043a2:	bd70      	pop	{r4, r5, r6, pc}
 80043a4:	6823      	ldr	r3, [r4, #0]
 80043a6:	2b00      	cmp	r3, #0
 80043a8:	d0fb      	beq.n	80043a2 <_write_r+0x1e>
 80043aa:	6033      	str	r3, [r6, #0]
 80043ac:	bd70      	pop	{r4, r5, r6, pc}
 80043ae:	bf00      	nop

080043b0 <__swsetup_r>:
 80043b0:	b538      	push	{r3, r4, r5, lr}
 80043b2:	f240 4328 	movw	r3, #1064	; 0x428
 80043b6:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80043ba:	4605      	mov	r5, r0
 80043bc:	6818      	ldr	r0, [r3, #0]
 80043be:	460c      	mov	r4, r1
 80043c0:	b110      	cbz	r0, 80043c8 <__swsetup_r+0x18>
 80043c2:	6b82      	ldr	r2, [r0, #56]	; 0x38
 80043c4:	2a00      	cmp	r2, #0
 80043c6:	d036      	beq.n	8004436 <__swsetup_r+0x86>
 80043c8:	89a2      	ldrh	r2, [r4, #12]
 80043ca:	b293      	uxth	r3, r2
 80043cc:	0718      	lsls	r0, r3, #28
 80043ce:	d50c      	bpl.n	80043ea <__swsetup_r+0x3a>
 80043d0:	6921      	ldr	r1, [r4, #16]
 80043d2:	b1a9      	cbz	r1, 8004400 <__swsetup_r+0x50>
 80043d4:	f013 0201 	ands.w	r2, r3, #1
 80043d8:	d01e      	beq.n	8004418 <__swsetup_r+0x68>
 80043da:	6963      	ldr	r3, [r4, #20]
 80043dc:	2200      	movs	r2, #0
 80043de:	425b      	negs	r3, r3
 80043e0:	61a3      	str	r3, [r4, #24]
 80043e2:	60a2      	str	r2, [r4, #8]
 80043e4:	b1f1      	cbz	r1, 8004424 <__swsetup_r+0x74>
 80043e6:	2000      	movs	r0, #0
 80043e8:	bd38      	pop	{r3, r4, r5, pc}
 80043ea:	06d9      	lsls	r1, r3, #27
 80043ec:	d53b      	bpl.n	8004466 <__swsetup_r+0xb6>
 80043ee:	075b      	lsls	r3, r3, #29
 80043f0:	d424      	bmi.n	800443c <__swsetup_r+0x8c>
 80043f2:	6921      	ldr	r1, [r4, #16]
 80043f4:	f042 0308 	orr.w	r3, r2, #8
 80043f8:	81a3      	strh	r3, [r4, #12]
 80043fa:	b29b      	uxth	r3, r3
 80043fc:	2900      	cmp	r1, #0
 80043fe:	d1e9      	bne.n	80043d4 <__swsetup_r+0x24>
 8004400:	f403 7220 	and.w	r2, r3, #640	; 0x280
 8004404:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8004408:	d0e4      	beq.n	80043d4 <__swsetup_r+0x24>
 800440a:	4621      	mov	r1, r4
 800440c:	4628      	mov	r0, r5
 800440e:	f001 fc67 	bl	8005ce0 <__smakebuf_r>
 8004412:	89a3      	ldrh	r3, [r4, #12]
 8004414:	6921      	ldr	r1, [r4, #16]
 8004416:	e7dd      	b.n	80043d4 <__swsetup_r+0x24>
 8004418:	0798      	lsls	r0, r3, #30
 800441a:	bf58      	it	pl
 800441c:	6962      	ldrpl	r2, [r4, #20]
 800441e:	60a2      	str	r2, [r4, #8]
 8004420:	2900      	cmp	r1, #0
 8004422:	d1e0      	bne.n	80043e6 <__swsetup_r+0x36>
 8004424:	89a3      	ldrh	r3, [r4, #12]
 8004426:	061a      	lsls	r2, r3, #24
 8004428:	d5dd      	bpl.n	80043e6 <__swsetup_r+0x36>
 800442a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800442e:	81a3      	strh	r3, [r4, #12]
 8004430:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004434:	bd38      	pop	{r3, r4, r5, pc}
 8004436:	f7fe f805 	bl	8002444 <__sinit>
 800443a:	e7c5      	b.n	80043c8 <__swsetup_r+0x18>
 800443c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800443e:	b149      	cbz	r1, 8004454 <__swsetup_r+0xa4>
 8004440:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8004444:	4299      	cmp	r1, r3
 8004446:	d003      	beq.n	8004450 <__swsetup_r+0xa0>
 8004448:	4628      	mov	r0, r5
 800444a:	f001 f9c9 	bl	80057e0 <_free_r>
 800444e:	89a2      	ldrh	r2, [r4, #12]
 8004450:	2300      	movs	r3, #0
 8004452:	6323      	str	r3, [r4, #48]	; 0x30
 8004454:	f022 0224 	bic.w	r2, r2, #36	; 0x24
 8004458:	6921      	ldr	r1, [r4, #16]
 800445a:	0412      	lsls	r2, r2, #16
 800445c:	2300      	movs	r3, #0
 800445e:	0c12      	lsrs	r2, r2, #16
 8004460:	e884 000a 	stmia.w	r4, {r1, r3}
 8004464:	e7c6      	b.n	80043f4 <__swsetup_r+0x44>
 8004466:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800446a:	2309      	movs	r3, #9
 800446c:	602b      	str	r3, [r5, #0]
 800446e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004472:	81a2      	strh	r2, [r4, #12]
 8004474:	bd38      	pop	{r3, r4, r5, pc}
 8004476:	bf00      	nop

08004478 <_close_r>:
 8004478:	b538      	push	{r3, r4, r5, lr}
 800447a:	f640 14ac 	movw	r4, #2476	; 0x9ac
 800447e:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8004482:	2300      	movs	r3, #0
 8004484:	4605      	mov	r5, r0
 8004486:	4608      	mov	r0, r1
 8004488:	6023      	str	r3, [r4, #0]
 800448a:	f7fd f8b9 	bl	8001600 <_close>
 800448e:	1c43      	adds	r3, r0, #1
 8004490:	d000      	beq.n	8004494 <_close_r+0x1c>
 8004492:	bd38      	pop	{r3, r4, r5, pc}
 8004494:	6823      	ldr	r3, [r4, #0]
 8004496:	2b00      	cmp	r3, #0
 8004498:	d0fb      	beq.n	8004492 <_close_r+0x1a>
 800449a:	602b      	str	r3, [r5, #0]
 800449c:	bd38      	pop	{r3, r4, r5, pc}
 800449e:	bf00      	nop

080044a0 <quorem>:
 80044a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044a4:	6903      	ldr	r3, [r0, #16]
 80044a6:	690d      	ldr	r5, [r1, #16]
 80044a8:	429d      	cmp	r5, r3
 80044aa:	4683      	mov	fp, r0
 80044ac:	b083      	sub	sp, #12
 80044ae:	bfc8      	it	gt
 80044b0:	2000      	movgt	r0, #0
 80044b2:	f300 8088 	bgt.w	80045c6 <quorem+0x126>
 80044b6:	3d01      	subs	r5, #1
 80044b8:	f101 0414 	add.w	r4, r1, #20
 80044bc:	f10b 0a14 	add.w	sl, fp, #20
 80044c0:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
 80044c4:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
 80044c8:	3201      	adds	r2, #1
 80044ca:	fbb3 f8f2 	udiv	r8, r3, r2
 80044ce:	00aa      	lsls	r2, r5, #2
 80044d0:	4691      	mov	r9, r2
 80044d2:	9200      	str	r2, [sp, #0]
 80044d4:	4452      	add	r2, sl
 80044d6:	44a1      	add	r9, r4
 80044d8:	9201      	str	r2, [sp, #4]
 80044da:	f1b8 0f00 	cmp.w	r8, #0
 80044de:	d03d      	beq.n	800455c <quorem+0xbc>
 80044e0:	f04f 0e00 	mov.w	lr, #0
 80044e4:	4670      	mov	r0, lr
 80044e6:	4622      	mov	r2, r4
 80044e8:	4653      	mov	r3, sl
 80044ea:	468c      	mov	ip, r1
 80044ec:	f852 6b04 	ldr.w	r6, [r2], #4
 80044f0:	6819      	ldr	r1, [r3, #0]
 80044f2:	b2b7      	uxth	r7, r6
 80044f4:	0c36      	lsrs	r6, r6, #16
 80044f6:	fb07 ee08 	mla	lr, r7, r8, lr
 80044fa:	fb06 f608 	mul.w	r6, r6, r8
 80044fe:	eb06 461e 	add.w	r6, r6, lr, lsr #16
 8004502:	fa1f f78e 	uxth.w	r7, lr
 8004506:	1bc7      	subs	r7, r0, r7
 8004508:	b2b0      	uxth	r0, r6
 800450a:	fa17 f781 	uxtah	r7, r7, r1
 800450e:	ebc0 4011 	rsb	r0, r0, r1, lsr #16
 8004512:	eb00 4027 	add.w	r0, r0, r7, asr #16
 8004516:	b2bf      	uxth	r7, r7
 8004518:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
 800451c:	4591      	cmp	r9, r2
 800451e:	f843 7b04 	str.w	r7, [r3], #4
 8004522:	ea4f 4020 	mov.w	r0, r0, asr #16
 8004526:	ea4f 4e16 	mov.w	lr, r6, lsr #16
 800452a:	d2df      	bcs.n	80044ec <quorem+0x4c>
 800452c:	9a00      	ldr	r2, [sp, #0]
 800452e:	f85a 3002 	ldr.w	r3, [sl, r2]
 8004532:	4661      	mov	r1, ip
 8004534:	b993      	cbnz	r3, 800455c <quorem+0xbc>
 8004536:	9a01      	ldr	r2, [sp, #4]
 8004538:	1f13      	subs	r3, r2, #4
 800453a:	459a      	cmp	sl, r3
 800453c:	d20c      	bcs.n	8004558 <quorem+0xb8>
 800453e:	f852 3c04 	ldr.w	r3, [r2, #-4]
 8004542:	b94b      	cbnz	r3, 8004558 <quorem+0xb8>
 8004544:	f1a2 0308 	sub.w	r3, r2, #8
 8004548:	e002      	b.n	8004550 <quorem+0xb0>
 800454a:	681a      	ldr	r2, [r3, #0]
 800454c:	3b04      	subs	r3, #4
 800454e:	b91a      	cbnz	r2, 8004558 <quorem+0xb8>
 8004550:	459a      	cmp	sl, r3
 8004552:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8004556:	d3f8      	bcc.n	800454a <quorem+0xaa>
 8004558:	f8cb 5010 	str.w	r5, [fp, #16]
 800455c:	4658      	mov	r0, fp
 800455e:	f001 ff0d 	bl	800637c <__mcmp>
 8004562:	2800      	cmp	r0, #0
 8004564:	db2e      	blt.n	80045c4 <quorem+0x124>
 8004566:	f108 0801 	add.w	r8, r8, #1
 800456a:	4653      	mov	r3, sl
 800456c:	2200      	movs	r2, #0
 800456e:	f854 6b04 	ldr.w	r6, [r4], #4
 8004572:	6818      	ldr	r0, [r3, #0]
 8004574:	b2b1      	uxth	r1, r6
 8004576:	1a52      	subs	r2, r2, r1
 8004578:	0c36      	lsrs	r6, r6, #16
 800457a:	fa12 f180 	uxtah	r1, r2, r0
 800457e:	ebc6 4210 	rsb	r2, r6, r0, lsr #16
 8004582:	eb02 4221 	add.w	r2, r2, r1, asr #16
 8004586:	b289      	uxth	r1, r1
 8004588:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800458c:	45a1      	cmp	r9, r4
 800458e:	f843 1b04 	str.w	r1, [r3], #4
 8004592:	ea4f 4222 	mov.w	r2, r2, asr #16
 8004596:	d2ea      	bcs.n	800456e <quorem+0xce>
 8004598:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
 800459c:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
 80045a0:	b982      	cbnz	r2, 80045c4 <quorem+0x124>
 80045a2:	1f1a      	subs	r2, r3, #4
 80045a4:	4592      	cmp	sl, r2
 80045a6:	d20b      	bcs.n	80045c0 <quorem+0x120>
 80045a8:	f853 2c04 	ldr.w	r2, [r3, #-4]
 80045ac:	b942      	cbnz	r2, 80045c0 <quorem+0x120>
 80045ae:	3b08      	subs	r3, #8
 80045b0:	e002      	b.n	80045b8 <quorem+0x118>
 80045b2:	681a      	ldr	r2, [r3, #0]
 80045b4:	3b04      	subs	r3, #4
 80045b6:	b91a      	cbnz	r2, 80045c0 <quorem+0x120>
 80045b8:	459a      	cmp	sl, r3
 80045ba:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 80045be:	d3f8      	bcc.n	80045b2 <quorem+0x112>
 80045c0:	f8cb 5010 	str.w	r5, [fp, #16]
 80045c4:	4640      	mov	r0, r8
 80045c6:	b003      	add	sp, #12
 80045c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045cc:	0000      	movs	r0, r0
	...

080045d0 <_dtoa_r>:
 80045d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045d4:	b09b      	sub	sp, #108	; 0x6c
 80045d6:	4604      	mov	r4, r0
 80045d8:	9102      	str	r1, [sp, #8]
 80045da:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80045dc:	9d24      	ldr	r5, [sp, #144]	; 0x90
 80045de:	9205      	str	r2, [sp, #20]
 80045e0:	9306      	str	r3, [sp, #24]
 80045e2:	ec5b ab10 	vmov	sl, fp, d0
 80045e6:	b141      	cbz	r1, 80045fa <_dtoa_r+0x2a>
 80045e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80045ea:	2201      	movs	r2, #1
 80045ec:	409a      	lsls	r2, r3
 80045ee:	604b      	str	r3, [r1, #4]
 80045f0:	608a      	str	r2, [r1, #8]
 80045f2:	f001 fcbf 	bl	8005f74 <_Bfree>
 80045f6:	2300      	movs	r3, #0
 80045f8:	6423      	str	r3, [r4, #64]	; 0x40
 80045fa:	f1bb 0f00 	cmp.w	fp, #0
 80045fe:	bfb5      	itete	lt
 8004600:	2301      	movlt	r3, #1
 8004602:	2300      	movge	r3, #0
 8004604:	602b      	strlt	r3, [r5, #0]
 8004606:	602b      	strge	r3, [r5, #0]
 8004608:	f04f 0300 	mov.w	r3, #0
 800460c:	bfb4      	ite	lt
 800460e:	f02b 4900 	biclt.w	r9, fp, #2147483648	; 0x80000000
 8004612:	46d9      	movge	r9, fp
 8004614:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
 8004618:	f04f 0200 	mov.w	r2, #0
 800461c:	ea09 0303 	and.w	r3, r9, r3
 8004620:	f6c7 72f0 	movt	r2, #32752	; 0x7ff0
 8004624:	bfb8      	it	lt
 8004626:	46cb      	movlt	fp, r9
 8004628:	4293      	cmp	r3, r2
 800462a:	d016      	beq.n	800465a <_dtoa_r+0x8a>
 800462c:	2200      	movs	r2, #0
 800462e:	2300      	movs	r3, #0
 8004630:	4650      	mov	r0, sl
 8004632:	4659      	mov	r1, fp
 8004634:	f7fc fac6 	bl	8000bc4 <__aeabi_dcmpeq>
 8004638:	4656      	mov	r6, sl
 800463a:	465f      	mov	r7, fp
 800463c:	4680      	mov	r8, r0
 800463e:	b328      	cbz	r0, 800468c <_dtoa_r+0xbc>
 8004640:	9e06      	ldr	r6, [sp, #24]
 8004642:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8004644:	2301      	movs	r3, #1
 8004646:	6033      	str	r3, [r6, #0]
 8004648:	2d00      	cmp	r5, #0
 800464a:	f000 80db 	beq.w	8004804 <_dtoa_r+0x234>
 800464e:	48a8      	ldr	r0, [pc, #672]	; (80048f0 <_dtoa_r+0x320>)
 8004650:	6028      	str	r0, [r5, #0]
 8004652:	3801      	subs	r0, #1
 8004654:	b01b      	add	sp, #108	; 0x6c
 8004656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800465a:	9d06      	ldr	r5, [sp, #24]
 800465c:	f242 730f 	movw	r3, #9999	; 0x270f
 8004660:	f646 50ac 	movw	r0, #28076	; 0x6dac
 8004664:	602b      	str	r3, [r5, #0]
 8004666:	f6c0 0000 	movt	r0, #2048	; 0x800
 800466a:	f1ba 0f00 	cmp.w	sl, #0
 800466e:	f000 80a9 	beq.w	80047c4 <_dtoa_r+0x1f4>
 8004672:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8004674:	2e00      	cmp	r6, #0
 8004676:	d0ed      	beq.n	8004654 <_dtoa_r+0x84>
 8004678:	78c3      	ldrb	r3, [r0, #3]
 800467a:	2b00      	cmp	r3, #0
 800467c:	f040 80b1 	bne.w	80047e2 <_dtoa_r+0x212>
 8004680:	1cc3      	adds	r3, r0, #3
 8004682:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8004684:	602b      	str	r3, [r5, #0]
 8004686:	b01b      	add	sp, #108	; 0x6c
 8004688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800468c:	4620      	mov	r0, r4
 800468e:	ec47 6b10 	vmov	d0, r6, r7
 8004692:	a919      	add	r1, sp, #100	; 0x64
 8004694:	aa18      	add	r2, sp, #96	; 0x60
 8004696:	f001 fefd 	bl	8006494 <__d2b>
 800469a:	ea5f 5519 	movs.w	r5, r9, lsr #20
 800469e:	900b      	str	r0, [sp, #44]	; 0x2c
 80046a0:	f040 80a2 	bne.w	80047e8 <_dtoa_r+0x218>
 80046a4:	9f18      	ldr	r7, [sp, #96]	; 0x60
 80046a6:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80046a8:	f46f 6382 	mvn.w	r3, #1040	; 0x410
 80046ac:	443d      	add	r5, r7
 80046ae:	429d      	cmp	r5, r3
 80046b0:	f2c0 825c 	blt.w	8004b6c <_dtoa_r+0x59c>
 80046b4:	f64f 430e 	movw	r3, #64526	; 0xfc0e
 80046b8:	f6cf 73ff 	movt	r3, #65535	; 0xffff
 80046bc:	1b5b      	subs	r3, r3, r5
 80046be:	f205 4212 	addw	r2, r5, #1042	; 0x412
 80046c2:	fa09 f303 	lsl.w	r3, r9, r3
 80046c6:	fa2a f202 	lsr.w	r2, sl, r2
 80046ca:	ea43 0002 	orr.w	r0, r3, r2
 80046ce:	f7fb ff9b 	bl	8000608 <__aeabi_ui2d>
 80046d2:	2601      	movs	r6, #1
 80046d4:	3d01      	subs	r5, #1
 80046d6:	46b8      	mov	r8, r7
 80046d8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 80046dc:	9615      	str	r6, [sp, #84]	; 0x54
 80046de:	2300      	movs	r3, #0
 80046e0:	2200      	movs	r2, #0
 80046e2:	f6c3 73f8 	movt	r3, #16376	; 0x3ff8
 80046e6:	f7fb fe51 	bl	800038c <__aeabi_dsub>
 80046ea:	a37b      	add	r3, pc, #492	; (adr r3, 80048d8 <_dtoa_r+0x308>)
 80046ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046f0:	f7fc f800 	bl	80006f4 <__aeabi_dmul>
 80046f4:	a37a      	add	r3, pc, #488	; (adr r3, 80048e0 <_dtoa_r+0x310>)
 80046f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046fa:	f7fb fe49 	bl	8000390 <__adddf3>
 80046fe:	4606      	mov	r6, r0
 8004700:	4628      	mov	r0, r5
 8004702:	460f      	mov	r7, r1
 8004704:	f7fb ff90 	bl	8000628 <__aeabi_i2d>
 8004708:	a377      	add	r3, pc, #476	; (adr r3, 80048e8 <_dtoa_r+0x318>)
 800470a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800470e:	f7fb fff1 	bl	80006f4 <__aeabi_dmul>
 8004712:	4602      	mov	r2, r0
 8004714:	460b      	mov	r3, r1
 8004716:	4630      	mov	r0, r6
 8004718:	4639      	mov	r1, r7
 800471a:	f7fb fe39 	bl	8000390 <__adddf3>
 800471e:	4606      	mov	r6, r0
 8004720:	460f      	mov	r7, r1
 8004722:	f7fc fa81 	bl	8000c28 <__aeabi_d2iz>
 8004726:	4639      	mov	r1, r7
 8004728:	9004      	str	r0, [sp, #16]
 800472a:	2200      	movs	r2, #0
 800472c:	4630      	mov	r0, r6
 800472e:	2300      	movs	r3, #0
 8004730:	f7fc fa52 	bl	8000bd8 <__aeabi_dcmplt>
 8004734:	2800      	cmp	r0, #0
 8004736:	f040 8202 	bne.w	8004b3e <_dtoa_r+0x56e>
 800473a:	9e04      	ldr	r6, [sp, #16]
 800473c:	2e16      	cmp	r6, #22
 800473e:	bf84      	itt	hi
 8004740:	2601      	movhi	r6, #1
 8004742:	9614      	strhi	r6, [sp, #80]	; 0x50
 8004744:	d812      	bhi.n	800476c <_dtoa_r+0x19c>
 8004746:	f646 53c0 	movw	r3, #28096	; 0x6dc0
 800474a:	f6c0 0300 	movt	r3, #2048	; 0x800
 800474e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8004752:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004756:	4652      	mov	r2, sl
 8004758:	465b      	mov	r3, fp
 800475a:	f7fc fa5b 	bl	8000c14 <__aeabi_dcmpgt>
 800475e:	2800      	cmp	r0, #0
 8004760:	f000 820c 	beq.w	8004b7c <_dtoa_r+0x5ac>
 8004764:	3e01      	subs	r6, #1
 8004766:	9604      	str	r6, [sp, #16]
 8004768:	2600      	movs	r6, #0
 800476a:	9614      	str	r6, [sp, #80]	; 0x50
 800476c:	ebc5 0508 	rsb	r5, r5, r8
 8004770:	3d01      	subs	r5, #1
 8004772:	bf48      	it	mi
 8004774:	2600      	movmi	r6, #0
 8004776:	9508      	str	r5, [sp, #32]
 8004778:	bf48      	it	mi
 800477a:	9608      	strmi	r6, [sp, #32]
 800477c:	9e04      	ldr	r6, [sp, #16]
 800477e:	bf4b      	itete	mi
 8004780:	426d      	negmi	r5, r5
 8004782:	2500      	movpl	r5, #0
 8004784:	950a      	strmi	r5, [sp, #40]	; 0x28
 8004786:	950a      	strpl	r5, [sp, #40]	; 0x28
 8004788:	2e00      	cmp	r6, #0
 800478a:	f2c0 81e6 	blt.w	8004b5a <_dtoa_r+0x58a>
 800478e:	9d08      	ldr	r5, [sp, #32]
 8004790:	960f      	str	r6, [sp, #60]	; 0x3c
 8004792:	4435      	add	r5, r6
 8004794:	2600      	movs	r6, #0
 8004796:	9508      	str	r5, [sp, #32]
 8004798:	960c      	str	r6, [sp, #48]	; 0x30
 800479a:	9d02      	ldr	r5, [sp, #8]
 800479c:	2d09      	cmp	r5, #9
 800479e:	d836      	bhi.n	800480e <_dtoa_r+0x23e>
 80047a0:	2d05      	cmp	r5, #5
 80047a2:	bfc4      	itt	gt
 80047a4:	3d04      	subgt	r5, #4
 80047a6:	9502      	strgt	r5, [sp, #8]
 80047a8:	9e02      	ldr	r6, [sp, #8]
 80047aa:	f1a6 0302 	sub.w	r3, r6, #2
 80047ae:	bfcc      	ite	gt
 80047b0:	2500      	movgt	r5, #0
 80047b2:	2501      	movle	r5, #1
 80047b4:	2b03      	cmp	r3, #3
 80047b6:	d82c      	bhi.n	8004812 <_dtoa_r+0x242>
 80047b8:	e8df f013 	tbh	[pc, r3, lsl #1]
 80047bc:	02100342 	.word	0x02100342
 80047c0:	056c0350 	.word	0x056c0350
 80047c4:	f646 52a0 	movw	r2, #28064	; 0x6da0
 80047c8:	f646 53ac 	movw	r3, #28076	; 0x6dac
 80047cc:	f3c9 0013 	ubfx	r0, r9, #0, #20
 80047d0:	f6c0 0200 	movt	r2, #2048	; 0x800
 80047d4:	f6c0 0300 	movt	r3, #2048	; 0x800
 80047d8:	2800      	cmp	r0, #0
 80047da:	bf0c      	ite	eq
 80047dc:	4610      	moveq	r0, r2
 80047de:	4618      	movne	r0, r3
 80047e0:	e747      	b.n	8004672 <_dtoa_r+0xa2>
 80047e2:	f100 0308 	add.w	r3, r0, #8
 80047e6:	e74c      	b.n	8004682 <_dtoa_r+0xb2>
 80047e8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80047ec:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80047f0:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
 80047f4:	4650      	mov	r0, sl
 80047f6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80047fa:	f443 1140 	orr.w	r1, r3, #3145728	; 0x300000
 80047fe:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8004802:	e76c      	b.n	80046de <_dtoa_r+0x10e>
 8004804:	f646 508c 	movw	r0, #28044	; 0x6d8c
 8004808:	f6c0 0000 	movt	r0, #2048	; 0x800
 800480c:	e722      	b.n	8004654 <_dtoa_r+0x84>
 800480e:	2600      	movs	r6, #0
 8004810:	9602      	str	r6, [sp, #8]
 8004812:	2500      	movs	r5, #0
 8004814:	6465      	str	r5, [r4, #68]	; 0x44
 8004816:	4629      	mov	r1, r5
 8004818:	4620      	mov	r0, r4
 800481a:	f001 fb85 	bl	8005f28 <_Balloc>
 800481e:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8004822:	9505      	str	r5, [sp, #20]
 8004824:	2501      	movs	r5, #1
 8004826:	9007      	str	r0, [sp, #28]
 8004828:	960e      	str	r6, [sp, #56]	; 0x38
 800482a:	6420      	str	r0, [r4, #64]	; 0x40
 800482c:	9609      	str	r6, [sp, #36]	; 0x24
 800482e:	950d      	str	r5, [sp, #52]	; 0x34
 8004830:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004832:	2b00      	cmp	r3, #0
 8004834:	f2c0 80bb 	blt.w	80049ae <_dtoa_r+0x3de>
 8004838:	9e04      	ldr	r6, [sp, #16]
 800483a:	2e0e      	cmp	r6, #14
 800483c:	f300 80b7 	bgt.w	80049ae <_dtoa_r+0x3de>
 8004840:	f646 53c0 	movw	r3, #28096	; 0x6dc0
 8004844:	f6c0 0300 	movt	r3, #2048	; 0x800
 8004848:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800484c:	9d05      	ldr	r5, [sp, #20]
 800484e:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004850:	ed93 7b00 	vldr	d7, [r3]
 8004854:	0fea      	lsrs	r2, r5, #31
 8004856:	2e00      	cmp	r6, #0
 8004858:	bfcc      	ite	gt
 800485a:	2200      	movgt	r2, #0
 800485c:	f002 0201 	andle.w	r2, r2, #1
 8004860:	ed8d 7b02 	vstr	d7, [sp, #8]
 8004864:	2a00      	cmp	r2, #0
 8004866:	f040 844c 	bne.w	8005102 <_dtoa_r+0xb32>
 800486a:	ec53 2b17 	vmov	r2, r3, d7
 800486e:	4650      	mov	r0, sl
 8004870:	4659      	mov	r1, fp
 8004872:	f7fc f869 	bl	8000948 <__aeabi_ddiv>
 8004876:	f7fc f9d7 	bl	8000c28 <__aeabi_d2iz>
 800487a:	4680      	mov	r8, r0
 800487c:	f7fb fed4 	bl	8000628 <__aeabi_i2d>
 8004880:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004884:	f7fb ff36 	bl	80006f4 <__aeabi_dmul>
 8004888:	460b      	mov	r3, r1
 800488a:	4602      	mov	r2, r0
 800488c:	4659      	mov	r1, fp
 800488e:	4650      	mov	r0, sl
 8004890:	f7fb fd7c 	bl	800038c <__aeabi_dsub>
 8004894:	9d07      	ldr	r5, [sp, #28]
 8004896:	f108 0330 	add.w	r3, r8, #48	; 0x30
 800489a:	702b      	strb	r3, [r5, #0]
 800489c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800489e:	2b01      	cmp	r3, #1
 80048a0:	4606      	mov	r6, r0
 80048a2:	460f      	mov	r7, r1
 80048a4:	f105 0501 	add.w	r5, r5, #1
 80048a8:	d054      	beq.n	8004954 <_dtoa_r+0x384>
 80048aa:	2300      	movs	r3, #0
 80048ac:	2200      	movs	r2, #0
 80048ae:	f2c4 0324 	movt	r3, #16420	; 0x4024
 80048b2:	f7fb ff1f 	bl	80006f4 <__aeabi_dmul>
 80048b6:	2200      	movs	r2, #0
 80048b8:	2300      	movs	r3, #0
 80048ba:	4606      	mov	r6, r0
 80048bc:	460f      	mov	r7, r1
 80048be:	f7fc f981 	bl	8000bc4 <__aeabi_dcmpeq>
 80048c2:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80048c6:	2800      	cmp	r0, #0
 80048c8:	f040 84fe 	bne.w	80052c8 <_dtoa_r+0xcf8>
 80048cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80048ce:	44a9      	add	r9, r5
 80048d0:	9d07      	ldr	r5, [sp, #28]
 80048d2:	f105 0a02 	add.w	sl, r5, #2
 80048d6:	e018      	b.n	800490a <_dtoa_r+0x33a>
 80048d8:	636f4361 	.word	0x636f4361
 80048dc:	3fd287a7 	.word	0x3fd287a7
 80048e0:	8b60c8b3 	.word	0x8b60c8b3
 80048e4:	3fc68a28 	.word	0x3fc68a28
 80048e8:	509f79fb 	.word	0x509f79fb
 80048ec:	3fd34413 	.word	0x3fd34413
 80048f0:	08006d8d 	.word	0x08006d8d
 80048f4:	f7fb fefe 	bl	80006f4 <__aeabi_dmul>
 80048f8:	2200      	movs	r2, #0
 80048fa:	2300      	movs	r3, #0
 80048fc:	4606      	mov	r6, r0
 80048fe:	460f      	mov	r7, r1
 8004900:	f7fc f960 	bl	8000bc4 <__aeabi_dcmpeq>
 8004904:	2800      	cmp	r0, #0
 8004906:	f040 84dd 	bne.w	80052c4 <_dtoa_r+0xcf4>
 800490a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800490e:	4630      	mov	r0, r6
 8004910:	4639      	mov	r1, r7
 8004912:	f7fc f819 	bl	8000948 <__aeabi_ddiv>
 8004916:	f7fc f987 	bl	8000c28 <__aeabi_d2iz>
 800491a:	4680      	mov	r8, r0
 800491c:	f7fb fe84 	bl	8000628 <__aeabi_i2d>
 8004920:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004924:	f7fb fee6 	bl	80006f4 <__aeabi_dmul>
 8004928:	4602      	mov	r2, r0
 800492a:	460b      	mov	r3, r1
 800492c:	4630      	mov	r0, r6
 800492e:	4639      	mov	r1, r7
 8004930:	f7fb fd2c 	bl	800038c <__aeabi_dsub>
 8004934:	f108 0530 	add.w	r5, r8, #48	; 0x30
 8004938:	2300      	movs	r3, #0
 800493a:	45ca      	cmp	sl, r9
 800493c:	f80a 5c01 	strb.w	r5, [sl, #-1]
 8004940:	4606      	mov	r6, r0
 8004942:	4655      	mov	r5, sl
 8004944:	460f      	mov	r7, r1
 8004946:	f04f 0200 	mov.w	r2, #0
 800494a:	f2c4 0324 	movt	r3, #16420	; 0x4024
 800494e:	f10a 0a01 	add.w	sl, sl, #1
 8004952:	d1cf      	bne.n	80048f4 <_dtoa_r+0x324>
 8004954:	4632      	mov	r2, r6
 8004956:	463b      	mov	r3, r7
 8004958:	4630      	mov	r0, r6
 800495a:	4639      	mov	r1, r7
 800495c:	f7fb fd18 	bl	8000390 <__adddf3>
 8004960:	4606      	mov	r6, r0
 8004962:	460f      	mov	r7, r1
 8004964:	4632      	mov	r2, r6
 8004966:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800496a:	463b      	mov	r3, r7
 800496c:	f7fc f934 	bl	8000bd8 <__aeabi_dcmplt>
 8004970:	2800      	cmp	r0, #0
 8004972:	f000 8560 	beq.w	8005436 <_dtoa_r+0xe66>
 8004976:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800497a:	9e04      	ldr	r6, [sp, #16]
 800497c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
 8004980:	9616      	str	r6, [sp, #88]	; 0x58
 8004982:	9507      	str	r5, [sp, #28]
 8004984:	462a      	mov	r2, r5
 8004986:	e005      	b.n	8004994 <_dtoa_r+0x3c4>
 8004988:	4599      	cmp	r9, r3
 800498a:	f000 84cf 	beq.w	800532c <_dtoa_r+0xd5c>
 800498e:	f813 8c01 	ldrb.w	r8, [r3, #-1]
 8004992:	461a      	mov	r2, r3
 8004994:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004998:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 800499c:	d0f4      	beq.n	8004988 <_dtoa_r+0x3b8>
 800499e:	9207      	str	r2, [sp, #28]
 80049a0:	9e16      	ldr	r6, [sp, #88]	; 0x58
 80049a2:	f108 0201 	add.w	r2, r8, #1
 80049a6:	b2d2      	uxtb	r2, r2
 80049a8:	9604      	str	r6, [sp, #16]
 80049aa:	701a      	strb	r2, [r3, #0]
 80049ac:	e0b1      	b.n	8004b12 <_dtoa_r+0x542>
 80049ae:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80049b0:	2d00      	cmp	r5, #0
 80049b2:	f040 80e5 	bne.w	8004b80 <_dtoa_r+0x5b0>
 80049b6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80049b8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80049ba:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 80049be:	9908      	ldr	r1, [sp, #32]
 80049c0:	2900      	cmp	r1, #0
 80049c2:	bfc8      	it	gt
 80049c4:	2d00      	cmpgt	r5, #0
 80049c6:	dd09      	ble.n	80049dc <_dtoa_r+0x40c>
 80049c8:	460b      	mov	r3, r1
 80049ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80049cc:	42ab      	cmp	r3, r5
 80049ce:	bfa8      	it	ge
 80049d0:	462b      	movge	r3, r5
 80049d2:	1ad2      	subs	r2, r2, r3
 80049d4:	1ac9      	subs	r1, r1, r3
 80049d6:	920a      	str	r2, [sp, #40]	; 0x28
 80049d8:	1aed      	subs	r5, r5, r3
 80049da:	9108      	str	r1, [sp, #32]
 80049dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80049de:	2b00      	cmp	r3, #0
 80049e0:	dd1a      	ble.n	8004a18 <_dtoa_r+0x448>
 80049e2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80049e4:	2900      	cmp	r1, #0
 80049e6:	f000 8465 	beq.w	80052b4 <_dtoa_r+0xce4>
 80049ea:	2e00      	cmp	r6, #0
 80049ec:	dd10      	ble.n	8004a10 <_dtoa_r+0x440>
 80049ee:	4641      	mov	r1, r8
 80049f0:	4632      	mov	r2, r6
 80049f2:	4620      	mov	r0, r4
 80049f4:	f001 fc14 	bl	8006220 <__pow5mult>
 80049f8:	4680      	mov	r8, r0
 80049fa:	4641      	mov	r1, r8
 80049fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80049fe:	4620      	mov	r0, r4
 8004a00:	f001 fb64 	bl	80060cc <__multiply>
 8004a04:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004a06:	4607      	mov	r7, r0
 8004a08:	4620      	mov	r0, r4
 8004a0a:	f001 fab3 	bl	8005f74 <_Bfree>
 8004a0e:	970b      	str	r7, [sp, #44]	; 0x2c
 8004a10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004a12:	1b9a      	subs	r2, r3, r6
 8004a14:	f040 8495 	bne.w	8005342 <_dtoa_r+0xd72>
 8004a18:	2101      	movs	r1, #1
 8004a1a:	4620      	mov	r0, r4
 8004a1c:	f001 fb4c 	bl	80060b8 <__i2b>
 8004a20:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004a22:	2900      	cmp	r1, #0
 8004a24:	4606      	mov	r6, r0
 8004a26:	dd05      	ble.n	8004a34 <_dtoa_r+0x464>
 8004a28:	4601      	mov	r1, r0
 8004a2a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004a2c:	4620      	mov	r0, r4
 8004a2e:	f001 fbf7 	bl	8006220 <__pow5mult>
 8004a32:	4606      	mov	r6, r0
 8004a34:	9a02      	ldr	r2, [sp, #8]
 8004a36:	2a01      	cmp	r2, #1
 8004a38:	f340 8379 	ble.w	800512e <_dtoa_r+0xb5e>
 8004a3c:	2700      	movs	r7, #0
 8004a3e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004a40:	2001      	movs	r0, #1
 8004a42:	2900      	cmp	r1, #0
 8004a44:	f040 8333 	bne.w	80050ae <_dtoa_r+0xade>
 8004a48:	9b08      	ldr	r3, [sp, #32]
 8004a4a:	4403      	add	r3, r0
 8004a4c:	f013 031f 	ands.w	r3, r3, #31
 8004a50:	f000 8286 	beq.w	8004f60 <_dtoa_r+0x990>
 8004a54:	f1c3 0220 	rsb	r2, r3, #32
 8004a58:	2a04      	cmp	r2, #4
 8004a5a:	f340 855b 	ble.w	8005514 <_dtoa_r+0xf44>
 8004a5e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004a60:	f8dd e020 	ldr.w	lr, [sp, #32]
 8004a64:	f1c3 031c 	rsb	r3, r3, #28
 8004a68:	441a      	add	r2, r3
 8004a6a:	449e      	add	lr, r3
 8004a6c:	920a      	str	r2, [sp, #40]	; 0x28
 8004a6e:	441d      	add	r5, r3
 8004a70:	f8cd e020 	str.w	lr, [sp, #32]
 8004a74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	dd05      	ble.n	8004a86 <_dtoa_r+0x4b6>
 8004a7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004a7c:	461a      	mov	r2, r3
 8004a7e:	4620      	mov	r0, r4
 8004a80:	f001 fc1e 	bl	80062c0 <__lshift>
 8004a84:	900b      	str	r0, [sp, #44]	; 0x2c
 8004a86:	9908      	ldr	r1, [sp, #32]
 8004a88:	2900      	cmp	r1, #0
 8004a8a:	dd05      	ble.n	8004a98 <_dtoa_r+0x4c8>
 8004a8c:	4631      	mov	r1, r6
 8004a8e:	9a08      	ldr	r2, [sp, #32]
 8004a90:	4620      	mov	r0, r4
 8004a92:	f001 fc15 	bl	80062c0 <__lshift>
 8004a96:	4606      	mov	r6, r0
 8004a98:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004a9a:	2a00      	cmp	r2, #0
 8004a9c:	f040 8310 	bne.w	80050c0 <_dtoa_r+0xaf0>
 8004aa0:	9a02      	ldr	r2, [sp, #8]
 8004aa2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004aa4:	2a02      	cmp	r2, #2
 8004aa6:	bfd4      	ite	le
 8004aa8:	2300      	movle	r3, #0
 8004aaa:	2301      	movgt	r3, #1
 8004aac:	2900      	cmp	r1, #0
 8004aae:	bfc8      	it	gt
 8004ab0:	2300      	movgt	r3, #0
 8004ab2:	2b00      	cmp	r3, #0
 8004ab4:	f000 820a 	beq.w	8004ecc <_dtoa_r+0x8fc>
 8004ab8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004aba:	2d00      	cmp	r5, #0
 8004abc:	f040 81ff 	bne.w	8004ebe <_dtoa_r+0x8ee>
 8004ac0:	4631      	mov	r1, r6
 8004ac2:	462b      	mov	r3, r5
 8004ac4:	2205      	movs	r2, #5
 8004ac6:	4620      	mov	r0, r4
 8004ac8:	f001 fa5e 	bl	8005f88 <__multadd>
 8004acc:	4606      	mov	r6, r0
 8004ace:	4631      	mov	r1, r6
 8004ad0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004ad2:	f001 fc53 	bl	800637c <__mcmp>
 8004ad6:	2800      	cmp	r0, #0
 8004ad8:	f340 81f1 	ble.w	8004ebe <_dtoa_r+0x8ee>
 8004adc:	9d04      	ldr	r5, [sp, #16]
 8004ade:	3501      	adds	r5, #1
 8004ae0:	9504      	str	r5, [sp, #16]
 8004ae2:	9d07      	ldr	r5, [sp, #28]
 8004ae4:	46a9      	mov	r9, r5
 8004ae6:	2331      	movs	r3, #49	; 0x31
 8004ae8:	f109 0101 	add.w	r1, r9, #1
 8004aec:	702b      	strb	r3, [r5, #0]
 8004aee:	9107      	str	r1, [sp, #28]
 8004af0:	2500      	movs	r5, #0
 8004af2:	4631      	mov	r1, r6
 8004af4:	4620      	mov	r0, r4
 8004af6:	f001 fa3d 	bl	8005f74 <_Bfree>
 8004afa:	f1b8 0f00 	cmp.w	r8, #0
 8004afe:	d008      	beq.n	8004b12 <_dtoa_r+0x542>
 8004b00:	4545      	cmp	r5, r8
 8004b02:	bf18      	it	ne
 8004b04:	2d00      	cmpne	r5, #0
 8004b06:	f040 8239 	bne.w	8004f7c <_dtoa_r+0x9ac>
 8004b0a:	4641      	mov	r1, r8
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	f001 fa31 	bl	8005f74 <_Bfree>
 8004b12:	4620      	mov	r0, r4
 8004b14:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004b16:	f001 fa2d 	bl	8005f74 <_Bfree>
 8004b1a:	9e04      	ldr	r6, [sp, #16]
 8004b1c:	9d07      	ldr	r5, [sp, #28]
 8004b1e:	2200      	movs	r2, #0
 8004b20:	1c73      	adds	r3, r6, #1
 8004b22:	702a      	strb	r2, [r5, #0]
 8004b24:	9e06      	ldr	r6, [sp, #24]
 8004b26:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8004b28:	6033      	str	r3, [r6, #0]
 8004b2a:	4648      	mov	r0, r9
 8004b2c:	2d00      	cmp	r5, #0
 8004b2e:	f43f ad91 	beq.w	8004654 <_dtoa_r+0x84>
 8004b32:	9e07      	ldr	r6, [sp, #28]
 8004b34:	4648      	mov	r0, r9
 8004b36:	602e      	str	r6, [r5, #0]
 8004b38:	b01b      	add	sp, #108	; 0x6c
 8004b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004b3e:	9804      	ldr	r0, [sp, #16]
 8004b40:	f7fb fd72 	bl	8000628 <__aeabi_i2d>
 8004b44:	4632      	mov	r2, r6
 8004b46:	463b      	mov	r3, r7
 8004b48:	f7fc f83c 	bl	8000bc4 <__aeabi_dcmpeq>
 8004b4c:	2800      	cmp	r0, #0
 8004b4e:	f47f adf4 	bne.w	800473a <_dtoa_r+0x16a>
 8004b52:	9e04      	ldr	r6, [sp, #16]
 8004b54:	3e01      	subs	r6, #1
 8004b56:	9604      	str	r6, [sp, #16]
 8004b58:	e5ef      	b.n	800473a <_dtoa_r+0x16a>
 8004b5a:	9e04      	ldr	r6, [sp, #16]
 8004b5c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004b5e:	1bad      	subs	r5, r5, r6
 8004b60:	950a      	str	r5, [sp, #40]	; 0x28
 8004b62:	4275      	negs	r5, r6
 8004b64:	2600      	movs	r6, #0
 8004b66:	950c      	str	r5, [sp, #48]	; 0x30
 8004b68:	960f      	str	r6, [sp, #60]	; 0x3c
 8004b6a:	e616      	b.n	800479a <_dtoa_r+0x1ca>
 8004b6c:	f64f 30ee 	movw	r0, #64494	; 0xfbee
 8004b70:	f6cf 70ff 	movt	r0, #65535	; 0xffff
 8004b74:	1b40      	subs	r0, r0, r5
 8004b76:	fa0a f000 	lsl.w	r0, sl, r0
 8004b7a:	e5a8      	b.n	80046ce <_dtoa_r+0xfe>
 8004b7c:	9014      	str	r0, [sp, #80]	; 0x50
 8004b7e:	e5f5      	b.n	800476c <_dtoa_r+0x19c>
 8004b80:	9e02      	ldr	r6, [sp, #8]
 8004b82:	2e01      	cmp	r6, #1
 8004b84:	f340 840f 	ble.w	80053a6 <_dtoa_r+0xdd6>
 8004b88:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004b8a:	1e6e      	subs	r6, r5, #1
 8004b8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004b8e:	42b5      	cmp	r5, r6
 8004b90:	bfbf      	itttt	lt
 8004b92:	9d0c      	ldrlt	r5, [sp, #48]	; 0x30
 8004b94:	960c      	strlt	r6, [sp, #48]	; 0x30
 8004b96:	ebc5 0306 	rsblt	r3, r5, r6
 8004b9a:	9d0f      	ldrlt	r5, [sp, #60]	; 0x3c
 8004b9c:	bfb6      	itet	lt
 8004b9e:	18ed      	addlt	r5, r5, r3
 8004ba0:	ebc6 0605 	rsbge	r6, r6, r5
 8004ba4:	950f      	strlt	r5, [sp, #60]	; 0x3c
 8004ba6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004ba8:	bfb8      	it	lt
 8004baa:	2600      	movlt	r6, #0
 8004bac:	2d00      	cmp	r5, #0
 8004bae:	bfb3      	iteet	lt
 8004bb0:	f8dd e028 	ldrlt.w	lr, [sp, #40]	; 0x28
 8004bb4:	9d0a      	ldrge	r5, [sp, #40]	; 0x28
 8004bb6:	9b09      	ldrge	r3, [sp, #36]	; 0x24
 8004bb8:	ebc5 050e 	rsblt	r5, r5, lr
 8004bbc:	bfb8      	it	lt
 8004bbe:	2300      	movlt	r3, #0
 8004bc0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004bc2:	f8dd e020 	ldr.w	lr, [sp, #32]
 8004bc6:	441a      	add	r2, r3
 8004bc8:	449e      	add	lr, r3
 8004bca:	4620      	mov	r0, r4
 8004bcc:	2101      	movs	r1, #1
 8004bce:	920a      	str	r2, [sp, #40]	; 0x28
 8004bd0:	f8cd e020 	str.w	lr, [sp, #32]
 8004bd4:	f001 fa70 	bl	80060b8 <__i2b>
 8004bd8:	4680      	mov	r8, r0
 8004bda:	e6f0      	b.n	80049be <_dtoa_r+0x3ee>
 8004bdc:	2600      	movs	r6, #0
 8004bde:	960d      	str	r6, [sp, #52]	; 0x34
 8004be0:	9e05      	ldr	r6, [sp, #20]
 8004be2:	f8dd e010 	ldr.w	lr, [sp, #16]
 8004be6:	4476      	add	r6, lr
 8004be8:	960e      	str	r6, [sp, #56]	; 0x38
 8004bea:	3601      	adds	r6, #1
 8004bec:	2e00      	cmp	r6, #0
 8004bee:	9609      	str	r6, [sp, #36]	; 0x24
 8004bf0:	f340 8353 	ble.w	800529a <_dtoa_r+0xcca>
 8004bf4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004bf6:	2e0e      	cmp	r6, #14
 8004bf8:	bf8c      	ite	hi
 8004bfa:	2500      	movhi	r5, #0
 8004bfc:	f005 0501 	andls.w	r5, r5, #1
 8004c00:	2100      	movs	r1, #0
 8004c02:	2e17      	cmp	r6, #23
 8004c04:	6461      	str	r1, [r4, #68]	; 0x44
 8004c06:	d90a      	bls.n	8004c1e <_dtoa_r+0x64e>
 8004c08:	2201      	movs	r2, #1
 8004c0a:	2304      	movs	r3, #4
 8004c0c:	005b      	lsls	r3, r3, #1
 8004c0e:	f103 0014 	add.w	r0, r3, #20
 8004c12:	42b0      	cmp	r0, r6
 8004c14:	4611      	mov	r1, r2
 8004c16:	f102 0201 	add.w	r2, r2, #1
 8004c1a:	d9f7      	bls.n	8004c0c <_dtoa_r+0x63c>
 8004c1c:	6461      	str	r1, [r4, #68]	; 0x44
 8004c1e:	4620      	mov	r0, r4
 8004c20:	f001 f982 	bl	8005f28 <_Balloc>
 8004c24:	9007      	str	r0, [sp, #28]
 8004c26:	6420      	str	r0, [r4, #64]	; 0x40
 8004c28:	2d00      	cmp	r5, #0
 8004c2a:	f43f ae01 	beq.w	8004830 <_dtoa_r+0x260>
 8004c2e:	9d04      	ldr	r5, [sp, #16]
 8004c30:	2d00      	cmp	r5, #0
 8004c32:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
 8004c36:	f340 81aa 	ble.w	8004f8e <_dtoa_r+0x9be>
 8004c3a:	f646 53c0 	movw	r3, #28096	; 0x6dc0
 8004c3e:	f005 020f 	and.w	r2, r5, #15
 8004c42:	f6c0 0300 	movt	r3, #2048	; 0x800
 8004c46:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004c4a:	112d      	asrs	r5, r5, #4
 8004c4c:	e9d3 6700 	ldrd	r6, r7, [r3]
 8004c50:	06eb      	lsls	r3, r5, #27
 8004c52:	f140 818e 	bpl.w	8004f72 <_dtoa_r+0x9a2>
 8004c56:	f646 6388 	movw	r3, #28296	; 0x6e88
 8004c5a:	f6c0 0300 	movt	r3, #2048	; 0x800
 8004c5e:	4650      	mov	r0, sl
 8004c60:	4659      	mov	r1, fp
 8004c62:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004c66:	f7fb fe6f 	bl	8000948 <__aeabi_ddiv>
 8004c6a:	f005 050f 	and.w	r5, r5, #15
 8004c6e:	4682      	mov	sl, r0
 8004c70:	468b      	mov	fp, r1
 8004c72:	f04f 0803 	mov.w	r8, #3
 8004c76:	b19d      	cbz	r5, 8004ca0 <_dtoa_r+0x6d0>
 8004c78:	f646 6988 	movw	r9, #28296	; 0x6e88
 8004c7c:	f6c0 0900 	movt	r9, #2048	; 0x800
 8004c80:	4630      	mov	r0, r6
 8004c82:	4639      	mov	r1, r7
 8004c84:	07ef      	lsls	r7, r5, #31
 8004c86:	d505      	bpl.n	8004c94 <_dtoa_r+0x6c4>
 8004c88:	e9d9 2300 	ldrd	r2, r3, [r9]
 8004c8c:	f7fb fd32 	bl	80006f4 <__aeabi_dmul>
 8004c90:	f108 0801 	add.w	r8, r8, #1
 8004c94:	106d      	asrs	r5, r5, #1
 8004c96:	f109 0908 	add.w	r9, r9, #8
 8004c9a:	d1f3      	bne.n	8004c84 <_dtoa_r+0x6b4>
 8004c9c:	4606      	mov	r6, r0
 8004c9e:	460f      	mov	r7, r1
 8004ca0:	4632      	mov	r2, r6
 8004ca2:	463b      	mov	r3, r7
 8004ca4:	4650      	mov	r0, sl
 8004ca6:	4659      	mov	r1, fp
 8004ca8:	f7fb fe4e 	bl	8000948 <__aeabi_ddiv>
 8004cac:	4606      	mov	r6, r0
 8004cae:	460f      	mov	r7, r1
 8004cb0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004cb2:	b155      	cbz	r5, 8004cca <_dtoa_r+0x6fa>
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	4630      	mov	r0, r6
 8004cb8:	4639      	mov	r1, r7
 8004cba:	2200      	movs	r2, #0
 8004cbc:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
 8004cc0:	f7fb ff8a 	bl	8000bd8 <__aeabi_dcmplt>
 8004cc4:	2800      	cmp	r0, #0
 8004cc6:	f040 8306 	bne.w	80052d6 <_dtoa_r+0xd06>
 8004cca:	4640      	mov	r0, r8
 8004ccc:	f7fb fcac 	bl	8000628 <__aeabi_i2d>
 8004cd0:	4632      	mov	r2, r6
 8004cd2:	463b      	mov	r3, r7
 8004cd4:	f7fb fd0e 	bl	80006f4 <__aeabi_dmul>
 8004cd8:	2300      	movs	r3, #0
 8004cda:	2200      	movs	r2, #0
 8004cdc:	f2c4 031c 	movt	r3, #16412	; 0x401c
 8004ce0:	f7fb fb56 	bl	8000390 <__adddf3>
 8004ce4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004ce6:	4680      	mov	r8, r0
 8004ce8:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 8004cec:	2d00      	cmp	r5, #0
 8004cee:	f000 80ca 	beq.w	8004e86 <_dtoa_r+0x8b6>
 8004cf2:	9d04      	ldr	r5, [sp, #16]
 8004cf4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8004cf8:	9516      	str	r5, [sp, #88]	; 0x58
 8004cfa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8004cfc:	f646 53c0 	movw	r3, #28096	; 0x6dc0
 8004d00:	f6c0 0300 	movt	r3, #2048	; 0x800
 8004d04:	2d00      	cmp	r5, #0
 8004d06:	f000 816f 	beq.w	8004fe8 <_dtoa_r+0xa18>
 8004d0a:	eb03 03cc 	add.w	r3, r3, ip, lsl #3
 8004d0e:	2100      	movs	r1, #0
 8004d10:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8004d14:	2000      	movs	r0, #0
 8004d16:	f6c3 71e0 	movt	r1, #16352	; 0x3fe0
 8004d1a:	f8cd c004 	str.w	ip, [sp, #4]
 8004d1e:	f7fb fe13 	bl	8000948 <__aeabi_ddiv>
 8004d22:	4642      	mov	r2, r8
 8004d24:	464b      	mov	r3, r9
 8004d26:	f7fb fb31 	bl	800038c <__aeabi_dsub>
 8004d2a:	4682      	mov	sl, r0
 8004d2c:	468b      	mov	fp, r1
 8004d2e:	4630      	mov	r0, r6
 8004d30:	4639      	mov	r1, r7
 8004d32:	f7fb ff79 	bl	8000c28 <__aeabi_d2iz>
 8004d36:	4605      	mov	r5, r0
 8004d38:	f7fb fc76 	bl	8000628 <__aeabi_i2d>
 8004d3c:	4602      	mov	r2, r0
 8004d3e:	460b      	mov	r3, r1
 8004d40:	4630      	mov	r0, r6
 8004d42:	4639      	mov	r1, r7
 8004d44:	f7fb fb22 	bl	800038c <__aeabi_dsub>
 8004d48:	3530      	adds	r5, #48	; 0x30
 8004d4a:	fa5f f885 	uxtb.w	r8, r5
 8004d4e:	9d07      	ldr	r5, [sp, #28]
 8004d50:	4606      	mov	r6, r0
 8004d52:	460f      	mov	r7, r1
 8004d54:	f885 8000 	strb.w	r8, [r5]
 8004d58:	4650      	mov	r0, sl
 8004d5a:	3501      	adds	r5, #1
 8004d5c:	4659      	mov	r1, fp
 8004d5e:	4632      	mov	r2, r6
 8004d60:	463b      	mov	r3, r7
 8004d62:	9500      	str	r5, [sp, #0]
 8004d64:	f7fb ff56 	bl	8000c14 <__aeabi_dcmpgt>
 8004d68:	2800      	cmp	r0, #0
 8004d6a:	d162      	bne.n	8004e32 <_dtoa_r+0x862>
 8004d6c:	2100      	movs	r1, #0
 8004d6e:	4632      	mov	r2, r6
 8004d70:	463b      	mov	r3, r7
 8004d72:	2000      	movs	r0, #0
 8004d74:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
 8004d78:	f7fb fb08 	bl	800038c <__aeabi_dsub>
 8004d7c:	4602      	mov	r2, r0
 8004d7e:	460b      	mov	r3, r1
 8004d80:	4650      	mov	r0, sl
 8004d82:	4659      	mov	r1, fp
 8004d84:	f7fb ff46 	bl	8000c14 <__aeabi_dcmpgt>
 8004d88:	f8dd c004 	ldr.w	ip, [sp, #4]
 8004d8c:	2800      	cmp	r0, #0
 8004d8e:	f040 83b6 	bne.w	80054fe <_dtoa_r+0xf2e>
 8004d92:	f1bc 0f01 	cmp.w	ip, #1
 8004d96:	f340 80f7 	ble.w	8004f88 <_dtoa_r+0x9b8>
 8004d9a:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8004d9e:	9417      	str	r4, [sp, #92]	; 0x5c
 8004da0:	44e1      	add	r9, ip
 8004da2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8004da6:	f8dd 9000 	ldr.w	r9, [sp]
 8004daa:	e010      	b.n	8004dce <_dtoa_r+0x7fe>
 8004dac:	2100      	movs	r1, #0
 8004dae:	2000      	movs	r0, #0
 8004db0:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
 8004db4:	f7fb faea 	bl	800038c <__aeabi_dsub>
 8004db8:	4652      	mov	r2, sl
 8004dba:	465b      	mov	r3, fp
 8004dbc:	f7fb ff0c 	bl	8000bd8 <__aeabi_dcmplt>
 8004dc0:	2800      	cmp	r0, #0
 8004dc2:	f040 831c 	bne.w	80053fe <_dtoa_r+0xe2e>
 8004dc6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8004dc8:	45a9      	cmp	r9, r5
 8004dca:	f000 80dc 	beq.w	8004f86 <_dtoa_r+0x9b6>
 8004dce:	2300      	movs	r3, #0
 8004dd0:	4650      	mov	r0, sl
 8004dd2:	4659      	mov	r1, fp
 8004dd4:	2200      	movs	r2, #0
 8004dd6:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8004dda:	f7fb fc8b 	bl	80006f4 <__aeabi_dmul>
 8004dde:	2300      	movs	r3, #0
 8004de0:	2200      	movs	r2, #0
 8004de2:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8004de6:	4682      	mov	sl, r0
 8004de8:	468b      	mov	fp, r1
 8004dea:	4630      	mov	r0, r6
 8004dec:	4639      	mov	r1, r7
 8004dee:	f7fb fc81 	bl	80006f4 <__aeabi_dmul>
 8004df2:	460d      	mov	r5, r1
 8004df4:	4604      	mov	r4, r0
 8004df6:	f7fb ff17 	bl	8000c28 <__aeabi_d2iz>
 8004dfa:	4680      	mov	r8, r0
 8004dfc:	f7fb fc14 	bl	8000628 <__aeabi_i2d>
 8004e00:	4602      	mov	r2, r0
 8004e02:	460b      	mov	r3, r1
 8004e04:	4620      	mov	r0, r4
 8004e06:	4629      	mov	r1, r5
 8004e08:	f7fb fac0 	bl	800038c <__aeabi_dsub>
 8004e0c:	f108 0830 	add.w	r8, r8, #48	; 0x30
 8004e10:	fa5f f888 	uxtb.w	r8, r8
 8004e14:	4652      	mov	r2, sl
 8004e16:	465b      	mov	r3, fp
 8004e18:	f809 8b01 	strb.w	r8, [r9], #1
 8004e1c:	4606      	mov	r6, r0
 8004e1e:	460f      	mov	r7, r1
 8004e20:	f7fb feda 	bl	8000bd8 <__aeabi_dcmplt>
 8004e24:	4632      	mov	r2, r6
 8004e26:	463b      	mov	r3, r7
 8004e28:	2800      	cmp	r0, #0
 8004e2a:	d0bf      	beq.n	8004dac <_dtoa_r+0x7dc>
 8004e2c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8004e2e:	f8cd 9000 	str.w	r9, [sp]
 8004e32:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8004e34:	9e00      	ldr	r6, [sp, #0]
 8004e36:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8004e3a:	9504      	str	r5, [sp, #16]
 8004e3c:	9607      	str	r6, [sp, #28]
 8004e3e:	e668      	b.n	8004b12 <_dtoa_r+0x542>
 8004e40:	2600      	movs	r6, #0
 8004e42:	960d      	str	r6, [sp, #52]	; 0x34
 8004e44:	9e05      	ldr	r6, [sp, #20]
 8004e46:	2e00      	cmp	r6, #0
 8004e48:	f340 822f 	ble.w	80052aa <_dtoa_r+0xcda>
 8004e4c:	2e0e      	cmp	r6, #14
 8004e4e:	bf8c      	ite	hi
 8004e50:	2500      	movhi	r5, #0
 8004e52:	f005 0501 	andls.w	r5, r5, #1
 8004e56:	960e      	str	r6, [sp, #56]	; 0x38
 8004e58:	9609      	str	r6, [sp, #36]	; 0x24
 8004e5a:	e6d1      	b.n	8004c00 <_dtoa_r+0x630>
 8004e5c:	2601      	movs	r6, #1
 8004e5e:	960d      	str	r6, [sp, #52]	; 0x34
 8004e60:	e7f0      	b.n	8004e44 <_dtoa_r+0x874>
 8004e62:	4640      	mov	r0, r8
 8004e64:	f7fb fbe0 	bl	8000628 <__aeabi_i2d>
 8004e68:	4602      	mov	r2, r0
 8004e6a:	460b      	mov	r3, r1
 8004e6c:	4630      	mov	r0, r6
 8004e6e:	4639      	mov	r1, r7
 8004e70:	f7fb fc40 	bl	80006f4 <__aeabi_dmul>
 8004e74:	2300      	movs	r3, #0
 8004e76:	2200      	movs	r2, #0
 8004e78:	f2c4 031c 	movt	r3, #16412	; 0x401c
 8004e7c:	f7fb fa88 	bl	8000390 <__adddf3>
 8004e80:	4680      	mov	r8, r0
 8004e82:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 8004e86:	2300      	movs	r3, #0
 8004e88:	4630      	mov	r0, r6
 8004e8a:	2200      	movs	r2, #0
 8004e8c:	f2c4 0314 	movt	r3, #16404	; 0x4014
 8004e90:	4639      	mov	r1, r7
 8004e92:	f7fb fa7b 	bl	800038c <__aeabi_dsub>
 8004e96:	4642      	mov	r2, r8
 8004e98:	464b      	mov	r3, r9
 8004e9a:	4682      	mov	sl, r0
 8004e9c:	468b      	mov	fp, r1
 8004e9e:	f7fb feb9 	bl	8000c14 <__aeabi_dcmpgt>
 8004ea2:	4606      	mov	r6, r0
 8004ea4:	2800      	cmp	r0, #0
 8004ea6:	f040 80ff 	bne.w	80050a8 <_dtoa_r+0xad8>
 8004eaa:	4642      	mov	r2, r8
 8004eac:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8004eb0:	4650      	mov	r0, sl
 8004eb2:	4659      	mov	r1, fp
 8004eb4:	f7fb fe90 	bl	8000bd8 <__aeabi_dcmplt>
 8004eb8:	2800      	cmp	r0, #0
 8004eba:	d065      	beq.n	8004f88 <_dtoa_r+0x9b8>
 8004ebc:	46b0      	mov	r8, r6
 8004ebe:	9d05      	ldr	r5, [sp, #20]
 8004ec0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8004ec4:	43ed      	mvns	r5, r5
 8004ec6:	9504      	str	r5, [sp, #16]
 8004ec8:	2500      	movs	r5, #0
 8004eca:	e612      	b.n	8004af2 <_dtoa_r+0x522>
 8004ecc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004ece:	2a00      	cmp	r2, #0
 8004ed0:	f040 815f 	bne.w	8005192 <_dtoa_r+0xbc2>
 8004ed4:	2500      	movs	r5, #0
 8004ed6:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
 8004eda:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8004ede:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8004ee2:	e006      	b.n	8004ef2 <_dtoa_r+0x922>
 8004ee4:	4649      	mov	r1, r9
 8004ee6:	4620      	mov	r0, r4
 8004ee8:	220a      	movs	r2, #10
 8004eea:	2300      	movs	r3, #0
 8004eec:	f001 f84c 	bl	8005f88 <__multadd>
 8004ef0:	4681      	mov	r9, r0
 8004ef2:	4648      	mov	r0, r9
 8004ef4:	4631      	mov	r1, r6
 8004ef6:	f7ff fad3 	bl	80044a0 <quorem>
 8004efa:	3030      	adds	r0, #48	; 0x30
 8004efc:	f80b 0005 	strb.w	r0, [fp, r5]
 8004f00:	3501      	adds	r5, #1
 8004f02:	4555      	cmp	r5, sl
 8004f04:	dbee      	blt.n	8004ee4 <_dtoa_r+0x914>
 8004f06:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004f08:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8004f0c:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8004f10:	2d01      	cmp	r5, #1
 8004f12:	bfac      	ite	ge
 8004f14:	44ab      	addge	fp, r5
 8004f16:	f10b 0b01 	addlt.w	fp, fp, #1
 8004f1a:	4607      	mov	r7, r0
 8004f1c:	2500      	movs	r5, #0
 8004f1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004f20:	2201      	movs	r2, #1
 8004f22:	4620      	mov	r0, r4
 8004f24:	f001 f9cc 	bl	80062c0 <__lshift>
 8004f28:	4631      	mov	r1, r6
 8004f2a:	900b      	str	r0, [sp, #44]	; 0x2c
 8004f2c:	f001 fa26 	bl	800637c <__mcmp>
 8004f30:	2800      	cmp	r0, #0
 8004f32:	f340 826e 	ble.w	8005412 <_dtoa_r+0xe42>
 8004f36:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
 8004f3a:	9907      	ldr	r1, [sp, #28]
 8004f3c:	e005      	b.n	8004f4a <_dtoa_r+0x97a>
 8004f3e:	4299      	cmp	r1, r3
 8004f40:	f000 8223 	beq.w	800538a <_dtoa_r+0xdba>
 8004f44:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 8004f48:	469b      	mov	fp, r3
 8004f4a:	2a39      	cmp	r2, #57	; 0x39
 8004f4c:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
 8004f50:	d0f5      	beq.n	8004f3e <_dtoa_r+0x96e>
 8004f52:	3201      	adds	r2, #1
 8004f54:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8004f58:	701a      	strb	r2, [r3, #0]
 8004f5a:	f8cd b01c 	str.w	fp, [sp, #28]
 8004f5e:	e5c8      	b.n	8004af2 <_dtoa_r+0x522>
 8004f60:	231c      	movs	r3, #28
 8004f62:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004f64:	9a08      	ldr	r2, [sp, #32]
 8004f66:	4419      	add	r1, r3
 8004f68:	441a      	add	r2, r3
 8004f6a:	910a      	str	r1, [sp, #40]	; 0x28
 8004f6c:	441d      	add	r5, r3
 8004f6e:	9208      	str	r2, [sp, #32]
 8004f70:	e580      	b.n	8004a74 <_dtoa_r+0x4a4>
 8004f72:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
 8004f76:	f04f 0802 	mov.w	r8, #2
 8004f7a:	e67c      	b.n	8004c76 <_dtoa_r+0x6a6>
 8004f7c:	4629      	mov	r1, r5
 8004f7e:	4620      	mov	r0, r4
 8004f80:	f000 fff8 	bl	8005f74 <_Bfree>
 8004f84:	e5c1      	b.n	8004b0a <_dtoa_r+0x53a>
 8004f86:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8004f88:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
 8004f8c:	e450      	b.n	8004830 <_dtoa_r+0x260>
 8004f8e:	9e04      	ldr	r6, [sp, #16]
 8004f90:	4275      	negs	r5, r6
 8004f92:	2d00      	cmp	r5, #0
 8004f94:	f000 819a 	beq.w	80052cc <_dtoa_r+0xcfc>
 8004f98:	f646 53c0 	movw	r3, #28096	; 0x6dc0
 8004f9c:	f005 020f 	and.w	r2, r5, #15
 8004fa0:	f6c0 0300 	movt	r3, #2048	; 0x800
 8004fa4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004fa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004fac:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 8004fb0:	f7fb fba0 	bl	80006f4 <__aeabi_dmul>
 8004fb4:	112d      	asrs	r5, r5, #4
 8004fb6:	4606      	mov	r6, r0
 8004fb8:	460f      	mov	r7, r1
 8004fba:	f000 829c 	beq.w	80054f6 <_dtoa_r+0xf26>
 8004fbe:	f646 6988 	movw	r9, #28296	; 0x6e88
 8004fc2:	f6c0 0900 	movt	r9, #2048	; 0x800
 8004fc6:	f04f 0802 	mov.w	r8, #2
 8004fca:	07ee      	lsls	r6, r5, #31
 8004fcc:	d505      	bpl.n	8004fda <_dtoa_r+0xa0a>
 8004fce:	e9d9 2300 	ldrd	r2, r3, [r9]
 8004fd2:	f7fb fb8f 	bl	80006f4 <__aeabi_dmul>
 8004fd6:	f108 0801 	add.w	r8, r8, #1
 8004fda:	106d      	asrs	r5, r5, #1
 8004fdc:	f109 0908 	add.w	r9, r9, #8
 8004fe0:	d1f3      	bne.n	8004fca <_dtoa_r+0x9fa>
 8004fe2:	4606      	mov	r6, r0
 8004fe4:	460f      	mov	r7, r1
 8004fe6:	e663      	b.n	8004cb0 <_dtoa_r+0x6e0>
 8004fe8:	f10c 3bff 	add.w	fp, ip, #4294967295	; 0xffffffff
 8004fec:	eb03 01cb 	add.w	r1, r3, fp, lsl #3
 8004ff0:	4642      	mov	r2, r8
 8004ff2:	464b      	mov	r3, r9
 8004ff4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004ff8:	f8cd c004 	str.w	ip, [sp, #4]
 8004ffc:	f7fb fb7a 	bl	80006f4 <__aeabi_dmul>
 8005000:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005004:	4639      	mov	r1, r7
 8005006:	4630      	mov	r0, r6
 8005008:	f7fb fe0e 	bl	8000c28 <__aeabi_d2iz>
 800500c:	4605      	mov	r5, r0
 800500e:	f7fb fb0b 	bl	8000628 <__aeabi_i2d>
 8005012:	4602      	mov	r2, r0
 8005014:	460b      	mov	r3, r1
 8005016:	4630      	mov	r0, r6
 8005018:	4639      	mov	r1, r7
 800501a:	f7fb f9b7 	bl	800038c <__aeabi_dsub>
 800501e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8005022:	3530      	adds	r5, #48	; 0x30
 8005024:	f88e 5000 	strb.w	r5, [lr]
 8005028:	f8dd c004 	ldr.w	ip, [sp, #4]
 800502c:	f1bc 0f01 	cmp.w	ip, #1
 8005030:	4606      	mov	r6, r0
 8005032:	460f      	mov	r7, r1
 8005034:	f10e 0a01 	add.w	sl, lr, #1
 8005038:	d01f      	beq.n	800507a <_dtoa_r+0xaaa>
 800503a:	9d07      	ldr	r5, [sp, #28]
 800503c:	f105 39ff 	add.w	r9, r5, #4294967295	; 0xffffffff
 8005040:	44e1      	add	r9, ip
 8005042:	2300      	movs	r3, #0
 8005044:	2200      	movs	r2, #0
 8005046:	f2c4 0324 	movt	r3, #16420	; 0x4024
 800504a:	f7fb fb53 	bl	80006f4 <__aeabi_dmul>
 800504e:	460f      	mov	r7, r1
 8005050:	4606      	mov	r6, r0
 8005052:	f7fb fde9 	bl	8000c28 <__aeabi_d2iz>
 8005056:	4680      	mov	r8, r0
 8005058:	f7fb fae6 	bl	8000628 <__aeabi_i2d>
 800505c:	f108 0830 	add.w	r8, r8, #48	; 0x30
 8005060:	4602      	mov	r2, r0
 8005062:	460b      	mov	r3, r1
 8005064:	4630      	mov	r0, r6
 8005066:	4639      	mov	r1, r7
 8005068:	f7fb f990 	bl	800038c <__aeabi_dsub>
 800506c:	f805 8f01 	strb.w	r8, [r5, #1]!
 8005070:	454d      	cmp	r5, r9
 8005072:	d1e6      	bne.n	8005042 <_dtoa_r+0xa72>
 8005074:	4606      	mov	r6, r0
 8005076:	460f      	mov	r7, r1
 8005078:	44da      	add	sl, fp
 800507a:	2300      	movs	r3, #0
 800507c:	2200      	movs	r2, #0
 800507e:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 8005082:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005086:	f7fb f983 	bl	8000390 <__adddf3>
 800508a:	4632      	mov	r2, r6
 800508c:	463b      	mov	r3, r7
 800508e:	f7fb fda3 	bl	8000bd8 <__aeabi_dcmplt>
 8005092:	2800      	cmp	r0, #0
 8005094:	f000 815c 	beq.w	8005350 <_dtoa_r+0xd80>
 8005098:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800509c:	f81a 8c01 	ldrb.w	r8, [sl, #-1]
 80050a0:	f8cd a01c 	str.w	sl, [sp, #28]
 80050a4:	4652      	mov	r2, sl
 80050a6:	e475      	b.n	8004994 <_dtoa_r+0x3c4>
 80050a8:	2600      	movs	r6, #0
 80050aa:	46b0      	mov	r8, r6
 80050ac:	e516      	b.n	8004adc <_dtoa_r+0x50c>
 80050ae:	6933      	ldr	r3, [r6, #16]
 80050b0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80050b4:	6918      	ldr	r0, [r3, #16]
 80050b6:	f000 ffb3 	bl	8006020 <__hi0bits>
 80050ba:	f1c0 0020 	rsb	r0, r0, #32
 80050be:	e4c3      	b.n	8004a48 <_dtoa_r+0x478>
 80050c0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80050c2:	4631      	mov	r1, r6
 80050c4:	f001 f95a 	bl	800637c <__mcmp>
 80050c8:	2800      	cmp	r0, #0
 80050ca:	f6bf ace9 	bge.w	8004aa0 <_dtoa_r+0x4d0>
 80050ce:	f8dd e010 	ldr.w	lr, [sp, #16]
 80050d2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80050d4:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 80050d8:	4620      	mov	r0, r4
 80050da:	220a      	movs	r2, #10
 80050dc:	2300      	movs	r3, #0
 80050de:	f8cd e010 	str.w	lr, [sp, #16]
 80050e2:	f000 ff51 	bl	8005f88 <__multadd>
 80050e6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80050e8:	900b      	str	r0, [sp, #44]	; 0x2c
 80050ea:	2900      	cmp	r1, #0
 80050ec:	d13b      	bne.n	8005166 <_dtoa_r+0xb96>
 80050ee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80050f0:	2d00      	cmp	r5, #0
 80050f2:	dc03      	bgt.n	80050fc <_dtoa_r+0xb2c>
 80050f4:	9d02      	ldr	r5, [sp, #8]
 80050f6:	2d02      	cmp	r5, #2
 80050f8:	f300 8208 	bgt.w	800550c <_dtoa_r+0xf3c>
 80050fc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80050fe:	9509      	str	r5, [sp, #36]	; 0x24
 8005100:	e6e8      	b.n	8004ed4 <_dtoa_r+0x904>
 8005102:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005104:	2d00      	cmp	r5, #0
 8005106:	f040 8194 	bne.w	8005432 <_dtoa_r+0xe62>
 800510a:	2300      	movs	r3, #0
 800510c:	2200      	movs	r2, #0
 800510e:	f2c4 0314 	movt	r3, #16404	; 0x4014
 8005112:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005116:	f7fb faed 	bl	80006f4 <__aeabi_dmul>
 800511a:	4652      	mov	r2, sl
 800511c:	465b      	mov	r3, fp
 800511e:	f7fb fd6f 	bl	8000c00 <__aeabi_dcmpge>
 8005122:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8005124:	46b0      	mov	r8, r6
 8005126:	2800      	cmp	r0, #0
 8005128:	f47f aec9 	bne.w	8004ebe <_dtoa_r+0x8ee>
 800512c:	e4d6      	b.n	8004adc <_dtoa_r+0x50c>
 800512e:	f1ba 0f00 	cmp.w	sl, #0
 8005132:	f47f ac83 	bne.w	8004a3c <_dtoa_r+0x46c>
 8005136:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800513a:	4657      	mov	r7, sl
 800513c:	2b00      	cmp	r3, #0
 800513e:	f47f ac7e 	bne.w	8004a3e <_dtoa_r+0x46e>
 8005142:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8005146:	0d3f      	lsrs	r7, r7, #20
 8005148:	053f      	lsls	r7, r7, #20
 800514a:	2f00      	cmp	r7, #0
 800514c:	f43f ac77 	beq.w	8004a3e <_dtoa_r+0x46e>
 8005150:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005152:	f8dd e020 	ldr.w	lr, [sp, #32]
 8005156:	3301      	adds	r3, #1
 8005158:	f10e 0e01 	add.w	lr, lr, #1
 800515c:	930a      	str	r3, [sp, #40]	; 0x28
 800515e:	f8cd e020 	str.w	lr, [sp, #32]
 8005162:	2701      	movs	r7, #1
 8005164:	e46b      	b.n	8004a3e <_dtoa_r+0x46e>
 8005166:	2300      	movs	r3, #0
 8005168:	4641      	mov	r1, r8
 800516a:	220a      	movs	r2, #10
 800516c:	4620      	mov	r0, r4
 800516e:	f000 ff0b 	bl	8005f88 <__multadd>
 8005172:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005174:	f8dd e008 	ldr.w	lr, [sp, #8]
 8005178:	2a00      	cmp	r2, #0
 800517a:	bfcc      	ite	gt
 800517c:	2300      	movgt	r3, #0
 800517e:	2301      	movle	r3, #1
 8005180:	f1be 0f02 	cmp.w	lr, #2
 8005184:	bfd8      	it	le
 8005186:	2300      	movle	r3, #0
 8005188:	4680      	mov	r8, r0
 800518a:	2b00      	cmp	r3, #0
 800518c:	f040 81be 	bne.w	800550c <_dtoa_r+0xf3c>
 8005190:	9209      	str	r2, [sp, #36]	; 0x24
 8005192:	2d00      	cmp	r5, #0
 8005194:	dd05      	ble.n	80051a2 <_dtoa_r+0xbd2>
 8005196:	4641      	mov	r1, r8
 8005198:	462a      	mov	r2, r5
 800519a:	4620      	mov	r0, r4
 800519c:	f001 f890 	bl	80062c0 <__lshift>
 80051a0:	4680      	mov	r8, r0
 80051a2:	46c4      	mov	ip, r8
 80051a4:	2f00      	cmp	r7, #0
 80051a6:	f040 8157 	bne.w	8005458 <_dtoa_r+0xe88>
 80051aa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80051ac:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80051b0:	9907      	ldr	r1, [sp, #28]
 80051b2:	44ae      	add	lr, r5
 80051b4:	f00a 0501 	and.w	r5, sl, #1
 80051b8:	9509      	str	r5, [sp, #36]	; 0x24
 80051ba:	4637      	mov	r7, r6
 80051bc:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 80051c0:	1c4d      	adds	r5, r1, #1
 80051c2:	46e1      	mov	r9, ip
 80051c4:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80051c6:	e00a      	b.n	80051de <_dtoa_r+0xc0e>
 80051c8:	f000 fede 	bl	8005f88 <__multadd>
 80051cc:	4649      	mov	r1, r9
 80051ce:	4680      	mov	r8, r0
 80051d0:	220a      	movs	r2, #10
 80051d2:	4620      	mov	r0, r4
 80051d4:	2300      	movs	r3, #0
 80051d6:	f000 fed7 	bl	8005f88 <__multadd>
 80051da:	4681      	mov	r9, r0
 80051dc:	3501      	adds	r5, #1
 80051de:	4639      	mov	r1, r7
 80051e0:	4630      	mov	r0, r6
 80051e2:	f7ff f95d 	bl	80044a0 <quorem>
 80051e6:	4641      	mov	r1, r8
 80051e8:	4682      	mov	sl, r0
 80051ea:	4630      	mov	r0, r6
 80051ec:	f001 f8c6 	bl	800637c <__mcmp>
 80051f0:	464a      	mov	r2, r9
 80051f2:	4683      	mov	fp, r0
 80051f4:	4639      	mov	r1, r7
 80051f6:	4620      	mov	r0, r4
 80051f8:	f001 f8e2 	bl	80063c0 <__mdiff>
 80051fc:	f10a 0230 	add.w	r2, sl, #48	; 0x30
 8005200:	9205      	str	r2, [sp, #20]
 8005202:	68c2      	ldr	r2, [r0, #12]
 8005204:	f105 3eff 	add.w	lr, r5, #4294967295	; 0xffffffff
 8005208:	4603      	mov	r3, r0
 800520a:	f8cd e020 	str.w	lr, [sp, #32]
 800520e:	2a00      	cmp	r2, #0
 8005210:	d13e      	bne.n	8005290 <_dtoa_r+0xcc0>
 8005212:	4619      	mov	r1, r3
 8005214:	4630      	mov	r0, r6
 8005216:	9301      	str	r3, [sp, #4]
 8005218:	f001 f8b0 	bl	800637c <__mcmp>
 800521c:	9b01      	ldr	r3, [sp, #4]
 800521e:	4602      	mov	r2, r0
 8005220:	4619      	mov	r1, r3
 8005222:	4620      	mov	r0, r4
 8005224:	9201      	str	r2, [sp, #4]
 8005226:	f000 fea5 	bl	8005f74 <_Bfree>
 800522a:	9a01      	ldr	r2, [sp, #4]
 800522c:	9902      	ldr	r1, [sp, #8]
 800522e:	4311      	orrs	r1, r2
 8005230:	d103      	bne.n	800523a <_dtoa_r+0xc6a>
 8005232:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005234:	2b00      	cmp	r3, #0
 8005236:	f000 814d 	beq.w	80054d4 <_dtoa_r+0xf04>
 800523a:	f1bb 0f00 	cmp.w	fp, #0
 800523e:	f2c0 80ba 	blt.w	80053b6 <_dtoa_r+0xde6>
 8005242:	9b02      	ldr	r3, [sp, #8]
 8005244:	ea5b 0303 	orrs.w	r3, fp, r3
 8005248:	d103      	bne.n	8005252 <_dtoa_r+0xc82>
 800524a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800524c:	2900      	cmp	r1, #0
 800524e:	f000 80b2 	beq.w	80053b6 <_dtoa_r+0xde6>
 8005252:	2a00      	cmp	r2, #0
 8005254:	f300 811d 	bgt.w	8005492 <_dtoa_r+0xec2>
 8005258:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800525a:	9a05      	ldr	r2, [sp, #20]
 800525c:	429d      	cmp	r5, r3
 800525e:	f805 2c01 	strb.w	r2, [r5, #-1]
 8005262:	46ab      	mov	fp, r5
 8005264:	f000 8127 	beq.w	80054b6 <_dtoa_r+0xee6>
 8005268:	4631      	mov	r1, r6
 800526a:	220a      	movs	r2, #10
 800526c:	2300      	movs	r3, #0
 800526e:	4620      	mov	r0, r4
 8005270:	f000 fe8a 	bl	8005f88 <__multadd>
 8005274:	45c8      	cmp	r8, r9
 8005276:	4606      	mov	r6, r0
 8005278:	4641      	mov	r1, r8
 800527a:	4620      	mov	r0, r4
 800527c:	f04f 020a 	mov.w	r2, #10
 8005280:	f04f 0300 	mov.w	r3, #0
 8005284:	d1a0      	bne.n	80051c8 <_dtoa_r+0xbf8>
 8005286:	f000 fe7f 	bl	8005f88 <__multadd>
 800528a:	4680      	mov	r8, r0
 800528c:	4681      	mov	r9, r0
 800528e:	e7a5      	b.n	80051dc <_dtoa_r+0xc0c>
 8005290:	2201      	movs	r2, #1
 8005292:	e7c5      	b.n	8005220 <_dtoa_r+0xc50>
 8005294:	2601      	movs	r6, #1
 8005296:	960d      	str	r6, [sp, #52]	; 0x34
 8005298:	e4a2      	b.n	8004be0 <_dtoa_r+0x610>
 800529a:	2e0e      	cmp	r6, #14
 800529c:	bf8c      	ite	hi
 800529e:	2300      	movhi	r3, #0
 80052a0:	2301      	movls	r3, #1
 80052a2:	2100      	movs	r1, #0
 80052a4:	401d      	ands	r5, r3
 80052a6:	6461      	str	r1, [r4, #68]	; 0x44
 80052a8:	e4b9      	b.n	8004c1e <_dtoa_r+0x64e>
 80052aa:	2301      	movs	r3, #1
 80052ac:	930e      	str	r3, [sp, #56]	; 0x38
 80052ae:	9309      	str	r3, [sp, #36]	; 0x24
 80052b0:	9305      	str	r3, [sp, #20]
 80052b2:	e7f6      	b.n	80052a2 <_dtoa_r+0xcd2>
 80052b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80052b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80052b8:	4620      	mov	r0, r4
 80052ba:	f000 ffb1 	bl	8006220 <__pow5mult>
 80052be:	900b      	str	r0, [sp, #44]	; 0x2c
 80052c0:	f7ff bbaa 	b.w	8004a18 <_dtoa_r+0x448>
 80052c4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80052c8:	9507      	str	r5, [sp, #28]
 80052ca:	e422      	b.n	8004b12 <_dtoa_r+0x542>
 80052cc:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 80052d0:	f04f 0802 	mov.w	r8, #2
 80052d4:	e4ec      	b.n	8004cb0 <_dtoa_r+0x6e0>
 80052d6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80052d8:	2d00      	cmp	r5, #0
 80052da:	f43f adc2 	beq.w	8004e62 <_dtoa_r+0x892>
 80052de:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80052e0:	2d00      	cmp	r5, #0
 80052e2:	f77f ae51 	ble.w	8004f88 <_dtoa_r+0x9b8>
 80052e6:	2300      	movs	r3, #0
 80052e8:	2200      	movs	r2, #0
 80052ea:	f2c4 0324 	movt	r3, #16420	; 0x4024
 80052ee:	4630      	mov	r0, r6
 80052f0:	4639      	mov	r1, r7
 80052f2:	f7fb f9ff 	bl	80006f4 <__aeabi_dmul>
 80052f6:	4606      	mov	r6, r0
 80052f8:	f108 0001 	add.w	r0, r8, #1
 80052fc:	460f      	mov	r7, r1
 80052fe:	f7fb f993 	bl	8000628 <__aeabi_i2d>
 8005302:	4602      	mov	r2, r0
 8005304:	460b      	mov	r3, r1
 8005306:	4630      	mov	r0, r6
 8005308:	4639      	mov	r1, r7
 800530a:	f7fb f9f3 	bl	80006f4 <__aeabi_dmul>
 800530e:	2300      	movs	r3, #0
 8005310:	2200      	movs	r2, #0
 8005312:	f2c4 031c 	movt	r3, #16412	; 0x401c
 8005316:	f7fb f83b 	bl	8000390 <__adddf3>
 800531a:	9d04      	ldr	r5, [sp, #16]
 800531c:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
 8005320:	3d01      	subs	r5, #1
 8005322:	4680      	mov	r8, r0
 8005324:	9516      	str	r5, [sp, #88]	; 0x58
 8005326:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 800532a:	e4e6      	b.n	8004cfa <_dtoa_r+0x72a>
 800532c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800532e:	9207      	str	r2, [sp, #28]
 8005330:	2230      	movs	r2, #48	; 0x30
 8005332:	f889 2000 	strb.w	r2, [r9]
 8005336:	3501      	adds	r5, #1
 8005338:	2231      	movs	r2, #49	; 0x31
 800533a:	9504      	str	r5, [sp, #16]
 800533c:	701a      	strb	r2, [r3, #0]
 800533e:	f7ff bbe8 	b.w	8004b12 <_dtoa_r+0x542>
 8005342:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005344:	4620      	mov	r0, r4
 8005346:	f000 ff6b 	bl	8006220 <__pow5mult>
 800534a:	900b      	str	r0, [sp, #44]	; 0x2c
 800534c:	f7ff bb64 	b.w	8004a18 <_dtoa_r+0x448>
 8005350:	2100      	movs	r1, #0
 8005352:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005356:	2000      	movs	r0, #0
 8005358:	f6c3 71e0 	movt	r1, #16352	; 0x3fe0
 800535c:	f7fb f816 	bl	800038c <__aeabi_dsub>
 8005360:	4632      	mov	r2, r6
 8005362:	463b      	mov	r3, r7
 8005364:	f7fb fc56 	bl	8000c14 <__aeabi_dcmpgt>
 8005368:	2800      	cmp	r0, #0
 800536a:	f43f ae0d 	beq.w	8004f88 <_dtoa_r+0x9b8>
 800536e:	4653      	mov	r3, sl
 8005370:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8005374:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 8005378:	2a30      	cmp	r2, #48	; 0x30
 800537a:	d0f8      	beq.n	800536e <_dtoa_r+0xd9e>
 800537c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800537e:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8005382:	9504      	str	r5, [sp, #16]
 8005384:	9307      	str	r3, [sp, #28]
 8005386:	f7ff bbc4 	b.w	8004b12 <_dtoa_r+0x542>
 800538a:	f8dd e010 	ldr.w	lr, [sp, #16]
 800538e:	9907      	ldr	r1, [sp, #28]
 8005390:	f8cd b01c 	str.w	fp, [sp, #28]
 8005394:	2331      	movs	r3, #49	; 0x31
 8005396:	f10e 0e01 	add.w	lr, lr, #1
 800539a:	f8cd e010 	str.w	lr, [sp, #16]
 800539e:	700b      	strb	r3, [r1, #0]
 80053a0:	4689      	mov	r9, r1
 80053a2:	f7ff bba6 	b.w	8004af2 <_dtoa_r+0x522>
 80053a6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80053a8:	2d00      	cmp	r5, #0
 80053aa:	d06b      	beq.n	8005484 <_dtoa_r+0xeb4>
 80053ac:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80053b0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80053b2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80053b4:	e404      	b.n	8004bc0 <_dtoa_r+0x5f0>
 80053b6:	2a00      	cmp	r2, #0
 80053b8:	960b      	str	r6, [sp, #44]	; 0x2c
 80053ba:	46cc      	mov	ip, r9
 80053bc:	463e      	mov	r6, r7
 80053be:	9f05      	ldr	r7, [sp, #20]
 80053c0:	dd13      	ble.n	80053ea <_dtoa_r+0xe1a>
 80053c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80053c4:	f8cd 9004 	str.w	r9, [sp, #4]
 80053c8:	2201      	movs	r2, #1
 80053ca:	4620      	mov	r0, r4
 80053cc:	f000 ff78 	bl	80062c0 <__lshift>
 80053d0:	4631      	mov	r1, r6
 80053d2:	900b      	str	r0, [sp, #44]	; 0x2c
 80053d4:	f000 ffd2 	bl	800637c <__mcmp>
 80053d8:	2800      	cmp	r0, #0
 80053da:	f8dd c004 	ldr.w	ip, [sp, #4]
 80053de:	f340 8084 	ble.w	80054ea <_dtoa_r+0xf1a>
 80053e2:	2f39      	cmp	r7, #57	; 0x39
 80053e4:	d06d      	beq.n	80054c2 <_dtoa_r+0xef2>
 80053e6:	f10a 0731 	add.w	r7, sl, #49	; 0x31
 80053ea:	9b08      	ldr	r3, [sp, #32]
 80053ec:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80053f0:	701f      	strb	r7, [r3, #0]
 80053f2:	1c59      	adds	r1, r3, #1
 80053f4:	4645      	mov	r5, r8
 80053f6:	9107      	str	r1, [sp, #28]
 80053f8:	46e0      	mov	r8, ip
 80053fa:	f7ff bb7a 	b.w	8004af2 <_dtoa_r+0x522>
 80053fe:	f8cd 9000 	str.w	r9, [sp]
 8005402:	9d00      	ldr	r5, [sp, #0]
 8005404:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8005408:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 800540a:	9507      	str	r5, [sp, #28]
 800540c:	462a      	mov	r2, r5
 800540e:	f7ff bac1 	b.w	8004994 <_dtoa_r+0x3c4>
 8005412:	d102      	bne.n	800541a <_dtoa_r+0xe4a>
 8005414:	07fb      	lsls	r3, r7, #31
 8005416:	f53f ad8e 	bmi.w	8004f36 <_dtoa_r+0x966>
 800541a:	465b      	mov	r3, fp
 800541c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8005420:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 8005424:	2a30      	cmp	r2, #48	; 0x30
 8005426:	d0f8      	beq.n	800541a <_dtoa_r+0xe4a>
 8005428:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800542c:	9307      	str	r3, [sp, #28]
 800542e:	f7ff bb60 	b.w	8004af2 <_dtoa_r+0x522>
 8005432:	2600      	movs	r6, #0
 8005434:	e542      	b.n	8004ebc <_dtoa_r+0x8ec>
 8005436:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800543a:	4632      	mov	r2, r6
 800543c:	463b      	mov	r3, r7
 800543e:	f7fb fbc1 	bl	8000bc4 <__aeabi_dcmpeq>
 8005442:	2800      	cmp	r0, #0
 8005444:	f43f af3e 	beq.w	80052c4 <_dtoa_r+0xcf4>
 8005448:	f018 0f01 	tst.w	r8, #1
 800544c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8005450:	f43f af3a 	beq.w	80052c8 <_dtoa_r+0xcf8>
 8005454:	f7ff ba91 	b.w	800497a <_dtoa_r+0x3aa>
 8005458:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800545c:	4620      	mov	r0, r4
 800545e:	f000 fd63 	bl	8005f28 <_Balloc>
 8005462:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8005466:	1c9a      	adds	r2, r3, #2
 8005468:	4605      	mov	r5, r0
 800546a:	0092      	lsls	r2, r2, #2
 800546c:	f108 010c 	add.w	r1, r8, #12
 8005470:	300c      	adds	r0, #12
 8005472:	f7fa feed 	bl	8000250 <memcpy>
 8005476:	4620      	mov	r0, r4
 8005478:	4629      	mov	r1, r5
 800547a:	2201      	movs	r2, #1
 800547c:	f000 ff20 	bl	80062c0 <__lshift>
 8005480:	4684      	mov	ip, r0
 8005482:	e692      	b.n	80051aa <_dtoa_r+0xbda>
 8005484:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8005486:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8005488:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800548a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800548e:	f7ff bb97 	b.w	8004bc0 <_dtoa_r+0x5f0>
 8005492:	960b      	str	r6, [sp, #44]	; 0x2c
 8005494:	463e      	mov	r6, r7
 8005496:	9f05      	ldr	r7, [sp, #20]
 8005498:	2f39      	cmp	r7, #57	; 0x39
 800549a:	46cc      	mov	ip, r9
 800549c:	d011      	beq.n	80054c2 <_dtoa_r+0xef2>
 800549e:	9908      	ldr	r1, [sp, #32]
 80054a0:	9d08      	ldr	r5, [sp, #32]
 80054a2:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80054a6:	3701      	adds	r7, #1
 80054a8:	3101      	adds	r1, #1
 80054aa:	702f      	strb	r7, [r5, #0]
 80054ac:	9107      	str	r1, [sp, #28]
 80054ae:	4645      	mov	r5, r8
 80054b0:	46e0      	mov	r8, ip
 80054b2:	f7ff bb1e 	b.w	8004af2 <_dtoa_r+0x522>
 80054b6:	960b      	str	r6, [sp, #44]	; 0x2c
 80054b8:	4645      	mov	r5, r8
 80054ba:	463e      	mov	r6, r7
 80054bc:	46c8      	mov	r8, r9
 80054be:	9f05      	ldr	r7, [sp, #20]
 80054c0:	e52d      	b.n	8004f1e <_dtoa_r+0x94e>
 80054c2:	9b08      	ldr	r3, [sp, #32]
 80054c4:	9907      	ldr	r1, [sp, #28]
 80054c6:	2239      	movs	r2, #57	; 0x39
 80054c8:	4645      	mov	r5, r8
 80054ca:	701a      	strb	r2, [r3, #0]
 80054cc:	46e0      	mov	r8, ip
 80054ce:	f103 0b01 	add.w	fp, r3, #1
 80054d2:	e53a      	b.n	8004f4a <_dtoa_r+0x97a>
 80054d4:	960b      	str	r6, [sp, #44]	; 0x2c
 80054d6:	463e      	mov	r6, r7
 80054d8:	9f05      	ldr	r7, [sp, #20]
 80054da:	2f39      	cmp	r7, #57	; 0x39
 80054dc:	46cc      	mov	ip, r9
 80054de:	d0f0      	beq.n	80054c2 <_dtoa_r+0xef2>
 80054e0:	f1bb 0f00 	cmp.w	fp, #0
 80054e4:	f73f af7f 	bgt.w	80053e6 <_dtoa_r+0xe16>
 80054e8:	e77f      	b.n	80053ea <_dtoa_r+0xe1a>
 80054ea:	f47f af7e 	bne.w	80053ea <_dtoa_r+0xe1a>
 80054ee:	07fa      	lsls	r2, r7, #31
 80054f0:	f57f af7b 	bpl.w	80053ea <_dtoa_r+0xe1a>
 80054f4:	e775      	b.n	80053e2 <_dtoa_r+0xe12>
 80054f6:	f04f 0802 	mov.w	r8, #2
 80054fa:	f7ff bbd9 	b.w	8004cb0 <_dtoa_r+0x6e0>
 80054fe:	9e00      	ldr	r6, [sp, #0]
 8005500:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8005504:	9607      	str	r6, [sp, #28]
 8005506:	4632      	mov	r2, r6
 8005508:	f7ff ba44 	b.w	8004994 <_dtoa_r+0x3c4>
 800550c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800550e:	9509      	str	r5, [sp, #36]	; 0x24
 8005510:	f7ff bad2 	b.w	8004ab8 <_dtoa_r+0x4e8>
 8005514:	f43f aaae 	beq.w	8004a74 <_dtoa_r+0x4a4>
 8005518:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
 800551c:	e521      	b.n	8004f62 <_dtoa_r+0x992>
 800551e:	bf00      	nop

08005520 <_fclose_r>:
 8005520:	b570      	push	{r4, r5, r6, lr}
 8005522:	460c      	mov	r4, r1
 8005524:	4605      	mov	r5, r0
 8005526:	b131      	cbz	r1, 8005536 <_fclose_r+0x16>
 8005528:	b110      	cbz	r0, 8005530 <_fclose_r+0x10>
 800552a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800552c:	2b00      	cmp	r3, #0
 800552e:	d030      	beq.n	8005592 <_fclose_r+0x72>
 8005530:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005534:	b90b      	cbnz	r3, 800553a <_fclose_r+0x1a>
 8005536:	2000      	movs	r0, #0
 8005538:	bd70      	pop	{r4, r5, r6, pc}
 800553a:	4628      	mov	r0, r5
 800553c:	4621      	mov	r1, r4
 800553e:	f000 f8e7 	bl	8005710 <_fflush_r>
 8005542:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8005544:	4606      	mov	r6, r0
 8005546:	b13b      	cbz	r3, 8005558 <_fclose_r+0x38>
 8005548:	4628      	mov	r0, r5
 800554a:	69e1      	ldr	r1, [r4, #28]
 800554c:	4798      	blx	r3
 800554e:	ea36 0620 	bics.w	r6, r6, r0, asr #32
 8005552:	bf28      	it	cs
 8005554:	f04f 36ff 	movcs.w	r6, #4294967295	; 0xffffffff
 8005558:	89a3      	ldrh	r3, [r4, #12]
 800555a:	061b      	lsls	r3, r3, #24
 800555c:	d41c      	bmi.n	8005598 <_fclose_r+0x78>
 800555e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005560:	b141      	cbz	r1, 8005574 <_fclose_r+0x54>
 8005562:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8005566:	4299      	cmp	r1, r3
 8005568:	d002      	beq.n	8005570 <_fclose_r+0x50>
 800556a:	4628      	mov	r0, r5
 800556c:	f000 f938 	bl	80057e0 <_free_r>
 8005570:	2300      	movs	r3, #0
 8005572:	6323      	str	r3, [r4, #48]	; 0x30
 8005574:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8005576:	b121      	cbz	r1, 8005582 <_fclose_r+0x62>
 8005578:	4628      	mov	r0, r5
 800557a:	f000 f931 	bl	80057e0 <_free_r>
 800557e:	2300      	movs	r3, #0
 8005580:	6463      	str	r3, [r4, #68]	; 0x44
 8005582:	f7fc ffdb 	bl	800253c <__sfp_lock_acquire>
 8005586:	2300      	movs	r3, #0
 8005588:	81a3      	strh	r3, [r4, #12]
 800558a:	f7fc ffd9 	bl	8002540 <__sfp_lock_release>
 800558e:	4630      	mov	r0, r6
 8005590:	bd70      	pop	{r4, r5, r6, pc}
 8005592:	f7fc ff57 	bl	8002444 <__sinit>
 8005596:	e7cb      	b.n	8005530 <_fclose_r+0x10>
 8005598:	4628      	mov	r0, r5
 800559a:	6921      	ldr	r1, [r4, #16]
 800559c:	f000 f920 	bl	80057e0 <_free_r>
 80055a0:	e7dd      	b.n	800555e <_fclose_r+0x3e>
 80055a2:	bf00      	nop

080055a4 <fclose>:
 80055a4:	f240 4328 	movw	r3, #1064	; 0x428
 80055a8:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80055ac:	4601      	mov	r1, r0
 80055ae:	6818      	ldr	r0, [r3, #0]
 80055b0:	f7ff bfb6 	b.w	8005520 <_fclose_r>

080055b4 <__sflush_r>:
 80055b4:	898b      	ldrh	r3, [r1, #12]
 80055b6:	b29a      	uxth	r2, r3
 80055b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80055bc:	460d      	mov	r5, r1
 80055be:	0711      	lsls	r1, r2, #28
 80055c0:	4680      	mov	r8, r0
 80055c2:	d43c      	bmi.n	800563e <__sflush_r+0x8a>
 80055c4:	686a      	ldr	r2, [r5, #4]
 80055c6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80055ca:	2a00      	cmp	r2, #0
 80055cc:	81ab      	strh	r3, [r5, #12]
 80055ce:	dd5a      	ble.n	8005686 <__sflush_r+0xd2>
 80055d0:	6aac      	ldr	r4, [r5, #40]	; 0x28
 80055d2:	2c00      	cmp	r4, #0
 80055d4:	d04c      	beq.n	8005670 <__sflush_r+0xbc>
 80055d6:	b29b      	uxth	r3, r3
 80055d8:	f403 5680 	and.w	r6, r3, #4096	; 0x1000
 80055dc:	2200      	movs	r2, #0
 80055de:	b2b6      	uxth	r6, r6
 80055e0:	f8d8 7000 	ldr.w	r7, [r8]
 80055e4:	f8c8 2000 	str.w	r2, [r8]
 80055e8:	2e00      	cmp	r6, #0
 80055ea:	d050      	beq.n	800568e <__sflush_r+0xda>
 80055ec:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 80055ee:	075e      	lsls	r6, r3, #29
 80055f0:	d505      	bpl.n	80055fe <__sflush_r+0x4a>
 80055f2:	6869      	ldr	r1, [r5, #4]
 80055f4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80055f6:	1a52      	subs	r2, r2, r1
 80055f8:	b10b      	cbz	r3, 80055fe <__sflush_r+0x4a>
 80055fa:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 80055fc:	1ad2      	subs	r2, r2, r3
 80055fe:	4640      	mov	r0, r8
 8005600:	69e9      	ldr	r1, [r5, #28]
 8005602:	2300      	movs	r3, #0
 8005604:	47a0      	blx	r4
 8005606:	1c44      	adds	r4, r0, #1
 8005608:	d04c      	beq.n	80056a4 <__sflush_r+0xf0>
 800560a:	89ab      	ldrh	r3, [r5, #12]
 800560c:	692a      	ldr	r2, [r5, #16]
 800560e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005612:	b29b      	uxth	r3, r3
 8005614:	2100      	movs	r1, #0
 8005616:	602a      	str	r2, [r5, #0]
 8005618:	04da      	lsls	r2, r3, #19
 800561a:	81ab      	strh	r3, [r5, #12]
 800561c:	6069      	str	r1, [r5, #4]
 800561e:	d44e      	bmi.n	80056be <__sflush_r+0x10a>
 8005620:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8005622:	f8c8 7000 	str.w	r7, [r8]
 8005626:	b319      	cbz	r1, 8005670 <__sflush_r+0xbc>
 8005628:	f105 0340 	add.w	r3, r5, #64	; 0x40
 800562c:	4299      	cmp	r1, r3
 800562e:	d002      	beq.n	8005636 <__sflush_r+0x82>
 8005630:	4640      	mov	r0, r8
 8005632:	f000 f8d5 	bl	80057e0 <_free_r>
 8005636:	2000      	movs	r0, #0
 8005638:	6328      	str	r0, [r5, #48]	; 0x30
 800563a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800563e:	692e      	ldr	r6, [r5, #16]
 8005640:	b1b6      	cbz	r6, 8005670 <__sflush_r+0xbc>
 8005642:	0791      	lsls	r1, r2, #30
 8005644:	682c      	ldr	r4, [r5, #0]
 8005646:	bf08      	it	eq
 8005648:	696b      	ldreq	r3, [r5, #20]
 800564a:	602e      	str	r6, [r5, #0]
 800564c:	bf18      	it	ne
 800564e:	2300      	movne	r3, #0
 8005650:	1ba4      	subs	r4, r4, r6
 8005652:	60ab      	str	r3, [r5, #8]
 8005654:	e00a      	b.n	800566c <__sflush_r+0xb8>
 8005656:	4632      	mov	r2, r6
 8005658:	4623      	mov	r3, r4
 800565a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 800565c:	69e9      	ldr	r1, [r5, #28]
 800565e:	4640      	mov	r0, r8
 8005660:	47b8      	blx	r7
 8005662:	2800      	cmp	r0, #0
 8005664:	ebc0 0404 	rsb	r4, r0, r4
 8005668:	4406      	add	r6, r0
 800566a:	dd04      	ble.n	8005676 <__sflush_r+0xc2>
 800566c:	2c00      	cmp	r4, #0
 800566e:	dcf2      	bgt.n	8005656 <__sflush_r+0xa2>
 8005670:	2000      	movs	r0, #0
 8005672:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005676:	89ab      	ldrh	r3, [r5, #12]
 8005678:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800567c:	81ab      	strh	r3, [r5, #12]
 800567e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005682:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005686:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8005688:	2a00      	cmp	r2, #0
 800568a:	dca1      	bgt.n	80055d0 <__sflush_r+0x1c>
 800568c:	e7f0      	b.n	8005670 <__sflush_r+0xbc>
 800568e:	4632      	mov	r2, r6
 8005690:	2301      	movs	r3, #1
 8005692:	4640      	mov	r0, r8
 8005694:	69e9      	ldr	r1, [r5, #28]
 8005696:	47a0      	blx	r4
 8005698:	1c43      	adds	r3, r0, #1
 800569a:	4602      	mov	r2, r0
 800569c:	d01e      	beq.n	80056dc <__sflush_r+0x128>
 800569e:	89ab      	ldrh	r3, [r5, #12]
 80056a0:	6aac      	ldr	r4, [r5, #40]	; 0x28
 80056a2:	e7a4      	b.n	80055ee <__sflush_r+0x3a>
 80056a4:	f8d8 3000 	ldr.w	r3, [r8]
 80056a8:	b95b      	cbnz	r3, 80056c2 <__sflush_r+0x10e>
 80056aa:	89a9      	ldrh	r1, [r5, #12]
 80056ac:	606b      	str	r3, [r5, #4]
 80056ae:	f421 6300 	bic.w	r3, r1, #2048	; 0x800
 80056b2:	b29b      	uxth	r3, r3
 80056b4:	692a      	ldr	r2, [r5, #16]
 80056b6:	81ab      	strh	r3, [r5, #12]
 80056b8:	04db      	lsls	r3, r3, #19
 80056ba:	602a      	str	r2, [r5, #0]
 80056bc:	d5b0      	bpl.n	8005620 <__sflush_r+0x6c>
 80056be:	6528      	str	r0, [r5, #80]	; 0x50
 80056c0:	e7ae      	b.n	8005620 <__sflush_r+0x6c>
 80056c2:	2b1d      	cmp	r3, #29
 80056c4:	d001      	beq.n	80056ca <__sflush_r+0x116>
 80056c6:	2b16      	cmp	r3, #22
 80056c8:	d11b      	bne.n	8005702 <__sflush_r+0x14e>
 80056ca:	89a9      	ldrh	r1, [r5, #12]
 80056cc:	692b      	ldr	r3, [r5, #16]
 80056ce:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 80056d2:	2200      	movs	r2, #0
 80056d4:	81a9      	strh	r1, [r5, #12]
 80056d6:	602b      	str	r3, [r5, #0]
 80056d8:	606a      	str	r2, [r5, #4]
 80056da:	e7a1      	b.n	8005620 <__sflush_r+0x6c>
 80056dc:	f8d8 3000 	ldr.w	r3, [r8]
 80056e0:	2b00      	cmp	r3, #0
 80056e2:	d0dc      	beq.n	800569e <__sflush_r+0xea>
 80056e4:	2b1d      	cmp	r3, #29
 80056e6:	bf18      	it	ne
 80056e8:	2b16      	cmpne	r3, #22
 80056ea:	bf15      	itete	ne
 80056ec:	89ab      	ldrhne	r3, [r5, #12]
 80056ee:	f8c8 7000 	streq.w	r7, [r8]
 80056f2:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 80056f6:	4630      	moveq	r0, r6
 80056f8:	bf1c      	itt	ne
 80056fa:	81ab      	strhne	r3, [r5, #12]
 80056fc:	4610      	movne	r0, r2
 80056fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005702:	89ab      	ldrh	r3, [r5, #12]
 8005704:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005708:	81ab      	strh	r3, [r5, #12]
 800570a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800570e:	bf00      	nop

08005710 <_fflush_r>:
 8005710:	b510      	push	{r4, lr}
 8005712:	4604      	mov	r4, r0
 8005714:	b082      	sub	sp, #8
 8005716:	b108      	cbz	r0, 800571c <_fflush_r+0xc>
 8005718:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800571a:	b153      	cbz	r3, 8005732 <_fflush_r+0x22>
 800571c:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 8005720:	b908      	cbnz	r0, 8005726 <_fflush_r+0x16>
 8005722:	b002      	add	sp, #8
 8005724:	bd10      	pop	{r4, pc}
 8005726:	4620      	mov	r0, r4
 8005728:	b002      	add	sp, #8
 800572a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800572e:	f7ff bf41 	b.w	80055b4 <__sflush_r>
 8005732:	9101      	str	r1, [sp, #4]
 8005734:	f7fc fe86 	bl	8002444 <__sinit>
 8005738:	9901      	ldr	r1, [sp, #4]
 800573a:	e7ef      	b.n	800571c <_fflush_r+0xc>

0800573c <_malloc_trim_r>:
 800573c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800573e:	f240 4430 	movw	r4, #1072	; 0x430
 8005742:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8005746:	460f      	mov	r7, r1
 8005748:	4605      	mov	r5, r0
 800574a:	f7fd f9d3 	bl	8002af4 <__malloc_lock>
 800574e:	68a3      	ldr	r3, [r4, #8]
 8005750:	685e      	ldr	r6, [r3, #4]
 8005752:	f026 0603 	bic.w	r6, r6, #3
 8005756:	1bf7      	subs	r7, r6, r7
 8005758:	f607 77ef 	addw	r7, r7, #4079	; 0xfef
 800575c:	0b3f      	lsrs	r7, r7, #12
 800575e:	3f01      	subs	r7, #1
 8005760:	033f      	lsls	r7, r7, #12
 8005762:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
 8005766:	db07      	blt.n	8005778 <_malloc_trim_r+0x3c>
 8005768:	4628      	mov	r0, r5
 800576a:	2100      	movs	r1, #0
 800576c:	f7fd fa14 	bl	8002b98 <_sbrk_r>
 8005770:	68a3      	ldr	r3, [r4, #8]
 8005772:	4433      	add	r3, r6
 8005774:	4298      	cmp	r0, r3
 8005776:	d004      	beq.n	8005782 <_malloc_trim_r+0x46>
 8005778:	4628      	mov	r0, r5
 800577a:	f7fd f9bd 	bl	8002af8 <__malloc_unlock>
 800577e:	2000      	movs	r0, #0
 8005780:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005782:	4628      	mov	r0, r5
 8005784:	4279      	negs	r1, r7
 8005786:	f7fd fa07 	bl	8002b98 <_sbrk_r>
 800578a:	3001      	adds	r0, #1
 800578c:	d010      	beq.n	80057b0 <_malloc_trim_r+0x74>
 800578e:	f640 1384 	movw	r3, #2436	; 0x984
 8005792:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8005796:	68a1      	ldr	r1, [r4, #8]
 8005798:	681a      	ldr	r2, [r3, #0]
 800579a:	1bf6      	subs	r6, r6, r7
 800579c:	f046 0601 	orr.w	r6, r6, #1
 80057a0:	4628      	mov	r0, r5
 80057a2:	1bd7      	subs	r7, r2, r7
 80057a4:	604e      	str	r6, [r1, #4]
 80057a6:	601f      	str	r7, [r3, #0]
 80057a8:	f7fd f9a6 	bl	8002af8 <__malloc_unlock>
 80057ac:	2001      	movs	r0, #1
 80057ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80057b0:	4628      	mov	r0, r5
 80057b2:	2100      	movs	r1, #0
 80057b4:	f7fd f9f0 	bl	8002b98 <_sbrk_r>
 80057b8:	68a3      	ldr	r3, [r4, #8]
 80057ba:	1ac2      	subs	r2, r0, r3
 80057bc:	2a0f      	cmp	r2, #15
 80057be:	dddb      	ble.n	8005778 <_malloc_trim_r+0x3c>
 80057c0:	f640 043c 	movw	r4, #2108	; 0x83c
 80057c4:	f2c2 0400 	movt	r4, #8192	; 0x2000
 80057c8:	f640 1184 	movw	r1, #2436	; 0x984
 80057cc:	6824      	ldr	r4, [r4, #0]
 80057ce:	f2c2 0100 	movt	r1, #8192	; 0x2000
 80057d2:	f042 0201 	orr.w	r2, r2, #1
 80057d6:	1b00      	subs	r0, r0, r4
 80057d8:	605a      	str	r2, [r3, #4]
 80057da:	6008      	str	r0, [r1, #0]
 80057dc:	e7cc      	b.n	8005778 <_malloc_trim_r+0x3c>
 80057de:	bf00      	nop

080057e0 <_free_r>:
 80057e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80057e4:	460e      	mov	r6, r1
 80057e6:	4681      	mov	r9, r0
 80057e8:	2900      	cmp	r1, #0
 80057ea:	d060      	beq.n	80058ae <_free_r+0xce>
 80057ec:	f7fd f982 	bl	8002af4 <__malloc_lock>
 80057f0:	f856 1c04 	ldr.w	r1, [r6, #-4]
 80057f4:	f1a6 0408 	sub.w	r4, r6, #8
 80057f8:	f021 0301 	bic.w	r3, r1, #1
 80057fc:	18e2      	adds	r2, r4, r3
 80057fe:	f240 4530 	movw	r5, #1072	; 0x430
 8005802:	6857      	ldr	r7, [r2, #4]
 8005804:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8005808:	f027 0003 	bic.w	r0, r7, #3
 800580c:	68af      	ldr	r7, [r5, #8]
 800580e:	4297      	cmp	r7, r2
 8005810:	d063      	beq.n	80058da <_free_r+0xfa>
 8005812:	f011 0c01 	ands.w	ip, r1, #1
 8005816:	6050      	str	r0, [r2, #4]
 8005818:	bf18      	it	ne
 800581a:	2100      	movne	r1, #0
 800581c:	d111      	bne.n	8005842 <_free_r+0x62>
 800581e:	f856 1c08 	ldr.w	r1, [r6, #-8]
 8005822:	1a64      	subs	r4, r4, r1
 8005824:	f105 0808 	add.w	r8, r5, #8
 8005828:	68a6      	ldr	r6, [r4, #8]
 800582a:	4546      	cmp	r6, r8
 800582c:	bf18      	it	ne
 800582e:	f8d4 800c 	ldrne.w	r8, [r4, #12]
 8005832:	440b      	add	r3, r1
 8005834:	bf1d      	ittte	ne
 8005836:	f8c6 800c 	strne.w	r8, [r6, #12]
 800583a:	4661      	movne	r1, ip
 800583c:	f8c8 6008 	strne.w	r6, [r8, #8]
 8005840:	2101      	moveq	r1, #1
 8005842:	1816      	adds	r6, r2, r0
 8005844:	6876      	ldr	r6, [r6, #4]
 8005846:	07f6      	lsls	r6, r6, #31
 8005848:	d408      	bmi.n	800585c <_free_r+0x7c>
 800584a:	4403      	add	r3, r0
 800584c:	6890      	ldr	r0, [r2, #8]
 800584e:	b911      	cbnz	r1, 8005856 <_free_r+0x76>
 8005850:	4e49      	ldr	r6, [pc, #292]	; (8005978 <_free_r+0x198>)
 8005852:	42b0      	cmp	r0, r6
 8005854:	d060      	beq.n	8005918 <_free_r+0x138>
 8005856:	68d2      	ldr	r2, [r2, #12]
 8005858:	60c2      	str	r2, [r0, #12]
 800585a:	6090      	str	r0, [r2, #8]
 800585c:	f043 0201 	orr.w	r2, r3, #1
 8005860:	6062      	str	r2, [r4, #4]
 8005862:	50e3      	str	r3, [r4, r3]
 8005864:	b9f1      	cbnz	r1, 80058a4 <_free_r+0xc4>
 8005866:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800586a:	d322      	bcc.n	80058b2 <_free_r+0xd2>
 800586c:	0a5a      	lsrs	r2, r3, #9
 800586e:	2a04      	cmp	r2, #4
 8005870:	d85b      	bhi.n	800592a <_free_r+0x14a>
 8005872:	0998      	lsrs	r0, r3, #6
 8005874:	3038      	adds	r0, #56	; 0x38
 8005876:	0041      	lsls	r1, r0, #1
 8005878:	eb05 0581 	add.w	r5, r5, r1, lsl #2
 800587c:	f240 4130 	movw	r1, #1072	; 0x430
 8005880:	68aa      	ldr	r2, [r5, #8]
 8005882:	42aa      	cmp	r2, r5
 8005884:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8005888:	d05b      	beq.n	8005942 <_free_r+0x162>
 800588a:	6851      	ldr	r1, [r2, #4]
 800588c:	f021 0103 	bic.w	r1, r1, #3
 8005890:	428b      	cmp	r3, r1
 8005892:	d202      	bcs.n	800589a <_free_r+0xba>
 8005894:	6892      	ldr	r2, [r2, #8]
 8005896:	4295      	cmp	r5, r2
 8005898:	d1f7      	bne.n	800588a <_free_r+0xaa>
 800589a:	68d3      	ldr	r3, [r2, #12]
 800589c:	60e3      	str	r3, [r4, #12]
 800589e:	60a2      	str	r2, [r4, #8]
 80058a0:	609c      	str	r4, [r3, #8]
 80058a2:	60d4      	str	r4, [r2, #12]
 80058a4:	4648      	mov	r0, r9
 80058a6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80058aa:	f7fd b925 	b.w	8002af8 <__malloc_unlock>
 80058ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80058b2:	08db      	lsrs	r3, r3, #3
 80058b4:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 80058b8:	6868      	ldr	r0, [r5, #4]
 80058ba:	6891      	ldr	r1, [r2, #8]
 80058bc:	60e2      	str	r2, [r4, #12]
 80058be:	2601      	movs	r6, #1
 80058c0:	109b      	asrs	r3, r3, #2
 80058c2:	fa06 f303 	lsl.w	r3, r6, r3
 80058c6:	4318      	orrs	r0, r3
 80058c8:	60a1      	str	r1, [r4, #8]
 80058ca:	6068      	str	r0, [r5, #4]
 80058cc:	6094      	str	r4, [r2, #8]
 80058ce:	4648      	mov	r0, r9
 80058d0:	60cc      	str	r4, [r1, #12]
 80058d2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80058d6:	f7fd b90f 	b.w	8002af8 <__malloc_unlock>
 80058da:	07cf      	lsls	r7, r1, #31
 80058dc:	4418      	add	r0, r3
 80058de:	d407      	bmi.n	80058f0 <_free_r+0x110>
 80058e0:	f856 3c08 	ldr.w	r3, [r6, #-8]
 80058e4:	1ae4      	subs	r4, r4, r3
 80058e6:	4418      	add	r0, r3
 80058e8:	68a2      	ldr	r2, [r4, #8]
 80058ea:	68e3      	ldr	r3, [r4, #12]
 80058ec:	60d3      	str	r3, [r2, #12]
 80058ee:	609a      	str	r2, [r3, #8]
 80058f0:	f640 0238 	movw	r2, #2104	; 0x838
 80058f4:	f2c2 0200 	movt	r2, #8192	; 0x2000
 80058f8:	f040 0101 	orr.w	r1, r0, #1
 80058fc:	6813      	ldr	r3, [r2, #0]
 80058fe:	6061      	str	r1, [r4, #4]
 8005900:	4298      	cmp	r0, r3
 8005902:	60ac      	str	r4, [r5, #8]
 8005904:	d3ce      	bcc.n	80058a4 <_free_r+0xc4>
 8005906:	f640 1380 	movw	r3, #2432	; 0x980
 800590a:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800590e:	4648      	mov	r0, r9
 8005910:	6819      	ldr	r1, [r3, #0]
 8005912:	f7ff ff13 	bl	800573c <_malloc_trim_r>
 8005916:	e7c5      	b.n	80058a4 <_free_r+0xc4>
 8005918:	f043 0201 	orr.w	r2, r3, #1
 800591c:	616c      	str	r4, [r5, #20]
 800591e:	612c      	str	r4, [r5, #16]
 8005920:	60e0      	str	r0, [r4, #12]
 8005922:	60a0      	str	r0, [r4, #8]
 8005924:	6062      	str	r2, [r4, #4]
 8005926:	50e3      	str	r3, [r4, r3]
 8005928:	e7bc      	b.n	80058a4 <_free_r+0xc4>
 800592a:	2a14      	cmp	r2, #20
 800592c:	bf9c      	itt	ls
 800592e:	f102 005b 	addls.w	r0, r2, #91	; 0x5b
 8005932:	0041      	lslls	r1, r0, #1
 8005934:	d9a0      	bls.n	8005878 <_free_r+0x98>
 8005936:	2a54      	cmp	r2, #84	; 0x54
 8005938:	d80c      	bhi.n	8005954 <_free_r+0x174>
 800593a:	0b18      	lsrs	r0, r3, #12
 800593c:	306e      	adds	r0, #110	; 0x6e
 800593e:	0041      	lsls	r1, r0, #1
 8005940:	e79a      	b.n	8005878 <_free_r+0x98>
 8005942:	684b      	ldr	r3, [r1, #4]
 8005944:	1080      	asrs	r0, r0, #2
 8005946:	2501      	movs	r5, #1
 8005948:	fa05 f000 	lsl.w	r0, r5, r0
 800594c:	4303      	orrs	r3, r0
 800594e:	604b      	str	r3, [r1, #4]
 8005950:	4613      	mov	r3, r2
 8005952:	e7a3      	b.n	800589c <_free_r+0xbc>
 8005954:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8005958:	d803      	bhi.n	8005962 <_free_r+0x182>
 800595a:	0bd8      	lsrs	r0, r3, #15
 800595c:	3077      	adds	r0, #119	; 0x77
 800595e:	0041      	lsls	r1, r0, #1
 8005960:	e78a      	b.n	8005878 <_free_r+0x98>
 8005962:	f240 5154 	movw	r1, #1364	; 0x554
 8005966:	428a      	cmp	r2, r1
 8005968:	bf9d      	ittte	ls
 800596a:	0c98      	lsrls	r0, r3, #18
 800596c:	307c      	addls	r0, #124	; 0x7c
 800596e:	0041      	lslls	r1, r0, #1
 8005970:	21fc      	movhi	r1, #252	; 0xfc
 8005972:	bf88      	it	hi
 8005974:	207e      	movhi	r0, #126	; 0x7e
 8005976:	e77f      	b.n	8005878 <_free_r+0x98>
 8005978:	20000438 	.word	0x20000438

0800597c <__sfvwrite_r>:
 800597c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005980:	6893      	ldr	r3, [r2, #8]
 8005982:	b083      	sub	sp, #12
 8005984:	4616      	mov	r6, r2
 8005986:	4681      	mov	r9, r0
 8005988:	460c      	mov	r4, r1
 800598a:	b33b      	cbz	r3, 80059dc <__sfvwrite_r+0x60>
 800598c:	898b      	ldrh	r3, [r1, #12]
 800598e:	0719      	lsls	r1, r3, #28
 8005990:	d528      	bpl.n	80059e4 <__sfvwrite_r+0x68>
 8005992:	6922      	ldr	r2, [r4, #16]
 8005994:	b332      	cbz	r2, 80059e4 <__sfvwrite_r+0x68>
 8005996:	f003 0202 	and.w	r2, r3, #2
 800599a:	b292      	uxth	r2, r2
 800599c:	6835      	ldr	r5, [r6, #0]
 800599e:	2a00      	cmp	r2, #0
 80059a0:	d02e      	beq.n	8005a00 <__sfvwrite_r+0x84>
 80059a2:	f04f 0a00 	mov.w	sl, #0
 80059a6:	f44f 4b7c 	mov.w	fp, #64512	; 0xfc00
 80059aa:	46d0      	mov	r8, sl
 80059ac:	f6c7 7bff 	movt	fp, #32767	; 0x7fff
 80059b0:	45d8      	cmp	r8, fp
 80059b2:	bf34      	ite	cc
 80059b4:	4643      	movcc	r3, r8
 80059b6:	465b      	movcs	r3, fp
 80059b8:	4652      	mov	r2, sl
 80059ba:	4648      	mov	r0, r9
 80059bc:	f1b8 0f00 	cmp.w	r8, #0
 80059c0:	d04f      	beq.n	8005a62 <__sfvwrite_r+0xe6>
 80059c2:	69e1      	ldr	r1, [r4, #28]
 80059c4:	6a67      	ldr	r7, [r4, #36]	; 0x24
 80059c6:	47b8      	blx	r7
 80059c8:	2800      	cmp	r0, #0
 80059ca:	dd56      	ble.n	8005a7a <__sfvwrite_r+0xfe>
 80059cc:	68b3      	ldr	r3, [r6, #8]
 80059ce:	1a1b      	subs	r3, r3, r0
 80059d0:	4482      	add	sl, r0
 80059d2:	ebc0 0808 	rsb	r8, r0, r8
 80059d6:	60b3      	str	r3, [r6, #8]
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d1e9      	bne.n	80059b0 <__sfvwrite_r+0x34>
 80059dc:	2000      	movs	r0, #0
 80059de:	b003      	add	sp, #12
 80059e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059e4:	4648      	mov	r0, r9
 80059e6:	4621      	mov	r1, r4
 80059e8:	f7fe fce2 	bl	80043b0 <__swsetup_r>
 80059ec:	2800      	cmp	r0, #0
 80059ee:	f040 8147 	bne.w	8005c80 <__sfvwrite_r+0x304>
 80059f2:	89a3      	ldrh	r3, [r4, #12]
 80059f4:	6835      	ldr	r5, [r6, #0]
 80059f6:	f003 0202 	and.w	r2, r3, #2
 80059fa:	b292      	uxth	r2, r2
 80059fc:	2a00      	cmp	r2, #0
 80059fe:	d1d0      	bne.n	80059a2 <__sfvwrite_r+0x26>
 8005a00:	f013 0a01 	ands.w	sl, r3, #1
 8005a04:	d142      	bne.n	8005a8c <__sfvwrite_r+0x110>
 8005a06:	46d0      	mov	r8, sl
 8005a08:	f1b8 0f00 	cmp.w	r8, #0
 8005a0c:	d023      	beq.n	8005a56 <__sfvwrite_r+0xda>
 8005a0e:	059a      	lsls	r2, r3, #22
 8005a10:	68a7      	ldr	r7, [r4, #8]
 8005a12:	d576      	bpl.n	8005b02 <__sfvwrite_r+0x186>
 8005a14:	45b8      	cmp	r8, r7
 8005a16:	f0c0 80a4 	bcc.w	8005b62 <__sfvwrite_r+0x1e6>
 8005a1a:	f413 6f90 	tst.w	r3, #1152	; 0x480
 8005a1e:	f040 80b2 	bne.w	8005b86 <__sfvwrite_r+0x20a>
 8005a22:	6820      	ldr	r0, [r4, #0]
 8005a24:	46bb      	mov	fp, r7
 8005a26:	4651      	mov	r1, sl
 8005a28:	465a      	mov	r2, fp
 8005a2a:	f000 fa1b 	bl	8005e64 <memmove>
 8005a2e:	68a2      	ldr	r2, [r4, #8]
 8005a30:	6821      	ldr	r1, [r4, #0]
 8005a32:	1bd2      	subs	r2, r2, r7
 8005a34:	eb01 030b 	add.w	r3, r1, fp
 8005a38:	60a2      	str	r2, [r4, #8]
 8005a3a:	6023      	str	r3, [r4, #0]
 8005a3c:	4642      	mov	r2, r8
 8005a3e:	68b3      	ldr	r3, [r6, #8]
 8005a40:	1a9b      	subs	r3, r3, r2
 8005a42:	4492      	add	sl, r2
 8005a44:	ebc2 0808 	rsb	r8, r2, r8
 8005a48:	60b3      	str	r3, [r6, #8]
 8005a4a:	2b00      	cmp	r3, #0
 8005a4c:	d0c6      	beq.n	80059dc <__sfvwrite_r+0x60>
 8005a4e:	89a3      	ldrh	r3, [r4, #12]
 8005a50:	f1b8 0f00 	cmp.w	r8, #0
 8005a54:	d1db      	bne.n	8005a0e <__sfvwrite_r+0x92>
 8005a56:	f8d5 a000 	ldr.w	sl, [r5]
 8005a5a:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8005a5e:	3508      	adds	r5, #8
 8005a60:	e7d2      	b.n	8005a08 <__sfvwrite_r+0x8c>
 8005a62:	f8d5 a000 	ldr.w	sl, [r5]
 8005a66:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8005a6a:	3508      	adds	r5, #8
 8005a6c:	e7a0      	b.n	80059b0 <__sfvwrite_r+0x34>
 8005a6e:	4648      	mov	r0, r9
 8005a70:	4621      	mov	r1, r4
 8005a72:	f7ff fe4d 	bl	8005710 <_fflush_r>
 8005a76:	2800      	cmp	r0, #0
 8005a78:	d059      	beq.n	8005b2e <__sfvwrite_r+0x1b2>
 8005a7a:	89a3      	ldrh	r3, [r4, #12]
 8005a7c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005a80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005a84:	81a3      	strh	r3, [r4, #12]
 8005a86:	b003      	add	sp, #12
 8005a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a8c:	4692      	mov	sl, r2
 8005a8e:	9201      	str	r2, [sp, #4]
 8005a90:	4693      	mov	fp, r2
 8005a92:	4690      	mov	r8, r2
 8005a94:	f1b8 0f00 	cmp.w	r8, #0
 8005a98:	d02b      	beq.n	8005af2 <__sfvwrite_r+0x176>
 8005a9a:	9f01      	ldr	r7, [sp, #4]
 8005a9c:	2f00      	cmp	r7, #0
 8005a9e:	d064      	beq.n	8005b6a <__sfvwrite_r+0x1ee>
 8005aa0:	6820      	ldr	r0, [r4, #0]
 8005aa2:	6921      	ldr	r1, [r4, #16]
 8005aa4:	f8d4 c008 	ldr.w	ip, [r4, #8]
 8005aa8:	6962      	ldr	r2, [r4, #20]
 8005aaa:	45c2      	cmp	sl, r8
 8005aac:	bf34      	ite	cc
 8005aae:	4653      	movcc	r3, sl
 8005ab0:	4643      	movcs	r3, r8
 8005ab2:	4288      	cmp	r0, r1
 8005ab4:	461f      	mov	r7, r3
 8005ab6:	d903      	bls.n	8005ac0 <__sfvwrite_r+0x144>
 8005ab8:	4494      	add	ip, r2
 8005aba:	4563      	cmp	r3, ip
 8005abc:	f300 80ae 	bgt.w	8005c1c <__sfvwrite_r+0x2a0>
 8005ac0:	4293      	cmp	r3, r2
 8005ac2:	db36      	blt.n	8005b32 <__sfvwrite_r+0x1b6>
 8005ac4:	4613      	mov	r3, r2
 8005ac6:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8005ac8:	69e1      	ldr	r1, [r4, #28]
 8005aca:	4648      	mov	r0, r9
 8005acc:	465a      	mov	r2, fp
 8005ace:	47b8      	blx	r7
 8005ad0:	1e07      	subs	r7, r0, #0
 8005ad2:	ddd2      	ble.n	8005a7a <__sfvwrite_r+0xfe>
 8005ad4:	ebba 0a07 	subs.w	sl, sl, r7
 8005ad8:	d03a      	beq.n	8005b50 <__sfvwrite_r+0x1d4>
 8005ada:	68b3      	ldr	r3, [r6, #8]
 8005adc:	1bdb      	subs	r3, r3, r7
 8005ade:	44bb      	add	fp, r7
 8005ae0:	ebc7 0808 	rsb	r8, r7, r8
 8005ae4:	60b3      	str	r3, [r6, #8]
 8005ae6:	2b00      	cmp	r3, #0
 8005ae8:	f43f af78 	beq.w	80059dc <__sfvwrite_r+0x60>
 8005aec:	f1b8 0f00 	cmp.w	r8, #0
 8005af0:	d1d3      	bne.n	8005a9a <__sfvwrite_r+0x11e>
 8005af2:	2700      	movs	r7, #0
 8005af4:	f8d5 b000 	ldr.w	fp, [r5]
 8005af8:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8005afc:	9701      	str	r7, [sp, #4]
 8005afe:	3508      	adds	r5, #8
 8005b00:	e7c8      	b.n	8005a94 <__sfvwrite_r+0x118>
 8005b02:	6820      	ldr	r0, [r4, #0]
 8005b04:	6923      	ldr	r3, [r4, #16]
 8005b06:	4298      	cmp	r0, r3
 8005b08:	d802      	bhi.n	8005b10 <__sfvwrite_r+0x194>
 8005b0a:	6963      	ldr	r3, [r4, #20]
 8005b0c:	4598      	cmp	r8, r3
 8005b0e:	d272      	bcs.n	8005bf6 <__sfvwrite_r+0x27a>
 8005b10:	45b8      	cmp	r8, r7
 8005b12:	bf38      	it	cc
 8005b14:	4647      	movcc	r7, r8
 8005b16:	463a      	mov	r2, r7
 8005b18:	4651      	mov	r1, sl
 8005b1a:	f000 f9a3 	bl	8005e64 <memmove>
 8005b1e:	68a3      	ldr	r3, [r4, #8]
 8005b20:	6822      	ldr	r2, [r4, #0]
 8005b22:	1bdb      	subs	r3, r3, r7
 8005b24:	443a      	add	r2, r7
 8005b26:	60a3      	str	r3, [r4, #8]
 8005b28:	6022      	str	r2, [r4, #0]
 8005b2a:	2b00      	cmp	r3, #0
 8005b2c:	d09f      	beq.n	8005a6e <__sfvwrite_r+0xf2>
 8005b2e:	463a      	mov	r2, r7
 8005b30:	e785      	b.n	8005a3e <__sfvwrite_r+0xc2>
 8005b32:	461a      	mov	r2, r3
 8005b34:	4659      	mov	r1, fp
 8005b36:	9300      	str	r3, [sp, #0]
 8005b38:	f000 f994 	bl	8005e64 <memmove>
 8005b3c:	9b00      	ldr	r3, [sp, #0]
 8005b3e:	68a1      	ldr	r1, [r4, #8]
 8005b40:	6822      	ldr	r2, [r4, #0]
 8005b42:	1ac9      	subs	r1, r1, r3
 8005b44:	ebba 0a07 	subs.w	sl, sl, r7
 8005b48:	4413      	add	r3, r2
 8005b4a:	60a1      	str	r1, [r4, #8]
 8005b4c:	6023      	str	r3, [r4, #0]
 8005b4e:	d1c4      	bne.n	8005ada <__sfvwrite_r+0x15e>
 8005b50:	4648      	mov	r0, r9
 8005b52:	4621      	mov	r1, r4
 8005b54:	f7ff fddc 	bl	8005710 <_fflush_r>
 8005b58:	2800      	cmp	r0, #0
 8005b5a:	d18e      	bne.n	8005a7a <__sfvwrite_r+0xfe>
 8005b5c:	f8cd a004 	str.w	sl, [sp, #4]
 8005b60:	e7bb      	b.n	8005ada <__sfvwrite_r+0x15e>
 8005b62:	6820      	ldr	r0, [r4, #0]
 8005b64:	4647      	mov	r7, r8
 8005b66:	46c3      	mov	fp, r8
 8005b68:	e75d      	b.n	8005a26 <__sfvwrite_r+0xaa>
 8005b6a:	4658      	mov	r0, fp
 8005b6c:	210a      	movs	r1, #10
 8005b6e:	4642      	mov	r2, r8
 8005b70:	f000 f930 	bl	8005dd4 <memchr>
 8005b74:	2800      	cmp	r0, #0
 8005b76:	d07e      	beq.n	8005c76 <__sfvwrite_r+0x2fa>
 8005b78:	f100 0a01 	add.w	sl, r0, #1
 8005b7c:	2701      	movs	r7, #1
 8005b7e:	ebcb 0a0a 	rsb	sl, fp, sl
 8005b82:	9701      	str	r7, [sp, #4]
 8005b84:	e78c      	b.n	8005aa0 <__sfvwrite_r+0x124>
 8005b86:	6822      	ldr	r2, [r4, #0]
 8005b88:	6921      	ldr	r1, [r4, #16]
 8005b8a:	6967      	ldr	r7, [r4, #20]
 8005b8c:	ebc1 0c02 	rsb	ip, r1, r2
 8005b90:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8005b94:	f10c 0201 	add.w	r2, ip, #1
 8005b98:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8005b9c:	4442      	add	r2, r8
 8005b9e:	107f      	asrs	r7, r7, #1
 8005ba0:	4297      	cmp	r7, r2
 8005ba2:	bf34      	ite	cc
 8005ba4:	4617      	movcc	r7, r2
 8005ba6:	463a      	movcs	r2, r7
 8005ba8:	055b      	lsls	r3, r3, #21
 8005baa:	d54d      	bpl.n	8005c48 <__sfvwrite_r+0x2cc>
 8005bac:	4611      	mov	r1, r2
 8005bae:	4648      	mov	r0, r9
 8005bb0:	f8cd c000 	str.w	ip, [sp]
 8005bb4:	f7fc fcec 	bl	8002590 <_malloc_r>
 8005bb8:	f8dd c000 	ldr.w	ip, [sp]
 8005bbc:	4683      	mov	fp, r0
 8005bbe:	2800      	cmp	r0, #0
 8005bc0:	d061      	beq.n	8005c86 <__sfvwrite_r+0x30a>
 8005bc2:	4662      	mov	r2, ip
 8005bc4:	6921      	ldr	r1, [r4, #16]
 8005bc6:	f8cd c000 	str.w	ip, [sp]
 8005bca:	f7fa fb41 	bl	8000250 <memcpy>
 8005bce:	89a2      	ldrh	r2, [r4, #12]
 8005bd0:	f8dd c000 	ldr.w	ip, [sp]
 8005bd4:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8005bd8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005bdc:	81a2      	strh	r2, [r4, #12]
 8005bde:	eb0b 000c 	add.w	r0, fp, ip
 8005be2:	ebcc 0207 	rsb	r2, ip, r7
 8005be6:	f8c4 b010 	str.w	fp, [r4, #16]
 8005bea:	6167      	str	r7, [r4, #20]
 8005bec:	6020      	str	r0, [r4, #0]
 8005bee:	60a2      	str	r2, [r4, #8]
 8005bf0:	4647      	mov	r7, r8
 8005bf2:	46c3      	mov	fp, r8
 8005bf4:	e717      	b.n	8005a26 <__sfvwrite_r+0xaa>
 8005bf6:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8005bfa:	4590      	cmp	r8, r2
 8005bfc:	bf38      	it	cc
 8005bfe:	4642      	movcc	r2, r8
 8005c00:	fb92 f2f3 	sdiv	r2, r2, r3
 8005c04:	fb02 f303 	mul.w	r3, r2, r3
 8005c08:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8005c0a:	69e1      	ldr	r1, [r4, #28]
 8005c0c:	4648      	mov	r0, r9
 8005c0e:	4652      	mov	r2, sl
 8005c10:	47b8      	blx	r7
 8005c12:	2800      	cmp	r0, #0
 8005c14:	f77f af31 	ble.w	8005a7a <__sfvwrite_r+0xfe>
 8005c18:	4602      	mov	r2, r0
 8005c1a:	e710      	b.n	8005a3e <__sfvwrite_r+0xc2>
 8005c1c:	4662      	mov	r2, ip
 8005c1e:	4659      	mov	r1, fp
 8005c20:	f8cd c000 	str.w	ip, [sp]
 8005c24:	f000 f91e 	bl	8005e64 <memmove>
 8005c28:	f8dd c000 	ldr.w	ip, [sp]
 8005c2c:	6823      	ldr	r3, [r4, #0]
 8005c2e:	4463      	add	r3, ip
 8005c30:	6023      	str	r3, [r4, #0]
 8005c32:	4648      	mov	r0, r9
 8005c34:	4621      	mov	r1, r4
 8005c36:	f7ff fd6b 	bl	8005710 <_fflush_r>
 8005c3a:	f8dd c000 	ldr.w	ip, [sp]
 8005c3e:	2800      	cmp	r0, #0
 8005c40:	f47f af1b 	bne.w	8005a7a <__sfvwrite_r+0xfe>
 8005c44:	4667      	mov	r7, ip
 8005c46:	e745      	b.n	8005ad4 <__sfvwrite_r+0x158>
 8005c48:	4648      	mov	r0, r9
 8005c4a:	f8cd c000 	str.w	ip, [sp]
 8005c4e:	f000 fc91 	bl	8006574 <_realloc_r>
 8005c52:	f8dd c000 	ldr.w	ip, [sp]
 8005c56:	4683      	mov	fp, r0
 8005c58:	2800      	cmp	r0, #0
 8005c5a:	d1c0      	bne.n	8005bde <__sfvwrite_r+0x262>
 8005c5c:	4648      	mov	r0, r9
 8005c5e:	6921      	ldr	r1, [r4, #16]
 8005c60:	f7ff fdbe 	bl	80057e0 <_free_r>
 8005c64:	89a3      	ldrh	r3, [r4, #12]
 8005c66:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005c6a:	041b      	lsls	r3, r3, #16
 8005c6c:	220c      	movs	r2, #12
 8005c6e:	0c1b      	lsrs	r3, r3, #16
 8005c70:	f8c9 2000 	str.w	r2, [r9]
 8005c74:	e702      	b.n	8005a7c <__sfvwrite_r+0x100>
 8005c76:	2701      	movs	r7, #1
 8005c78:	f108 0a01 	add.w	sl, r8, #1
 8005c7c:	9701      	str	r7, [sp, #4]
 8005c7e:	e70f      	b.n	8005aa0 <__sfvwrite_r+0x124>
 8005c80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c84:	e6ab      	b.n	80059de <__sfvwrite_r+0x62>
 8005c86:	230c      	movs	r3, #12
 8005c88:	f8c9 3000 	str.w	r3, [r9]
 8005c8c:	89a3      	ldrh	r3, [r4, #12]
 8005c8e:	e6f5      	b.n	8005a7c <__sfvwrite_r+0x100>

08005c90 <__locale_charset>:
 8005c90:	f640 0078 	movw	r0, #2168	; 0x878
 8005c94:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8005c98:	4770      	bx	lr
 8005c9a:	bf00      	nop

08005c9c <__locale_mb_cur_max>:
 8005c9c:	f640 0398 	movw	r3, #2200	; 0x898
 8005ca0:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8005ca4:	6818      	ldr	r0, [r3, #0]
 8005ca6:	4770      	bx	lr

08005ca8 <_localeconv_r>:
 8005ca8:	f640 0040 	movw	r0, #2112	; 0x840
 8005cac:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8005cb0:	4770      	bx	lr
 8005cb2:	bf00      	nop

08005cb4 <_lseek_r>:
 8005cb4:	b570      	push	{r4, r5, r6, lr}
 8005cb6:	f640 14ac 	movw	r4, #2476	; 0x9ac
 8005cba:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8005cbe:	4606      	mov	r6, r0
 8005cc0:	2500      	movs	r5, #0
 8005cc2:	4608      	mov	r0, r1
 8005cc4:	4611      	mov	r1, r2
 8005cc6:	461a      	mov	r2, r3
 8005cc8:	6025      	str	r5, [r4, #0]
 8005cca:	f7fb fc55 	bl	8001578 <_lseek>
 8005cce:	1c43      	adds	r3, r0, #1
 8005cd0:	d000      	beq.n	8005cd4 <_lseek_r+0x20>
 8005cd2:	bd70      	pop	{r4, r5, r6, pc}
 8005cd4:	6823      	ldr	r3, [r4, #0]
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d0fb      	beq.n	8005cd2 <_lseek_r+0x1e>
 8005cda:	6033      	str	r3, [r6, #0]
 8005cdc:	bd70      	pop	{r4, r5, r6, pc}
 8005cde:	bf00      	nop

08005ce0 <__smakebuf_r>:
 8005ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ce2:	898b      	ldrh	r3, [r1, #12]
 8005ce4:	b29a      	uxth	r2, r3
 8005ce6:	0796      	lsls	r6, r2, #30
 8005ce8:	b091      	sub	sp, #68	; 0x44
 8005cea:	460c      	mov	r4, r1
 8005cec:	4605      	mov	r5, r0
 8005cee:	d43a      	bmi.n	8005d66 <__smakebuf_r+0x86>
 8005cf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005cf4:	2900      	cmp	r1, #0
 8005cf6:	db17      	blt.n	8005d28 <__smakebuf_r+0x48>
 8005cf8:	aa01      	add	r2, sp, #4
 8005cfa:	f000 ff2f 	bl	8006b5c <_fstat_r>
 8005cfe:	2800      	cmp	r0, #0
 8005d00:	db10      	blt.n	8005d24 <__smakebuf_r+0x44>
 8005d02:	9b02      	ldr	r3, [sp, #8]
 8005d04:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8005d08:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
 8005d0c:	424f      	negs	r7, r1
 8005d0e:	414f      	adcs	r7, r1
 8005d10:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005d14:	d02f      	beq.n	8005d76 <__smakebuf_r+0x96>
 8005d16:	89a3      	ldrh	r3, [r4, #12]
 8005d18:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8005d1c:	81a3      	strh	r3, [r4, #12]
 8005d1e:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8005d22:	e00b      	b.n	8005d3c <__smakebuf_r+0x5c>
 8005d24:	89a3      	ldrh	r3, [r4, #12]
 8005d26:	b29a      	uxth	r2, r3
 8005d28:	f012 0f80 	tst.w	r2, #128	; 0x80
 8005d2c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8005d30:	81a3      	strh	r3, [r4, #12]
 8005d32:	bf14      	ite	ne
 8005d34:	2640      	movne	r6, #64	; 0x40
 8005d36:	f44f 6680 	moveq.w	r6, #1024	; 0x400
 8005d3a:	2700      	movs	r7, #0
 8005d3c:	4628      	mov	r0, r5
 8005d3e:	4631      	mov	r1, r6
 8005d40:	f7fc fc26 	bl	8002590 <_malloc_r>
 8005d44:	2800      	cmp	r0, #0
 8005d46:	d030      	beq.n	8005daa <__smakebuf_r+0xca>
 8005d48:	89a2      	ldrh	r2, [r4, #12]
 8005d4a:	f242 4339 	movw	r3, #9273	; 0x2439
 8005d4e:	f6c0 0300 	movt	r3, #2048	; 0x800
 8005d52:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005d56:	63eb      	str	r3, [r5, #60]	; 0x3c
 8005d58:	6020      	str	r0, [r4, #0]
 8005d5a:	6120      	str	r0, [r4, #16]
 8005d5c:	6166      	str	r6, [r4, #20]
 8005d5e:	81a2      	strh	r2, [r4, #12]
 8005d60:	b9bf      	cbnz	r7, 8005d92 <__smakebuf_r+0xb2>
 8005d62:	b011      	add	sp, #68	; 0x44
 8005d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d66:	f101 0343 	add.w	r3, r1, #67	; 0x43
 8005d6a:	2201      	movs	r2, #1
 8005d6c:	600b      	str	r3, [r1, #0]
 8005d6e:	610b      	str	r3, [r1, #16]
 8005d70:	614a      	str	r2, [r1, #20]
 8005d72:	b011      	add	sp, #68	; 0x44
 8005d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d76:	f642 5341 	movw	r3, #11585	; 0x2d41
 8005d7a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005d7c:	f6c0 0300 	movt	r3, #2048	; 0x800
 8005d80:	429a      	cmp	r2, r3
 8005d82:	d1c8      	bne.n	8005d16 <__smakebuf_r+0x36>
 8005d84:	89a3      	ldrh	r3, [r4, #12]
 8005d86:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8005d8a:	4333      	orrs	r3, r6
 8005d8c:	81a3      	strh	r3, [r4, #12]
 8005d8e:	64e6      	str	r6, [r4, #76]	; 0x4c
 8005d90:	e7d4      	b.n	8005d3c <__smakebuf_r+0x5c>
 8005d92:	4628      	mov	r0, r5
 8005d94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005d98:	f000 fef4 	bl	8006b84 <_isatty_r>
 8005d9c:	2800      	cmp	r0, #0
 8005d9e:	d0e0      	beq.n	8005d62 <__smakebuf_r+0x82>
 8005da0:	89a3      	ldrh	r3, [r4, #12]
 8005da2:	f043 0301 	orr.w	r3, r3, #1
 8005da6:	81a3      	strh	r3, [r4, #12]
 8005da8:	e7db      	b.n	8005d62 <__smakebuf_r+0x82>
 8005daa:	89a3      	ldrh	r3, [r4, #12]
 8005dac:	059a      	lsls	r2, r3, #22
 8005dae:	d4d8      	bmi.n	8005d62 <__smakebuf_r+0x82>
 8005db0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005db4:	f043 0302 	orr.w	r3, r3, #2
 8005db8:	2101      	movs	r1, #1
 8005dba:	81a3      	strh	r3, [r4, #12]
 8005dbc:	6022      	str	r2, [r4, #0]
 8005dbe:	6122      	str	r2, [r4, #16]
 8005dc0:	6161      	str	r1, [r4, #20]
 8005dc2:	e7ce      	b.n	8005d62 <__smakebuf_r+0x82>

08005dc4 <malloc>:
 8005dc4:	f240 4328 	movw	r3, #1064	; 0x428
 8005dc8:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8005dcc:	4601      	mov	r1, r0
 8005dce:	6818      	ldr	r0, [r3, #0]
 8005dd0:	f7fc bbde 	b.w	8002590 <_malloc_r>

08005dd4 <memchr>:
 8005dd4:	0783      	lsls	r3, r0, #30
 8005dd6:	b470      	push	{r4, r5, r6}
 8005dd8:	b2c9      	uxtb	r1, r1
 8005dda:	d03f      	beq.n	8005e5c <memchr+0x88>
 8005ddc:	1e54      	subs	r4, r2, #1
 8005dde:	b32a      	cbz	r2, 8005e2c <memchr+0x58>
 8005de0:	7803      	ldrb	r3, [r0, #0]
 8005de2:	428b      	cmp	r3, r1
 8005de4:	d023      	beq.n	8005e2e <memchr+0x5a>
 8005de6:	1c43      	adds	r3, r0, #1
 8005de8:	e004      	b.n	8005df4 <memchr+0x20>
 8005dea:	b1fc      	cbz	r4, 8005e2c <memchr+0x58>
 8005dec:	7804      	ldrb	r4, [r0, #0]
 8005dee:	428c      	cmp	r4, r1
 8005df0:	d01d      	beq.n	8005e2e <memchr+0x5a>
 8005df2:	4614      	mov	r4, r2
 8005df4:	f013 0f03 	tst.w	r3, #3
 8005df8:	4618      	mov	r0, r3
 8005dfa:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
 8005dfe:	f103 0301 	add.w	r3, r3, #1
 8005e02:	d1f2      	bne.n	8005dea <memchr+0x16>
 8005e04:	2c03      	cmp	r4, #3
 8005e06:	d814      	bhi.n	8005e32 <memchr+0x5e>
 8005e08:	1e65      	subs	r5, r4, #1
 8005e0a:	b34c      	cbz	r4, 8005e60 <memchr+0x8c>
 8005e0c:	7803      	ldrb	r3, [r0, #0]
 8005e0e:	428b      	cmp	r3, r1
 8005e10:	d00d      	beq.n	8005e2e <memchr+0x5a>
 8005e12:	1c42      	adds	r2, r0, #1
 8005e14:	2300      	movs	r3, #0
 8005e16:	e002      	b.n	8005e1e <memchr+0x4a>
 8005e18:	7804      	ldrb	r4, [r0, #0]
 8005e1a:	428c      	cmp	r4, r1
 8005e1c:	d007      	beq.n	8005e2e <memchr+0x5a>
 8005e1e:	42ab      	cmp	r3, r5
 8005e20:	4610      	mov	r0, r2
 8005e22:	f103 0301 	add.w	r3, r3, #1
 8005e26:	f102 0201 	add.w	r2, r2, #1
 8005e2a:	d1f5      	bne.n	8005e18 <memchr+0x44>
 8005e2c:	2000      	movs	r0, #0
 8005e2e:	bc70      	pop	{r4, r5, r6}
 8005e30:	4770      	bx	lr
 8005e32:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
 8005e36:	4603      	mov	r3, r0
 8005e38:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
 8005e3c:	4618      	mov	r0, r3
 8005e3e:	3304      	adds	r3, #4
 8005e40:	6802      	ldr	r2, [r0, #0]
 8005e42:	4072      	eors	r2, r6
 8005e44:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
 8005e48:	ea25 0202 	bic.w	r2, r5, r2
 8005e4c:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8005e50:	d1da      	bne.n	8005e08 <memchr+0x34>
 8005e52:	3c04      	subs	r4, #4
 8005e54:	2c03      	cmp	r4, #3
 8005e56:	4618      	mov	r0, r3
 8005e58:	d8f0      	bhi.n	8005e3c <memchr+0x68>
 8005e5a:	e7d5      	b.n	8005e08 <memchr+0x34>
 8005e5c:	4614      	mov	r4, r2
 8005e5e:	e7d1      	b.n	8005e04 <memchr+0x30>
 8005e60:	4620      	mov	r0, r4
 8005e62:	e7e4      	b.n	8005e2e <memchr+0x5a>

08005e64 <memmove>:
 8005e64:	4288      	cmp	r0, r1
 8005e66:	b4f0      	push	{r4, r5, r6, r7}
 8005e68:	d910      	bls.n	8005e8c <memmove+0x28>
 8005e6a:	188c      	adds	r4, r1, r2
 8005e6c:	42a0      	cmp	r0, r4
 8005e6e:	d20d      	bcs.n	8005e8c <memmove+0x28>
 8005e70:	1885      	adds	r5, r0, r2
 8005e72:	1e53      	subs	r3, r2, #1
 8005e74:	b142      	cbz	r2, 8005e88 <memmove+0x24>
 8005e76:	4621      	mov	r1, r4
 8005e78:	462a      	mov	r2, r5
 8005e7a:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
 8005e7e:	3b01      	subs	r3, #1
 8005e80:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005e84:	1c5c      	adds	r4, r3, #1
 8005e86:	d1f8      	bne.n	8005e7a <memmove+0x16>
 8005e88:	bcf0      	pop	{r4, r5, r6, r7}
 8005e8a:	4770      	bx	lr
 8005e8c:	2a0f      	cmp	r2, #15
 8005e8e:	d940      	bls.n	8005f12 <memmove+0xae>
 8005e90:	ea40 0301 	orr.w	r3, r0, r1
 8005e94:	079b      	lsls	r3, r3, #30
 8005e96:	d140      	bne.n	8005f1a <memmove+0xb6>
 8005e98:	f1a2 0710 	sub.w	r7, r2, #16
 8005e9c:	093f      	lsrs	r7, r7, #4
 8005e9e:	eb00 1607 	add.w	r6, r0, r7, lsl #4
 8005ea2:	3610      	adds	r6, #16
 8005ea4:	460c      	mov	r4, r1
 8005ea6:	4603      	mov	r3, r0
 8005ea8:	6825      	ldr	r5, [r4, #0]
 8005eaa:	601d      	str	r5, [r3, #0]
 8005eac:	6865      	ldr	r5, [r4, #4]
 8005eae:	605d      	str	r5, [r3, #4]
 8005eb0:	68a5      	ldr	r5, [r4, #8]
 8005eb2:	609d      	str	r5, [r3, #8]
 8005eb4:	68e5      	ldr	r5, [r4, #12]
 8005eb6:	3310      	adds	r3, #16
 8005eb8:	f843 5c04 	str.w	r5, [r3, #-4]
 8005ebc:	42b3      	cmp	r3, r6
 8005ebe:	f104 0410 	add.w	r4, r4, #16
 8005ec2:	d1f1      	bne.n	8005ea8 <memmove+0x44>
 8005ec4:	1c7b      	adds	r3, r7, #1
 8005ec6:	f002 0c0f 	and.w	ip, r2, #15
 8005eca:	011b      	lsls	r3, r3, #4
 8005ecc:	f1bc 0f03 	cmp.w	ip, #3
 8005ed0:	4419      	add	r1, r3
 8005ed2:	4403      	add	r3, r0
 8005ed4:	d923      	bls.n	8005f1e <memmove+0xba>
 8005ed6:	460e      	mov	r6, r1
 8005ed8:	461d      	mov	r5, r3
 8005eda:	4664      	mov	r4, ip
 8005edc:	f856 7b04 	ldr.w	r7, [r6], #4
 8005ee0:	3c04      	subs	r4, #4
 8005ee2:	2c03      	cmp	r4, #3
 8005ee4:	f845 7b04 	str.w	r7, [r5], #4
 8005ee8:	d8f8      	bhi.n	8005edc <memmove+0x78>
 8005eea:	f1ac 0404 	sub.w	r4, ip, #4
 8005eee:	f024 0403 	bic.w	r4, r4, #3
 8005ef2:	3404      	adds	r4, #4
 8005ef4:	f002 0203 	and.w	r2, r2, #3
 8005ef8:	4423      	add	r3, r4
 8005efa:	4421      	add	r1, r4
 8005efc:	2a00      	cmp	r2, #0
 8005efe:	d0c3      	beq.n	8005e88 <memmove+0x24>
 8005f00:	441a      	add	r2, r3
 8005f02:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005f06:	f803 4b01 	strb.w	r4, [r3], #1
 8005f0a:	4293      	cmp	r3, r2
 8005f0c:	d1f9      	bne.n	8005f02 <memmove+0x9e>
 8005f0e:	bcf0      	pop	{r4, r5, r6, r7}
 8005f10:	4770      	bx	lr
 8005f12:	4603      	mov	r3, r0
 8005f14:	2a00      	cmp	r2, #0
 8005f16:	d1f3      	bne.n	8005f00 <memmove+0x9c>
 8005f18:	e7b6      	b.n	8005e88 <memmove+0x24>
 8005f1a:	4603      	mov	r3, r0
 8005f1c:	e7f0      	b.n	8005f00 <memmove+0x9c>
 8005f1e:	4662      	mov	r2, ip
 8005f20:	2a00      	cmp	r2, #0
 8005f22:	d1ed      	bne.n	8005f00 <memmove+0x9c>
 8005f24:	e7b0      	b.n	8005e88 <memmove+0x24>
 8005f26:	bf00      	nop

08005f28 <_Balloc>:
 8005f28:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8005f2a:	b570      	push	{r4, r5, r6, lr}
 8005f2c:	4605      	mov	r5, r0
 8005f2e:	460c      	mov	r4, r1
 8005f30:	b14a      	cbz	r2, 8005f46 <_Balloc+0x1e>
 8005f32:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
 8005f36:	b180      	cbz	r0, 8005f5a <_Balloc+0x32>
 8005f38:	6801      	ldr	r1, [r0, #0]
 8005f3a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8005f3e:	2200      	movs	r2, #0
 8005f40:	6102      	str	r2, [r0, #16]
 8005f42:	60c2      	str	r2, [r0, #12]
 8005f44:	bd70      	pop	{r4, r5, r6, pc}
 8005f46:	2221      	movs	r2, #33	; 0x21
 8005f48:	2104      	movs	r1, #4
 8005f4a:	f000 fd77 	bl	8006a3c <_calloc_r>
 8005f4e:	64e8      	str	r0, [r5, #76]	; 0x4c
 8005f50:	4602      	mov	r2, r0
 8005f52:	2800      	cmp	r0, #0
 8005f54:	d1ed      	bne.n	8005f32 <_Balloc+0xa>
 8005f56:	2000      	movs	r0, #0
 8005f58:	bd70      	pop	{r4, r5, r6, pc}
 8005f5a:	2101      	movs	r1, #1
 8005f5c:	fa01 f604 	lsl.w	r6, r1, r4
 8005f60:	1d72      	adds	r2, r6, #5
 8005f62:	4628      	mov	r0, r5
 8005f64:	0092      	lsls	r2, r2, #2
 8005f66:	f000 fd69 	bl	8006a3c <_calloc_r>
 8005f6a:	2800      	cmp	r0, #0
 8005f6c:	d0f3      	beq.n	8005f56 <_Balloc+0x2e>
 8005f6e:	6044      	str	r4, [r0, #4]
 8005f70:	6086      	str	r6, [r0, #8]
 8005f72:	e7e4      	b.n	8005f3e <_Balloc+0x16>

08005f74 <_Bfree>:
 8005f74:	b131      	cbz	r1, 8005f84 <_Bfree+0x10>
 8005f76:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8005f78:	684a      	ldr	r2, [r1, #4]
 8005f7a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8005f7e:	6008      	str	r0, [r1, #0]
 8005f80:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005f84:	4770      	bx	lr
 8005f86:	bf00      	nop

08005f88 <__multadd>:
 8005f88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f8c:	f8d1 8010 	ldr.w	r8, [r1, #16]
 8005f90:	b082      	sub	sp, #8
 8005f92:	4689      	mov	r9, r1
 8005f94:	4682      	mov	sl, r0
 8005f96:	f101 0514 	add.w	r5, r1, #20
 8005f9a:	2400      	movs	r4, #0
 8005f9c:	682f      	ldr	r7, [r5, #0]
 8005f9e:	b2be      	uxth	r6, r7
 8005fa0:	0c3f      	lsrs	r7, r7, #16
 8005fa2:	fb02 3606 	mla	r6, r2, r6, r3
 8005fa6:	fb02 f307 	mul.w	r3, r2, r7
 8005faa:	eb03 4316 	add.w	r3, r3, r6, lsr #16
 8005fae:	3401      	adds	r4, #1
 8005fb0:	b2b6      	uxth	r6, r6
 8005fb2:	eb06 4603 	add.w	r6, r6, r3, lsl #16
 8005fb6:	45a0      	cmp	r8, r4
 8005fb8:	f845 6b04 	str.w	r6, [r5], #4
 8005fbc:	ea4f 4313 	mov.w	r3, r3, lsr #16
 8005fc0:	dcec      	bgt.n	8005f9c <__multadd+0x14>
 8005fc2:	b153      	cbz	r3, 8005fda <__multadd+0x52>
 8005fc4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8005fc8:	4590      	cmp	r8, r2
 8005fca:	da0a      	bge.n	8005fe2 <__multadd+0x5a>
 8005fcc:	eb09 0188 	add.w	r1, r9, r8, lsl #2
 8005fd0:	f108 0201 	add.w	r2, r8, #1
 8005fd4:	614b      	str	r3, [r1, #20]
 8005fd6:	f8c9 2010 	str.w	r2, [r9, #16]
 8005fda:	4648      	mov	r0, r9
 8005fdc:	b002      	add	sp, #8
 8005fde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005fe2:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8005fe6:	9301      	str	r3, [sp, #4]
 8005fe8:	3101      	adds	r1, #1
 8005fea:	4650      	mov	r0, sl
 8005fec:	f7ff ff9c 	bl	8005f28 <_Balloc>
 8005ff0:	f8d9 2010 	ldr.w	r2, [r9, #16]
 8005ff4:	3202      	adds	r2, #2
 8005ff6:	f109 010c 	add.w	r1, r9, #12
 8005ffa:	4604      	mov	r4, r0
 8005ffc:	0092      	lsls	r2, r2, #2
 8005ffe:	300c      	adds	r0, #12
 8006000:	f7fa f926 	bl	8000250 <memcpy>
 8006004:	f8da 204c 	ldr.w	r2, [sl, #76]	; 0x4c
 8006008:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800600c:	9b01      	ldr	r3, [sp, #4]
 800600e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8006012:	f8c9 0000 	str.w	r0, [r9]
 8006016:	f842 9021 	str.w	r9, [r2, r1, lsl #2]
 800601a:	46a1      	mov	r9, r4
 800601c:	e7d6      	b.n	8005fcc <__multadd+0x44>
 800601e:	bf00      	nop

08006020 <__hi0bits>:
 8006020:	0c03      	lsrs	r3, r0, #16
 8006022:	bf06      	itte	eq
 8006024:	0400      	lsleq	r0, r0, #16
 8006026:	2310      	moveq	r3, #16
 8006028:	2300      	movne	r3, #0
 800602a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800602e:	bf04      	itt	eq
 8006030:	0200      	lsleq	r0, r0, #8
 8006032:	3308      	addeq	r3, #8
 8006034:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8006038:	bf04      	itt	eq
 800603a:	0100      	lsleq	r0, r0, #4
 800603c:	3304      	addeq	r3, #4
 800603e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8006042:	bf04      	itt	eq
 8006044:	0080      	lsleq	r0, r0, #2
 8006046:	3302      	addeq	r3, #2
 8006048:	2800      	cmp	r0, #0
 800604a:	db05      	blt.n	8006058 <__hi0bits+0x38>
 800604c:	0042      	lsls	r2, r0, #1
 800604e:	d401      	bmi.n	8006054 <__hi0bits+0x34>
 8006050:	2020      	movs	r0, #32
 8006052:	4770      	bx	lr
 8006054:	1c58      	adds	r0, r3, #1
 8006056:	4770      	bx	lr
 8006058:	4618      	mov	r0, r3
 800605a:	4770      	bx	lr

0800605c <__lo0bits>:
 800605c:	6803      	ldr	r3, [r0, #0]
 800605e:	f013 0207 	ands.w	r2, r3, #7
 8006062:	d00b      	beq.n	800607c <__lo0bits+0x20>
 8006064:	07d9      	lsls	r1, r3, #31
 8006066:	d424      	bmi.n	80060b2 <__lo0bits+0x56>
 8006068:	079a      	lsls	r2, r3, #30
 800606a:	bf4b      	itete	mi
 800606c:	085b      	lsrmi	r3, r3, #1
 800606e:	089b      	lsrpl	r3, r3, #2
 8006070:	6003      	strmi	r3, [r0, #0]
 8006072:	6003      	strpl	r3, [r0, #0]
 8006074:	bf4c      	ite	mi
 8006076:	2001      	movmi	r0, #1
 8006078:	2002      	movpl	r0, #2
 800607a:	4770      	bx	lr
 800607c:	b299      	uxth	r1, r3
 800607e:	b909      	cbnz	r1, 8006084 <__lo0bits+0x28>
 8006080:	0c1b      	lsrs	r3, r3, #16
 8006082:	2210      	movs	r2, #16
 8006084:	f013 0fff 	tst.w	r3, #255	; 0xff
 8006088:	bf04      	itt	eq
 800608a:	0a1b      	lsreq	r3, r3, #8
 800608c:	3208      	addeq	r2, #8
 800608e:	0719      	lsls	r1, r3, #28
 8006090:	bf04      	itt	eq
 8006092:	091b      	lsreq	r3, r3, #4
 8006094:	3204      	addeq	r2, #4
 8006096:	0799      	lsls	r1, r3, #30
 8006098:	bf04      	itt	eq
 800609a:	089b      	lsreq	r3, r3, #2
 800609c:	3202      	addeq	r2, #2
 800609e:	07d9      	lsls	r1, r3, #31
 80060a0:	d404      	bmi.n	80060ac <__lo0bits+0x50>
 80060a2:	085b      	lsrs	r3, r3, #1
 80060a4:	d101      	bne.n	80060aa <__lo0bits+0x4e>
 80060a6:	2020      	movs	r0, #32
 80060a8:	4770      	bx	lr
 80060aa:	3201      	adds	r2, #1
 80060ac:	6003      	str	r3, [r0, #0]
 80060ae:	4610      	mov	r0, r2
 80060b0:	4770      	bx	lr
 80060b2:	2000      	movs	r0, #0
 80060b4:	4770      	bx	lr
 80060b6:	bf00      	nop

080060b8 <__i2b>:
 80060b8:	b510      	push	{r4, lr}
 80060ba:	460c      	mov	r4, r1
 80060bc:	2101      	movs	r1, #1
 80060be:	f7ff ff33 	bl	8005f28 <_Balloc>
 80060c2:	2201      	movs	r2, #1
 80060c4:	6144      	str	r4, [r0, #20]
 80060c6:	6102      	str	r2, [r0, #16]
 80060c8:	bd10      	pop	{r4, pc}
 80060ca:	bf00      	nop

080060cc <__multiply>:
 80060cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060d0:	690c      	ldr	r4, [r1, #16]
 80060d2:	6917      	ldr	r7, [r2, #16]
 80060d4:	42bc      	cmp	r4, r7
 80060d6:	b085      	sub	sp, #20
 80060d8:	4688      	mov	r8, r1
 80060da:	4691      	mov	r9, r2
 80060dc:	da04      	bge.n	80060e8 <__multiply+0x1c>
 80060de:	4622      	mov	r2, r4
 80060e0:	46c8      	mov	r8, r9
 80060e2:	463c      	mov	r4, r7
 80060e4:	4689      	mov	r9, r1
 80060e6:	4617      	mov	r7, r2
 80060e8:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80060ec:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80060f0:	19e6      	adds	r6, r4, r7
 80060f2:	429e      	cmp	r6, r3
 80060f4:	bfc8      	it	gt
 80060f6:	3101      	addgt	r1, #1
 80060f8:	f7ff ff16 	bl	8005f28 <_Balloc>
 80060fc:	f100 0514 	add.w	r5, r0, #20
 8006100:	eb05 0c86 	add.w	ip, r5, r6, lsl #2
 8006104:	4565      	cmp	r5, ip
 8006106:	9001      	str	r0, [sp, #4]
 8006108:	bf3c      	itt	cc
 800610a:	462b      	movcc	r3, r5
 800610c:	2000      	movcc	r0, #0
 800610e:	d203      	bcs.n	8006118 <__multiply+0x4c>
 8006110:	f843 0b04 	str.w	r0, [r3], #4
 8006114:	459c      	cmp	ip, r3
 8006116:	d8fb      	bhi.n	8006110 <__multiply+0x44>
 8006118:	f109 0914 	add.w	r9, r9, #20
 800611c:	eb09 0387 	add.w	r3, r9, r7, lsl #2
 8006120:	4599      	cmp	r9, r3
 8006122:	f108 0814 	add.w	r8, r8, #20
 8006126:	bf38      	it	cc
 8006128:	f8cd c008 	strcc.w	ip, [sp, #8]
 800612c:	f8cd 8000 	str.w	r8, [sp]
 8006130:	eb08 0484 	add.w	r4, r8, r4, lsl #2
 8006134:	bf3e      	ittt	cc
 8006136:	464f      	movcc	r7, r9
 8006138:	469c      	movcc	ip, r3
 800613a:	9603      	strcc	r6, [sp, #12]
 800613c:	d25c      	bcs.n	80061f8 <__multiply+0x12c>
 800613e:	f857 3b04 	ldr.w	r3, [r7], #4
 8006142:	fa1f f883 	uxth.w	r8, r3
 8006146:	f1b8 0f00 	cmp.w	r8, #0
 800614a:	d024      	beq.n	8006196 <__multiply+0xca>
 800614c:	9a00      	ldr	r2, [sp, #0]
 800614e:	462b      	mov	r3, r5
 8006150:	f04f 0900 	mov.w	r9, #0
 8006154:	e000      	b.n	8006158 <__multiply+0x8c>
 8006156:	460b      	mov	r3, r1
 8006158:	f852 6b04 	ldr.w	r6, [r2], #4
 800615c:	6819      	ldr	r1, [r3, #0]
 800615e:	fa1f fb86 	uxth.w	fp, r6
 8006162:	fa1f fa81 	uxth.w	sl, r1
 8006166:	0c30      	lsrs	r0, r6, #16
 8006168:	0c09      	lsrs	r1, r1, #16
 800616a:	fb08 a60b 	mla	r6, r8, fp, sl
 800616e:	44b1      	add	r9, r6
 8006170:	fb08 1000 	mla	r0, r8, r0, r1
 8006174:	eb00 4019 	add.w	r0, r0, r9, lsr #16
 8006178:	4619      	mov	r1, r3
 800617a:	fa1f f989 	uxth.w	r9, r9
 800617e:	ea49 4600 	orr.w	r6, r9, r0, lsl #16
 8006182:	4294      	cmp	r4, r2
 8006184:	ea4f 4910 	mov.w	r9, r0, lsr #16
 8006188:	f841 6b04 	str.w	r6, [r1], #4
 800618c:	d8e3      	bhi.n	8006156 <__multiply+0x8a>
 800618e:	f8c3 9004 	str.w	r9, [r3, #4]
 8006192:	f857 3c04 	ldr.w	r3, [r7, #-4]
 8006196:	ea5f 4913 	movs.w	r9, r3, lsr #16
 800619a:	d026      	beq.n	80061ea <__multiply+0x11e>
 800619c:	f8d5 a000 	ldr.w	sl, [r5]
 80061a0:	9b00      	ldr	r3, [sp, #0]
 80061a2:	f04f 0b00 	mov.w	fp, #0
 80061a6:	4629      	mov	r1, r5
 80061a8:	465e      	mov	r6, fp
 80061aa:	4650      	mov	r0, sl
 80061ac:	e000      	b.n	80061b0 <__multiply+0xe4>
 80061ae:	4611      	mov	r1, r2
 80061b0:	f8b3 b000 	ldrh.w	fp, [r3]
 80061b4:	0c00      	lsrs	r0, r0, #16
 80061b6:	fb09 0b0b 	mla	fp, r9, fp, r0
 80061ba:	44b3      	add	fp, r6
 80061bc:	fa1f f08a 	uxth.w	r0, sl
 80061c0:	460a      	mov	r2, r1
 80061c2:	ea40 400b 	orr.w	r0, r0, fp, lsl #16
 80061c6:	f842 0b04 	str.w	r0, [r2], #4
 80061ca:	f853 ab04 	ldr.w	sl, [r3], #4
 80061ce:	6848      	ldr	r0, [r1, #4]
 80061d0:	ea4f 4a1a 	mov.w	sl, sl, lsr #16
 80061d4:	b286      	uxth	r6, r0
 80061d6:	fb09 6a0a 	mla	sl, r9, sl, r6
 80061da:	eb0a 4a1b 	add.w	sl, sl, fp, lsr #16
 80061de:	429c      	cmp	r4, r3
 80061e0:	ea4f 461a 	mov.w	r6, sl, lsr #16
 80061e4:	d8e3      	bhi.n	80061ae <__multiply+0xe2>
 80061e6:	f8c1 a004 	str.w	sl, [r1, #4]
 80061ea:	45bc      	cmp	ip, r7
 80061ec:	f105 0504 	add.w	r5, r5, #4
 80061f0:	d8a5      	bhi.n	800613e <__multiply+0x72>
 80061f2:	f8dd c008 	ldr.w	ip, [sp, #8]
 80061f6:	9e03      	ldr	r6, [sp, #12]
 80061f8:	2e00      	cmp	r6, #0
 80061fa:	dd0a      	ble.n	8006212 <__multiply+0x146>
 80061fc:	f85c 3c04 	ldr.w	r3, [ip, #-4]
 8006200:	f1ac 0c04 	sub.w	ip, ip, #4
 8006204:	b11b      	cbz	r3, 800620e <__multiply+0x142>
 8006206:	e004      	b.n	8006212 <__multiply+0x146>
 8006208:	f85c 3d04 	ldr.w	r3, [ip, #-4]!
 800620c:	b90b      	cbnz	r3, 8006212 <__multiply+0x146>
 800620e:	3e01      	subs	r6, #1
 8006210:	d1fa      	bne.n	8006208 <__multiply+0x13c>
 8006212:	9a01      	ldr	r2, [sp, #4]
 8006214:	4610      	mov	r0, r2
 8006216:	6116      	str	r6, [r2, #16]
 8006218:	b005      	add	sp, #20
 800621a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800621e:	bf00      	nop

08006220 <__pow5mult>:
 8006220:	f012 0303 	ands.w	r3, r2, #3
 8006224:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006228:	4614      	mov	r4, r2
 800622a:	4607      	mov	r7, r0
 800622c:	460e      	mov	r6, r1
 800622e:	d12c      	bne.n	800628a <__pow5mult+0x6a>
 8006230:	10a4      	asrs	r4, r4, #2
 8006232:	d01c      	beq.n	800626e <__pow5mult+0x4e>
 8006234:	6cbd      	ldr	r5, [r7, #72]	; 0x48
 8006236:	2d00      	cmp	r5, #0
 8006238:	d033      	beq.n	80062a2 <__pow5mult+0x82>
 800623a:	f04f 0800 	mov.w	r8, #0
 800623e:	e004      	b.n	800624a <__pow5mult+0x2a>
 8006240:	1064      	asrs	r4, r4, #1
 8006242:	d014      	beq.n	800626e <__pow5mult+0x4e>
 8006244:	6828      	ldr	r0, [r5, #0]
 8006246:	b1a8      	cbz	r0, 8006274 <__pow5mult+0x54>
 8006248:	4605      	mov	r5, r0
 800624a:	07e0      	lsls	r0, r4, #31
 800624c:	d5f8      	bpl.n	8006240 <__pow5mult+0x20>
 800624e:	4638      	mov	r0, r7
 8006250:	4631      	mov	r1, r6
 8006252:	462a      	mov	r2, r5
 8006254:	f7ff ff3a 	bl	80060cc <__multiply>
 8006258:	b1ae      	cbz	r6, 8006286 <__pow5mult+0x66>
 800625a:	6872      	ldr	r2, [r6, #4]
 800625c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800625e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006262:	1064      	asrs	r4, r4, #1
 8006264:	6031      	str	r1, [r6, #0]
 8006266:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
 800626a:	4606      	mov	r6, r0
 800626c:	d1ea      	bne.n	8006244 <__pow5mult+0x24>
 800626e:	4630      	mov	r0, r6
 8006270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006274:	4638      	mov	r0, r7
 8006276:	4629      	mov	r1, r5
 8006278:	462a      	mov	r2, r5
 800627a:	f7ff ff27 	bl	80060cc <__multiply>
 800627e:	6028      	str	r0, [r5, #0]
 8006280:	f8c0 8000 	str.w	r8, [r0]
 8006284:	e7e0      	b.n	8006248 <__pow5mult+0x28>
 8006286:	4606      	mov	r6, r0
 8006288:	e7da      	b.n	8006240 <__pow5mult+0x20>
 800628a:	f646 62b0 	movw	r2, #28336	; 0x6eb0
 800628e:	1e5d      	subs	r5, r3, #1
 8006290:	f6c0 0200 	movt	r2, #2048	; 0x800
 8006294:	2300      	movs	r3, #0
 8006296:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 800629a:	f7ff fe75 	bl	8005f88 <__multadd>
 800629e:	4606      	mov	r6, r0
 80062a0:	e7c6      	b.n	8006230 <__pow5mult+0x10>
 80062a2:	2101      	movs	r1, #1
 80062a4:	4638      	mov	r0, r7
 80062a6:	f7ff fe3f 	bl	8005f28 <_Balloc>
 80062aa:	f240 2171 	movw	r1, #625	; 0x271
 80062ae:	2201      	movs	r2, #1
 80062b0:	2300      	movs	r3, #0
 80062b2:	6141      	str	r1, [r0, #20]
 80062b4:	6102      	str	r2, [r0, #16]
 80062b6:	4605      	mov	r5, r0
 80062b8:	64b8      	str	r0, [r7, #72]	; 0x48
 80062ba:	6003      	str	r3, [r0, #0]
 80062bc:	e7bd      	b.n	800623a <__pow5mult+0x1a>
 80062be:	bf00      	nop

080062c0 <__lshift>:
 80062c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062c4:	4693      	mov	fp, r2
 80062c6:	690a      	ldr	r2, [r1, #16]
 80062c8:	688b      	ldr	r3, [r1, #8]
 80062ca:	ea4f 1a6b 	mov.w	sl, fp, asr #5
 80062ce:	eb0a 0902 	add.w	r9, sl, r2
 80062d2:	f109 0601 	add.w	r6, r9, #1
 80062d6:	429e      	cmp	r6, r3
 80062d8:	460f      	mov	r7, r1
 80062da:	4680      	mov	r8, r0
 80062dc:	6849      	ldr	r1, [r1, #4]
 80062de:	dd04      	ble.n	80062ea <__lshift+0x2a>
 80062e0:	005b      	lsls	r3, r3, #1
 80062e2:	429e      	cmp	r6, r3
 80062e4:	f101 0101 	add.w	r1, r1, #1
 80062e8:	dcfa      	bgt.n	80062e0 <__lshift+0x20>
 80062ea:	4640      	mov	r0, r8
 80062ec:	f7ff fe1c 	bl	8005f28 <_Balloc>
 80062f0:	f1ba 0f00 	cmp.w	sl, #0
 80062f4:	f100 0414 	add.w	r4, r0, #20
 80062f8:	dd09      	ble.n	800630e <__lshift+0x4e>
 80062fa:	2300      	movs	r3, #0
 80062fc:	461a      	mov	r2, r3
 80062fe:	4625      	mov	r5, r4
 8006300:	3301      	adds	r3, #1
 8006302:	4553      	cmp	r3, sl
 8006304:	f845 2b04 	str.w	r2, [r5], #4
 8006308:	d1fa      	bne.n	8006300 <__lshift+0x40>
 800630a:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800630e:	693a      	ldr	r2, [r7, #16]
 8006310:	f107 0314 	add.w	r3, r7, #20
 8006314:	f01b 0b1f 	ands.w	fp, fp, #31
 8006318:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
 800631c:	d021      	beq.n	8006362 <__lshift+0xa2>
 800631e:	f1cb 0a20 	rsb	sl, fp, #32
 8006322:	2200      	movs	r2, #0
 8006324:	e000      	b.n	8006328 <__lshift+0x68>
 8006326:	462c      	mov	r4, r5
 8006328:	6819      	ldr	r1, [r3, #0]
 800632a:	4625      	mov	r5, r4
 800632c:	fa01 f10b 	lsl.w	r1, r1, fp
 8006330:	430a      	orrs	r2, r1
 8006332:	f845 2b04 	str.w	r2, [r5], #4
 8006336:	f853 2b04 	ldr.w	r2, [r3], #4
 800633a:	4563      	cmp	r3, ip
 800633c:	fa22 f20a 	lsr.w	r2, r2, sl
 8006340:	d3f1      	bcc.n	8006326 <__lshift+0x66>
 8006342:	6062      	str	r2, [r4, #4]
 8006344:	b10a      	cbz	r2, 800634a <__lshift+0x8a>
 8006346:	f109 0602 	add.w	r6, r9, #2
 800634a:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
 800634e:	687a      	ldr	r2, [r7, #4]
 8006350:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006354:	3e01      	subs	r6, #1
 8006356:	6106      	str	r6, [r0, #16]
 8006358:	6039      	str	r1, [r7, #0]
 800635a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
 800635e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006362:	f853 2b04 	ldr.w	r2, [r3], #4
 8006366:	459c      	cmp	ip, r3
 8006368:	f844 2b04 	str.w	r2, [r4], #4
 800636c:	d9ed      	bls.n	800634a <__lshift+0x8a>
 800636e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006372:	459c      	cmp	ip, r3
 8006374:	f844 2b04 	str.w	r2, [r4], #4
 8006378:	d8f3      	bhi.n	8006362 <__lshift+0xa2>
 800637a:	e7e6      	b.n	800634a <__lshift+0x8a>

0800637c <__mcmp>:
 800637c:	6902      	ldr	r2, [r0, #16]
 800637e:	690b      	ldr	r3, [r1, #16]
 8006380:	1ad2      	subs	r2, r2, r3
 8006382:	b410      	push	{r4}
 8006384:	bf18      	it	ne
 8006386:	4610      	movne	r0, r2
 8006388:	d112      	bne.n	80063b0 <__mcmp+0x34>
 800638a:	009b      	lsls	r3, r3, #2
 800638c:	3014      	adds	r0, #20
 800638e:	3114      	adds	r1, #20
 8006390:	4419      	add	r1, r3
 8006392:	4403      	add	r3, r0
 8006394:	e001      	b.n	800639a <__mcmp+0x1e>
 8006396:	4298      	cmp	r0, r3
 8006398:	d20d      	bcs.n	80063b6 <__mcmp+0x3a>
 800639a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800639e:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80063a2:	42a2      	cmp	r2, r4
 80063a4:	d0f7      	beq.n	8006396 <__mcmp+0x1a>
 80063a6:	4294      	cmp	r4, r2
 80063a8:	bf94      	ite	ls
 80063aa:	2001      	movls	r0, #1
 80063ac:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 80063b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80063b4:	4770      	bx	lr
 80063b6:	2000      	movs	r0, #0
 80063b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80063bc:	4770      	bx	lr
 80063be:	bf00      	nop

080063c0 <__mdiff>:
 80063c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80063c4:	460c      	mov	r4, r1
 80063c6:	4606      	mov	r6, r0
 80063c8:	4611      	mov	r1, r2
 80063ca:	4620      	mov	r0, r4
 80063cc:	4615      	mov	r5, r2
 80063ce:	f7ff ffd5 	bl	800637c <__mcmp>
 80063d2:	1e07      	subs	r7, r0, #0
 80063d4:	d054      	beq.n	8006480 <__mdiff+0xc0>
 80063d6:	bfbc      	itt	lt
 80063d8:	4623      	movlt	r3, r4
 80063da:	462c      	movlt	r4, r5
 80063dc:	4630      	mov	r0, r6
 80063de:	bfb8      	it	lt
 80063e0:	461d      	movlt	r5, r3
 80063e2:	6861      	ldr	r1, [r4, #4]
 80063e4:	bfac      	ite	ge
 80063e6:	2700      	movge	r7, #0
 80063e8:	2701      	movlt	r7, #1
 80063ea:	f7ff fd9d 	bl	8005f28 <_Balloc>
 80063ee:	692a      	ldr	r2, [r5, #16]
 80063f0:	f8d4 c010 	ldr.w	ip, [r4, #16]
 80063f4:	60c7      	str	r7, [r0, #12]
 80063f6:	3414      	adds	r4, #20
 80063f8:	3514      	adds	r5, #20
 80063fa:	eb05 0982 	add.w	r9, r5, r2, lsl #2
 80063fe:	f100 0314 	add.w	r3, r0, #20
 8006402:	eb04 088c 	add.w	r8, r4, ip, lsl #2
 8006406:	2200      	movs	r2, #0
 8006408:	f854 6b04 	ldr.w	r6, [r4], #4
 800640c:	f855 7b04 	ldr.w	r7, [r5], #4
 8006410:	fa12 f286 	uxtah	r2, r2, r6
 8006414:	b2b9      	uxth	r1, r7
 8006416:	0c3f      	lsrs	r7, r7, #16
 8006418:	1a51      	subs	r1, r2, r1
 800641a:	ebc7 4216 	rsb	r2, r7, r6, lsr #16
 800641e:	eb02 4221 	add.w	r2, r2, r1, asr #16
 8006422:	b289      	uxth	r1, r1
 8006424:	ea41 4602 	orr.w	r6, r1, r2, lsl #16
 8006428:	45a9      	cmp	r9, r5
 800642a:	f843 6b04 	str.w	r6, [r3], #4
 800642e:	ea4f 4222 	mov.w	r2, r2, asr #16
 8006432:	4621      	mov	r1, r4
 8006434:	d8e8      	bhi.n	8006408 <__mdiff+0x48>
 8006436:	45a0      	cmp	r8, r4
 8006438:	461f      	mov	r7, r3
 800643a:	d915      	bls.n	8006468 <__mdiff+0xa8>
 800643c:	f851 5b04 	ldr.w	r5, [r1], #4
 8006440:	fa12 f285 	uxtah	r2, r2, r5
 8006444:	0c2d      	lsrs	r5, r5, #16
 8006446:	eb05 4522 	add.w	r5, r5, r2, asr #16
 800644a:	b292      	uxth	r2, r2
 800644c:	ea42 4605 	orr.w	r6, r2, r5, lsl #16
 8006450:	4588      	cmp	r8, r1
 8006452:	f843 6b04 	str.w	r6, [r3], #4
 8006456:	ea4f 4225 	mov.w	r2, r5, asr #16
 800645a:	d8ef      	bhi.n	800643c <__mdiff+0x7c>
 800645c:	43e3      	mvns	r3, r4
 800645e:	4443      	add	r3, r8
 8006460:	f023 0303 	bic.w	r3, r3, #3
 8006464:	3304      	adds	r3, #4
 8006466:	443b      	add	r3, r7
 8006468:	3b04      	subs	r3, #4
 800646a:	b92e      	cbnz	r6, 8006478 <__mdiff+0xb8>
 800646c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8006470:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 8006474:	2a00      	cmp	r2, #0
 8006476:	d0f9      	beq.n	800646c <__mdiff+0xac>
 8006478:	f8c0 c010 	str.w	ip, [r0, #16]
 800647c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006480:	4630      	mov	r0, r6
 8006482:	4639      	mov	r1, r7
 8006484:	f7ff fd50 	bl	8005f28 <_Balloc>
 8006488:	2301      	movs	r3, #1
 800648a:	6147      	str	r7, [r0, #20]
 800648c:	6103      	str	r3, [r0, #16]
 800648e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006492:	bf00      	nop

08006494 <__d2b>:
 8006494:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006498:	4689      	mov	r9, r1
 800649a:	b083      	sub	sp, #12
 800649c:	2101      	movs	r1, #1
 800649e:	ec55 4b10 	vmov	r4, r5, d0
 80064a2:	4690      	mov	r8, r2
 80064a4:	f7ff fd40 	bl	8005f28 <_Balloc>
 80064a8:	f3c5 570a 	ubfx	r7, r5, #20, #11
 80064ac:	4606      	mov	r6, r0
 80064ae:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80064b2:	b10f      	cbz	r7, 80064b8 <__d2b+0x24>
 80064b4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80064b8:	9301      	str	r3, [sp, #4]
 80064ba:	b314      	cbz	r4, 8006502 <__d2b+0x6e>
 80064bc:	a802      	add	r0, sp, #8
 80064be:	f840 4d08 	str.w	r4, [r0, #-8]!
 80064c2:	4668      	mov	r0, sp
 80064c4:	f7ff fdca 	bl	800605c <__lo0bits>
 80064c8:	2800      	cmp	r0, #0
 80064ca:	d131      	bne.n	8006530 <__d2b+0x9c>
 80064cc:	e89d 000c 	ldmia.w	sp, {r2, r3}
 80064d0:	6172      	str	r2, [r6, #20]
 80064d2:	2b00      	cmp	r3, #0
 80064d4:	bf0c      	ite	eq
 80064d6:	2401      	moveq	r4, #1
 80064d8:	2402      	movne	r4, #2
 80064da:	61b3      	str	r3, [r6, #24]
 80064dc:	6134      	str	r4, [r6, #16]
 80064de:	b9d7      	cbnz	r7, 8006516 <__d2b+0x82>
 80064e0:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80064e4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80064e8:	f8c9 0000 	str.w	r0, [r9]
 80064ec:	6918      	ldr	r0, [r3, #16]
 80064ee:	f7ff fd97 	bl	8006020 <__hi0bits>
 80064f2:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 80064f6:	f8c8 0000 	str.w	r0, [r8]
 80064fa:	4630      	mov	r0, r6
 80064fc:	b003      	add	sp, #12
 80064fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006502:	a801      	add	r0, sp, #4
 8006504:	f7ff fdaa 	bl	800605c <__lo0bits>
 8006508:	9b01      	ldr	r3, [sp, #4]
 800650a:	2401      	movs	r4, #1
 800650c:	3020      	adds	r0, #32
 800650e:	6173      	str	r3, [r6, #20]
 8006510:	6134      	str	r4, [r6, #16]
 8006512:	2f00      	cmp	r7, #0
 8006514:	d0e4      	beq.n	80064e0 <__d2b+0x4c>
 8006516:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
 800651a:	4407      	add	r7, r0
 800651c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8006520:	f8c9 7000 	str.w	r7, [r9]
 8006524:	f8c8 0000 	str.w	r0, [r8]
 8006528:	4630      	mov	r0, r6
 800652a:	b003      	add	sp, #12
 800652c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006530:	e89d 000c 	ldmia.w	sp, {r2, r3}
 8006534:	f1c0 0120 	rsb	r1, r0, #32
 8006538:	fa03 f101 	lsl.w	r1, r3, r1
 800653c:	430a      	orrs	r2, r1
 800653e:	40c3      	lsrs	r3, r0
 8006540:	9301      	str	r3, [sp, #4]
 8006542:	6172      	str	r2, [r6, #20]
 8006544:	e7c5      	b.n	80064d2 <__d2b+0x3e>
 8006546:	bf00      	nop

08006548 <_read_r>:
 8006548:	b570      	push	{r4, r5, r6, lr}
 800654a:	f640 14ac 	movw	r4, #2476	; 0x9ac
 800654e:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8006552:	4606      	mov	r6, r0
 8006554:	2500      	movs	r5, #0
 8006556:	4608      	mov	r0, r1
 8006558:	4611      	mov	r1, r2
 800655a:	461a      	mov	r2, r3
 800655c:	6025      	str	r5, [r4, #0]
 800655e:	f7fa ffa3 	bl	80014a8 <_read>
 8006562:	1c43      	adds	r3, r0, #1
 8006564:	d000      	beq.n	8006568 <_read_r+0x20>
 8006566:	bd70      	pop	{r4, r5, r6, pc}
 8006568:	6823      	ldr	r3, [r4, #0]
 800656a:	2b00      	cmp	r3, #0
 800656c:	d0fb      	beq.n	8006566 <_read_r+0x1e>
 800656e:	6033      	str	r3, [r6, #0]
 8006570:	bd70      	pop	{r4, r5, r6, pc}
 8006572:	bf00      	nop

08006574 <_realloc_r>:
 8006574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006578:	460c      	mov	r4, r1
 800657a:	b083      	sub	sp, #12
 800657c:	4690      	mov	r8, r2
 800657e:	4681      	mov	r9, r0
 8006580:	2900      	cmp	r1, #0
 8006582:	f000 8124 	beq.w	80067ce <_realloc_r+0x25a>
 8006586:	f7fc fab5 	bl	8002af4 <__malloc_lock>
 800658a:	f108 060b 	add.w	r6, r8, #11
 800658e:	2e16      	cmp	r6, #22
 8006590:	bf8c      	ite	hi
 8006592:	f026 0607 	bichi.w	r6, r6, #7
 8006596:	2210      	movls	r2, #16
 8006598:	f854 cc04 	ldr.w	ip, [r4, #-4]
 800659c:	bf8d      	iteet	hi
 800659e:	0ff3      	lsrhi	r3, r6, #31
 80065a0:	4616      	movls	r6, r2
 80065a2:	2300      	movls	r3, #0
 80065a4:	4632      	movhi	r2, r6
 80065a6:	4546      	cmp	r6, r8
 80065a8:	bf38      	it	cc
 80065aa:	f043 0301 	orrcc.w	r3, r3, #1
 80065ae:	f02c 0503 	bic.w	r5, ip, #3
 80065b2:	f1a4 0708 	sub.w	r7, r4, #8
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	f040 810f 	bne.w	80067da <_realloc_r+0x266>
 80065bc:	4295      	cmp	r5, r2
 80065be:	db15      	blt.n	80065ec <_realloc_r+0x78>
 80065c0:	4660      	mov	r0, ip
 80065c2:	1bab      	subs	r3, r5, r6
 80065c4:	2b0f      	cmp	r3, #15
 80065c6:	f000 0c01 	and.w	ip, r0, #1
 80065ca:	f200 80c6 	bhi.w	800675a <_realloc_r+0x1e6>
 80065ce:	ea4c 0305 	orr.w	r3, ip, r5
 80065d2:	443d      	add	r5, r7
 80065d4:	607b      	str	r3, [r7, #4]
 80065d6:	686b      	ldr	r3, [r5, #4]
 80065d8:	f043 0301 	orr.w	r3, r3, #1
 80065dc:	606b      	str	r3, [r5, #4]
 80065de:	4648      	mov	r0, r9
 80065e0:	f7fc fa8a 	bl	8002af8 <__malloc_unlock>
 80065e4:	4620      	mov	r0, r4
 80065e6:	b003      	add	sp, #12
 80065e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065ec:	f240 4a30 	movw	sl, #1072	; 0x430
 80065f0:	f2c2 0a00 	movt	sl, #8192	; 0x2000
 80065f4:	1979      	adds	r1, r7, r5
 80065f6:	f8da 0008 	ldr.w	r0, [sl, #8]
 80065fa:	4288      	cmp	r0, r1
 80065fc:	f000 80f2 	beq.w	80067e4 <_realloc_r+0x270>
 8006600:	f8d1 e004 	ldr.w	lr, [r1, #4]
 8006604:	f02e 0b01 	bic.w	fp, lr, #1
 8006608:	448b      	add	fp, r1
 800660a:	f8db b004 	ldr.w	fp, [fp, #4]
 800660e:	f01b 0f01 	tst.w	fp, #1
 8006612:	bf1c      	itt	ne
 8006614:	469e      	movne	lr, r3
 8006616:	4671      	movne	r1, lr
 8006618:	d054      	beq.n	80066c4 <_realloc_r+0x150>
 800661a:	f01c 0f01 	tst.w	ip, #1
 800661e:	f040 80ad 	bne.w	800677c <_realloc_r+0x208>
 8006622:	f854 3c08 	ldr.w	r3, [r4, #-8]
 8006626:	ebc3 0b07 	rsb	fp, r3, r7
 800662a:	f8db 3004 	ldr.w	r3, [fp, #4]
 800662e:	f023 0303 	bic.w	r3, r3, #3
 8006632:	442b      	add	r3, r5
 8006634:	2900      	cmp	r1, #0
 8006636:	d052      	beq.n	80066de <_realloc_r+0x16a>
 8006638:	4281      	cmp	r1, r0
 800663a:	f000 811f 	beq.w	800687c <_realloc_r+0x308>
 800663e:	449e      	add	lr, r3
 8006640:	4596      	cmp	lr, r2
 8006642:	db4c      	blt.n	80066de <_realloc_r+0x16a>
 8006644:	68cb      	ldr	r3, [r1, #12]
 8006646:	688a      	ldr	r2, [r1, #8]
 8006648:	465f      	mov	r7, fp
 800664a:	60d3      	str	r3, [r2, #12]
 800664c:	609a      	str	r2, [r3, #8]
 800664e:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8006652:	f8db 300c 	ldr.w	r3, [fp, #12]
 8006656:	1f2a      	subs	r2, r5, #4
 8006658:	2a24      	cmp	r2, #36	; 0x24
 800665a:	60cb      	str	r3, [r1, #12]
 800665c:	6099      	str	r1, [r3, #8]
 800665e:	f200 8165 	bhi.w	800692c <_realloc_r+0x3b8>
 8006662:	2a13      	cmp	r2, #19
 8006664:	bf98      	it	ls
 8006666:	463b      	movls	r3, r7
 8006668:	d920      	bls.n	80066ac <_realloc_r+0x138>
 800666a:	6823      	ldr	r3, [r4, #0]
 800666c:	f8cb 3008 	str.w	r3, [fp, #8]
 8006670:	6863      	ldr	r3, [r4, #4]
 8006672:	2a1b      	cmp	r2, #27
 8006674:	f8cb 300c 	str.w	r3, [fp, #12]
 8006678:	bf9c      	itt	ls
 800667a:	3408      	addls	r4, #8
 800667c:	f10b 0310 	addls.w	r3, fp, #16
 8006680:	d914      	bls.n	80066ac <_realloc_r+0x138>
 8006682:	68a3      	ldr	r3, [r4, #8]
 8006684:	f8cb 3010 	str.w	r3, [fp, #16]
 8006688:	68e3      	ldr	r3, [r4, #12]
 800668a:	2a24      	cmp	r2, #36	; 0x24
 800668c:	f8cb 3014 	str.w	r3, [fp, #20]
 8006690:	bf03      	ittte	eq
 8006692:	6923      	ldreq	r3, [r4, #16]
 8006694:	f8cb 3018 	streq.w	r3, [fp, #24]
 8006698:	6962      	ldreq	r2, [r4, #20]
 800669a:	3410      	addne	r4, #16
 800669c:	bf11      	iteee	ne
 800669e:	f10b 0318 	addne.w	r3, fp, #24
 80066a2:	f10b 0320 	addeq.w	r3, fp, #32
 80066a6:	f8cb 201c 	streq.w	r2, [fp, #28]
 80066aa:	3418      	addeq	r4, #24
 80066ac:	6822      	ldr	r2, [r4, #0]
 80066ae:	601a      	str	r2, [r3, #0]
 80066b0:	6862      	ldr	r2, [r4, #4]
 80066b2:	605a      	str	r2, [r3, #4]
 80066b4:	68a2      	ldr	r2, [r4, #8]
 80066b6:	609a      	str	r2, [r3, #8]
 80066b8:	463c      	mov	r4, r7
 80066ba:	4675      	mov	r5, lr
 80066bc:	f8db 0004 	ldr.w	r0, [fp, #4]
 80066c0:	465f      	mov	r7, fp
 80066c2:	e77e      	b.n	80065c2 <_realloc_r+0x4e>
 80066c4:	f02e 0e03 	bic.w	lr, lr, #3
 80066c8:	eb0e 0305 	add.w	r3, lr, r5
 80066cc:	4293      	cmp	r3, r2
 80066ce:	dba4      	blt.n	800661a <_realloc_r+0xa6>
 80066d0:	68ca      	ldr	r2, [r1, #12]
 80066d2:	6889      	ldr	r1, [r1, #8]
 80066d4:	4660      	mov	r0, ip
 80066d6:	60ca      	str	r2, [r1, #12]
 80066d8:	461d      	mov	r5, r3
 80066da:	6091      	str	r1, [r2, #8]
 80066dc:	e771      	b.n	80065c2 <_realloc_r+0x4e>
 80066de:	4293      	cmp	r3, r2
 80066e0:	db4c      	blt.n	800677c <_realloc_r+0x208>
 80066e2:	465f      	mov	r7, fp
 80066e4:	f8db 100c 	ldr.w	r1, [fp, #12]
 80066e8:	f857 0f08 	ldr.w	r0, [r7, #8]!
 80066ec:	1f2a      	subs	r2, r5, #4
 80066ee:	2a24      	cmp	r2, #36	; 0x24
 80066f0:	60c1      	str	r1, [r0, #12]
 80066f2:	6088      	str	r0, [r1, #8]
 80066f4:	f200 80b4 	bhi.w	8006860 <_realloc_r+0x2ec>
 80066f8:	2a13      	cmp	r2, #19
 80066fa:	bf98      	it	ls
 80066fc:	463a      	movls	r2, r7
 80066fe:	d920      	bls.n	8006742 <_realloc_r+0x1ce>
 8006700:	6821      	ldr	r1, [r4, #0]
 8006702:	f8cb 1008 	str.w	r1, [fp, #8]
 8006706:	6861      	ldr	r1, [r4, #4]
 8006708:	2a1b      	cmp	r2, #27
 800670a:	f8cb 100c 	str.w	r1, [fp, #12]
 800670e:	bf9c      	itt	ls
 8006710:	3408      	addls	r4, #8
 8006712:	f10b 0210 	addls.w	r2, fp, #16
 8006716:	d914      	bls.n	8006742 <_realloc_r+0x1ce>
 8006718:	68a1      	ldr	r1, [r4, #8]
 800671a:	f8cb 1010 	str.w	r1, [fp, #16]
 800671e:	68e1      	ldr	r1, [r4, #12]
 8006720:	2a24      	cmp	r2, #36	; 0x24
 8006722:	f8cb 1014 	str.w	r1, [fp, #20]
 8006726:	bf03      	ittte	eq
 8006728:	6922      	ldreq	r2, [r4, #16]
 800672a:	f8cb 2018 	streq.w	r2, [fp, #24]
 800672e:	6961      	ldreq	r1, [r4, #20]
 8006730:	3410      	addne	r4, #16
 8006732:	bf11      	iteee	ne
 8006734:	f10b 0218 	addne.w	r2, fp, #24
 8006738:	f10b 0220 	addeq.w	r2, fp, #32
 800673c:	f8cb 101c 	streq.w	r1, [fp, #28]
 8006740:	3418      	addeq	r4, #24
 8006742:	6821      	ldr	r1, [r4, #0]
 8006744:	6011      	str	r1, [r2, #0]
 8006746:	6861      	ldr	r1, [r4, #4]
 8006748:	6051      	str	r1, [r2, #4]
 800674a:	68a1      	ldr	r1, [r4, #8]
 800674c:	6091      	str	r1, [r2, #8]
 800674e:	463c      	mov	r4, r7
 8006750:	461d      	mov	r5, r3
 8006752:	f8db 0004 	ldr.w	r0, [fp, #4]
 8006756:	465f      	mov	r7, fp
 8006758:	e733      	b.n	80065c2 <_realloc_r+0x4e>
 800675a:	19b9      	adds	r1, r7, r6
 800675c:	f043 0201 	orr.w	r2, r3, #1
 8006760:	ea4c 0606 	orr.w	r6, ip, r6
 8006764:	440b      	add	r3, r1
 8006766:	607e      	str	r6, [r7, #4]
 8006768:	604a      	str	r2, [r1, #4]
 800676a:	685a      	ldr	r2, [r3, #4]
 800676c:	f042 0201 	orr.w	r2, r2, #1
 8006770:	3108      	adds	r1, #8
 8006772:	605a      	str	r2, [r3, #4]
 8006774:	4648      	mov	r0, r9
 8006776:	f7ff f833 	bl	80057e0 <_free_r>
 800677a:	e730      	b.n	80065de <_realloc_r+0x6a>
 800677c:	4641      	mov	r1, r8
 800677e:	4648      	mov	r0, r9
 8006780:	f7fb ff06 	bl	8002590 <_malloc_r>
 8006784:	4680      	mov	r8, r0
 8006786:	b1d8      	cbz	r0, 80067c0 <_realloc_r+0x24c>
 8006788:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800678c:	f023 0201 	bic.w	r2, r3, #1
 8006790:	443a      	add	r2, r7
 8006792:	f1a0 0108 	sub.w	r1, r0, #8
 8006796:	4291      	cmp	r1, r2
 8006798:	f000 80c1 	beq.w	800691e <_realloc_r+0x3aa>
 800679c:	1f2a      	subs	r2, r5, #4
 800679e:	2a24      	cmp	r2, #36	; 0x24
 80067a0:	d868      	bhi.n	8006874 <_realloc_r+0x300>
 80067a2:	2a13      	cmp	r2, #19
 80067a4:	bf9c      	itt	ls
 80067a6:	4603      	movls	r3, r0
 80067a8:	4622      	movls	r2, r4
 80067aa:	d83a      	bhi.n	8006822 <_realloc_r+0x2ae>
 80067ac:	6811      	ldr	r1, [r2, #0]
 80067ae:	6019      	str	r1, [r3, #0]
 80067b0:	6851      	ldr	r1, [r2, #4]
 80067b2:	6059      	str	r1, [r3, #4]
 80067b4:	6892      	ldr	r2, [r2, #8]
 80067b6:	609a      	str	r2, [r3, #8]
 80067b8:	4621      	mov	r1, r4
 80067ba:	4648      	mov	r0, r9
 80067bc:	f7ff f810 	bl	80057e0 <_free_r>
 80067c0:	4648      	mov	r0, r9
 80067c2:	f7fc f999 	bl	8002af8 <__malloc_unlock>
 80067c6:	4640      	mov	r0, r8
 80067c8:	b003      	add	sp, #12
 80067ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067ce:	4611      	mov	r1, r2
 80067d0:	b003      	add	sp, #12
 80067d2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067d6:	f7fb bedb 	b.w	8002590 <_malloc_r>
 80067da:	230c      	movs	r3, #12
 80067dc:	f8c9 3000 	str.w	r3, [r9]
 80067e0:	2000      	movs	r0, #0
 80067e2:	e700      	b.n	80065e6 <_realloc_r+0x72>
 80067e4:	6843      	ldr	r3, [r0, #4]
 80067e6:	f023 0e03 	bic.w	lr, r3, #3
 80067ea:	f106 0110 	add.w	r1, r6, #16
 80067ee:	eb0e 0305 	add.w	r3, lr, r5
 80067f2:	428b      	cmp	r3, r1
 80067f4:	bfb8      	it	lt
 80067f6:	4601      	movlt	r1, r0
 80067f8:	f6ff af0f 	blt.w	800661a <_realloc_r+0xa6>
 80067fc:	4437      	add	r7, r6
 80067fe:	1b9b      	subs	r3, r3, r6
 8006800:	f043 0301 	orr.w	r3, r3, #1
 8006804:	f8ca 7008 	str.w	r7, [sl, #8]
 8006808:	607b      	str	r3, [r7, #4]
 800680a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800680e:	f003 0301 	and.w	r3, r3, #1
 8006812:	431e      	orrs	r6, r3
 8006814:	4648      	mov	r0, r9
 8006816:	f844 6c04 	str.w	r6, [r4, #-4]
 800681a:	f7fc f96d 	bl	8002af8 <__malloc_unlock>
 800681e:	4620      	mov	r0, r4
 8006820:	e6e1      	b.n	80065e6 <_realloc_r+0x72>
 8006822:	6823      	ldr	r3, [r4, #0]
 8006824:	6003      	str	r3, [r0, #0]
 8006826:	6863      	ldr	r3, [r4, #4]
 8006828:	2a1b      	cmp	r2, #27
 800682a:	6043      	str	r3, [r0, #4]
 800682c:	bf9c      	itt	ls
 800682e:	f104 0208 	addls.w	r2, r4, #8
 8006832:	f100 0308 	addls.w	r3, r0, #8
 8006836:	d9b9      	bls.n	80067ac <_realloc_r+0x238>
 8006838:	68a3      	ldr	r3, [r4, #8]
 800683a:	6083      	str	r3, [r0, #8]
 800683c:	68e3      	ldr	r3, [r4, #12]
 800683e:	2a24      	cmp	r2, #36	; 0x24
 8006840:	60c3      	str	r3, [r0, #12]
 8006842:	bf03      	ittte	eq
 8006844:	6923      	ldreq	r3, [r4, #16]
 8006846:	6103      	streq	r3, [r0, #16]
 8006848:	6962      	ldreq	r2, [r4, #20]
 800684a:	f100 0310 	addne.w	r3, r0, #16
 800684e:	bf09      	itett	eq
 8006850:	6142      	streq	r2, [r0, #20]
 8006852:	f104 0210 	addne.w	r2, r4, #16
 8006856:	f100 0318 	addeq.w	r3, r0, #24
 800685a:	f104 0218 	addeq.w	r2, r4, #24
 800685e:	e7a5      	b.n	80067ac <_realloc_r+0x238>
 8006860:	4621      	mov	r1, r4
 8006862:	4638      	mov	r0, r7
 8006864:	461d      	mov	r5, r3
 8006866:	463c      	mov	r4, r7
 8006868:	f7ff fafc 	bl	8005e64 <memmove>
 800686c:	465f      	mov	r7, fp
 800686e:	f8db 0004 	ldr.w	r0, [fp, #4]
 8006872:	e6a6      	b.n	80065c2 <_realloc_r+0x4e>
 8006874:	4621      	mov	r1, r4
 8006876:	f7ff faf5 	bl	8005e64 <memmove>
 800687a:	e79d      	b.n	80067b8 <_realloc_r+0x244>
 800687c:	eb0e 0c03 	add.w	ip, lr, r3
 8006880:	f106 0110 	add.w	r1, r6, #16
 8006884:	458c      	cmp	ip, r1
 8006886:	f6ff af2a 	blt.w	80066de <_realloc_r+0x16a>
 800688a:	465f      	mov	r7, fp
 800688c:	f8db 300c 	ldr.w	r3, [fp, #12]
 8006890:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8006894:	1f2a      	subs	r2, r5, #4
 8006896:	2a24      	cmp	r2, #36	; 0x24
 8006898:	60cb      	str	r3, [r1, #12]
 800689a:	6099      	str	r1, [r3, #8]
 800689c:	d850      	bhi.n	8006940 <_realloc_r+0x3cc>
 800689e:	2a13      	cmp	r2, #19
 80068a0:	bf98      	it	ls
 80068a2:	463b      	movls	r3, r7
 80068a4:	d920      	bls.n	80068e8 <_realloc_r+0x374>
 80068a6:	6823      	ldr	r3, [r4, #0]
 80068a8:	f8cb 3008 	str.w	r3, [fp, #8]
 80068ac:	6863      	ldr	r3, [r4, #4]
 80068ae:	2a1b      	cmp	r2, #27
 80068b0:	f8cb 300c 	str.w	r3, [fp, #12]
 80068b4:	bf9c      	itt	ls
 80068b6:	3408      	addls	r4, #8
 80068b8:	f10b 0310 	addls.w	r3, fp, #16
 80068bc:	d914      	bls.n	80068e8 <_realloc_r+0x374>
 80068be:	68a3      	ldr	r3, [r4, #8]
 80068c0:	f8cb 3010 	str.w	r3, [fp, #16]
 80068c4:	68e3      	ldr	r3, [r4, #12]
 80068c6:	2a24      	cmp	r2, #36	; 0x24
 80068c8:	f8cb 3014 	str.w	r3, [fp, #20]
 80068cc:	bf03      	ittte	eq
 80068ce:	6923      	ldreq	r3, [r4, #16]
 80068d0:	f8cb 3018 	streq.w	r3, [fp, #24]
 80068d4:	6962      	ldreq	r2, [r4, #20]
 80068d6:	3410      	addne	r4, #16
 80068d8:	bf11      	iteee	ne
 80068da:	f10b 0318 	addne.w	r3, fp, #24
 80068de:	f10b 0320 	addeq.w	r3, fp, #32
 80068e2:	f8cb 201c 	streq.w	r2, [fp, #28]
 80068e6:	3418      	addeq	r4, #24
 80068e8:	6822      	ldr	r2, [r4, #0]
 80068ea:	601a      	str	r2, [r3, #0]
 80068ec:	6862      	ldr	r2, [r4, #4]
 80068ee:	605a      	str	r2, [r3, #4]
 80068f0:	68a2      	ldr	r2, [r4, #8]
 80068f2:	609a      	str	r2, [r3, #8]
 80068f4:	eb0b 0306 	add.w	r3, fp, r6
 80068f8:	ebc6 020c 	rsb	r2, r6, ip
 80068fc:	f042 0201 	orr.w	r2, r2, #1
 8006900:	f8ca 3008 	str.w	r3, [sl, #8]
 8006904:	605a      	str	r2, [r3, #4]
 8006906:	f8db 3004 	ldr.w	r3, [fp, #4]
 800690a:	f003 0301 	and.w	r3, r3, #1
 800690e:	431e      	orrs	r6, r3
 8006910:	4648      	mov	r0, r9
 8006912:	f8cb 6004 	str.w	r6, [fp, #4]
 8006916:	f7fc f8ef 	bl	8002af8 <__malloc_unlock>
 800691a:	4638      	mov	r0, r7
 800691c:	e663      	b.n	80065e6 <_realloc_r+0x72>
 800691e:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8006922:	f022 0203 	bic.w	r2, r2, #3
 8006926:	4415      	add	r5, r2
 8006928:	4618      	mov	r0, r3
 800692a:	e64a      	b.n	80065c2 <_realloc_r+0x4e>
 800692c:	4621      	mov	r1, r4
 800692e:	4638      	mov	r0, r7
 8006930:	4675      	mov	r5, lr
 8006932:	463c      	mov	r4, r7
 8006934:	f7ff fa96 	bl	8005e64 <memmove>
 8006938:	465f      	mov	r7, fp
 800693a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800693e:	e640      	b.n	80065c2 <_realloc_r+0x4e>
 8006940:	4621      	mov	r1, r4
 8006942:	4638      	mov	r0, r7
 8006944:	f8cd c004 	str.w	ip, [sp, #4]
 8006948:	f7ff fa8c 	bl	8005e64 <memmove>
 800694c:	f8dd c004 	ldr.w	ip, [sp, #4]
 8006950:	e7d0      	b.n	80068f4 <_realloc_r+0x380>
 8006952:	bf00      	nop

08006954 <__fpclassifyd>:
 8006954:	ec53 2b10 	vmov	r2, r3, d0
 8006958:	ea52 0103 	orrs.w	r1, r2, r3
 800695c:	d101      	bne.n	8006962 <__fpclassifyd+0xe>
 800695e:	2002      	movs	r0, #2
 8006960:	4770      	bx	lr
 8006962:	f1d2 0101 	rsbs	r1, r2, #1
 8006966:	bf38      	it	cc
 8006968:	2100      	movcc	r1, #0
 800696a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800696e:	bf08      	it	eq
 8006970:	2a00      	cmpeq	r2, #0
 8006972:	d0f4      	beq.n	800695e <__fpclassifyd+0xa>
 8006974:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8006978:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800697c:	f5a2 1080 	sub.w	r0, r2, #1048576	; 0x100000
 8006980:	f6c7 73df 	movt	r3, #32735	; 0x7fdf
 8006984:	4298      	cmp	r0, r3
 8006986:	d801      	bhi.n	800698c <__fpclassifyd+0x38>
 8006988:	2004      	movs	r0, #4
 800698a:	4770      	bx	lr
 800698c:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 8006990:	d201      	bcs.n	8006996 <__fpclassifyd+0x42>
 8006992:	2003      	movs	r0, #3
 8006994:	4770      	bx	lr
 8006996:	2000      	movs	r0, #0
 8006998:	f6c7 70f0 	movt	r0, #32752	; 0x7ff0
 800699c:	4282      	cmp	r2, r0
 800699e:	bf14      	ite	ne
 80069a0:	2000      	movne	r0, #0
 80069a2:	f001 0001 	andeq.w	r0, r1, #1
 80069a6:	4770      	bx	lr

080069a8 <__sprint_r.part.0>:
 80069a8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 80069aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80069ae:	049c      	lsls	r4, r3, #18
 80069b0:	460e      	mov	r6, r1
 80069b2:	4680      	mov	r8, r0
 80069b4:	4691      	mov	r9, r2
 80069b6:	d52b      	bpl.n	8006a10 <__sprint_r.part.0+0x68>
 80069b8:	6893      	ldr	r3, [r2, #8]
 80069ba:	6812      	ldr	r2, [r2, #0]
 80069bc:	f102 0a08 	add.w	sl, r2, #8
 80069c0:	b323      	cbz	r3, 8006a0c <__sprint_r.part.0+0x64>
 80069c2:	e91a 00a0 	ldmdb	sl, {r5, r7}
 80069c6:	08bf      	lsrs	r7, r7, #2
 80069c8:	bf1c      	itt	ne
 80069ca:	3d04      	subne	r5, #4
 80069cc:	2400      	movne	r4, #0
 80069ce:	d102      	bne.n	80069d6 <__sprint_r.part.0+0x2e>
 80069d0:	e014      	b.n	80069fc <__sprint_r.part.0+0x54>
 80069d2:	42a7      	cmp	r7, r4
 80069d4:	d010      	beq.n	80069f8 <__sprint_r.part.0+0x50>
 80069d6:	4640      	mov	r0, r8
 80069d8:	f855 1f04 	ldr.w	r1, [r5, #4]!
 80069dc:	4632      	mov	r2, r6
 80069de:	f000 f85d 	bl	8006a9c <_fputwc_r>
 80069e2:	1c43      	adds	r3, r0, #1
 80069e4:	f104 0401 	add.w	r4, r4, #1
 80069e8:	d1f3      	bne.n	80069d2 <__sprint_r.part.0+0x2a>
 80069ea:	2300      	movs	r3, #0
 80069ec:	f8c9 3008 	str.w	r3, [r9, #8]
 80069f0:	f8c9 3004 	str.w	r3, [r9, #4]
 80069f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80069f8:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80069fc:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
 8006a00:	f8c9 3008 	str.w	r3, [r9, #8]
 8006a04:	f10a 0a08 	add.w	sl, sl, #8
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d1da      	bne.n	80069c2 <__sprint_r.part.0+0x1a>
 8006a0c:	2000      	movs	r0, #0
 8006a0e:	e7ec      	b.n	80069ea <__sprint_r.part.0+0x42>
 8006a10:	f7fe ffb4 	bl	800597c <__sfvwrite_r>
 8006a14:	2300      	movs	r3, #0
 8006a16:	f8c9 3008 	str.w	r3, [r9, #8]
 8006a1a:	f8c9 3004 	str.w	r3, [r9, #4]
 8006a1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006a22:	bf00      	nop

08006a24 <__sprint_r>:
 8006a24:	6893      	ldr	r3, [r2, #8]
 8006a26:	b410      	push	{r4}
 8006a28:	b11b      	cbz	r3, 8006a32 <__sprint_r+0xe>
 8006a2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006a2e:	f7ff bfbb 	b.w	80069a8 <__sprint_r.part.0>
 8006a32:	4618      	mov	r0, r3
 8006a34:	6053      	str	r3, [r2, #4]
 8006a36:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006a3a:	4770      	bx	lr

08006a3c <_calloc_r>:
 8006a3c:	b510      	push	{r4, lr}
 8006a3e:	fb02 f101 	mul.w	r1, r2, r1
 8006a42:	f7fb fda5 	bl	8002590 <_malloc_r>
 8006a46:	4604      	mov	r4, r0
 8006a48:	b170      	cbz	r0, 8006a68 <_calloc_r+0x2c>
 8006a4a:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8006a4e:	f022 0203 	bic.w	r2, r2, #3
 8006a52:	3a04      	subs	r2, #4
 8006a54:	2a24      	cmp	r2, #36	; 0x24
 8006a56:	d81c      	bhi.n	8006a92 <_calloc_r+0x56>
 8006a58:	2a13      	cmp	r2, #19
 8006a5a:	bf98      	it	ls
 8006a5c:	4603      	movls	r3, r0
 8006a5e:	d805      	bhi.n	8006a6c <_calloc_r+0x30>
 8006a60:	2200      	movs	r2, #0
 8006a62:	601a      	str	r2, [r3, #0]
 8006a64:	605a      	str	r2, [r3, #4]
 8006a66:	609a      	str	r2, [r3, #8]
 8006a68:	4620      	mov	r0, r4
 8006a6a:	bd10      	pop	{r4, pc}
 8006a6c:	2300      	movs	r3, #0
 8006a6e:	2a1b      	cmp	r2, #27
 8006a70:	6003      	str	r3, [r0, #0]
 8006a72:	6043      	str	r3, [r0, #4]
 8006a74:	bf98      	it	ls
 8006a76:	f100 0308 	addls.w	r3, r0, #8
 8006a7a:	d9f1      	bls.n	8006a60 <_calloc_r+0x24>
 8006a7c:	2a24      	cmp	r2, #36	; 0x24
 8006a7e:	6083      	str	r3, [r0, #8]
 8006a80:	60c3      	str	r3, [r0, #12]
 8006a82:	bf05      	ittet	eq
 8006a84:	6103      	streq	r3, [r0, #16]
 8006a86:	6143      	streq	r3, [r0, #20]
 8006a88:	f100 0310 	addne.w	r3, r0, #16
 8006a8c:	f100 0318 	addeq.w	r3, r0, #24
 8006a90:	e7e6      	b.n	8006a60 <_calloc_r+0x24>
 8006a92:	2100      	movs	r1, #0
 8006a94:	f7fa fc1a 	bl	80012cc <memset>
 8006a98:	4620      	mov	r0, r4
 8006a9a:	bd10      	pop	{r4, pc}

08006a9c <_fputwc_r>:
 8006a9c:	8993      	ldrh	r3, [r2, #12]
 8006a9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006aa2:	460f      	mov	r7, r1
 8006aa4:	0499      	lsls	r1, r3, #18
 8006aa6:	4614      	mov	r4, r2
 8006aa8:	bf5f      	itttt	pl
 8006aaa:	6e52      	ldrpl	r2, [r2, #100]	; 0x64
 8006aac:	f443 5300 	orrpl.w	r3, r3, #8192	; 0x2000
 8006ab0:	f442 5200 	orrpl.w	r2, r2, #8192	; 0x2000
 8006ab4:	81a3      	strhpl	r3, [r4, #12]
 8006ab6:	bf58      	it	pl
 8006ab8:	6662      	strpl	r2, [r4, #100]	; 0x64
 8006aba:	b082      	sub	sp, #8
 8006abc:	4680      	mov	r8, r0
 8006abe:	f7ff f8ed 	bl	8005c9c <__locale_mb_cur_max>
 8006ac2:	2801      	cmp	r0, #1
 8006ac4:	d03d      	beq.n	8006b42 <_fputwc_r+0xa6>
 8006ac6:	463a      	mov	r2, r7
 8006ac8:	4640      	mov	r0, r8
 8006aca:	a901      	add	r1, sp, #4
 8006acc:	f104 035c 	add.w	r3, r4, #92	; 0x5c
 8006ad0:	f000 f8be 	bl	8006c50 <_wcrtomb_r>
 8006ad4:	1c42      	adds	r2, r0, #1
 8006ad6:	4606      	mov	r6, r0
 8006ad8:	d02c      	beq.n	8006b34 <_fputwc_r+0x98>
 8006ada:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8006ade:	2800      	cmp	r0, #0
 8006ae0:	d037      	beq.n	8006b52 <_fputwc_r+0xb6>
 8006ae2:	2500      	movs	r5, #0
 8006ae4:	e009      	b.n	8006afa <_fputwc_r+0x5e>
 8006ae6:	6823      	ldr	r3, [r4, #0]
 8006ae8:	7019      	strb	r1, [r3, #0]
 8006aea:	6823      	ldr	r3, [r4, #0]
 8006aec:	3301      	adds	r3, #1
 8006aee:	6023      	str	r3, [r4, #0]
 8006af0:	3501      	adds	r5, #1
 8006af2:	42b5      	cmp	r5, r6
 8006af4:	d22d      	bcs.n	8006b52 <_fputwc_r+0xb6>
 8006af6:	ab01      	add	r3, sp, #4
 8006af8:	5ce9      	ldrb	r1, [r5, r3]
 8006afa:	68a3      	ldr	r3, [r4, #8]
 8006afc:	3b01      	subs	r3, #1
 8006afe:	2b00      	cmp	r3, #0
 8006b00:	60a3      	str	r3, [r4, #8]
 8006b02:	daf0      	bge.n	8006ae6 <_fputwc_r+0x4a>
 8006b04:	69a2      	ldr	r2, [r4, #24]
 8006b06:	4293      	cmp	r3, r2
 8006b08:	db05      	blt.n	8006b16 <_fputwc_r+0x7a>
 8006b0a:	6823      	ldr	r3, [r4, #0]
 8006b0c:	7019      	strb	r1, [r3, #0]
 8006b0e:	6823      	ldr	r3, [r4, #0]
 8006b10:	7819      	ldrb	r1, [r3, #0]
 8006b12:	290a      	cmp	r1, #10
 8006b14:	d1ea      	bne.n	8006aec <_fputwc_r+0x50>
 8006b16:	4640      	mov	r0, r8
 8006b18:	4622      	mov	r2, r4
 8006b1a:	f000 f847 	bl	8006bac <__swbuf_r>
 8006b1e:	f1b0 33ff 	subs.w	r3, r0, #4294967295	; 0xffffffff
 8006b22:	4258      	negs	r0, r3
 8006b24:	4158      	adcs	r0, r3
 8006b26:	2800      	cmp	r0, #0
 8006b28:	d0e2      	beq.n	8006af0 <_fputwc_r+0x54>
 8006b2a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006b2e:	b002      	add	sp, #8
 8006b30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b34:	89a3      	ldrh	r3, [r4, #12]
 8006b36:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006b3a:	81a3      	strh	r3, [r4, #12]
 8006b3c:	b002      	add	sp, #8
 8006b3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b42:	1e7b      	subs	r3, r7, #1
 8006b44:	2bfe      	cmp	r3, #254	; 0xfe
 8006b46:	d8be      	bhi.n	8006ac6 <_fputwc_r+0x2a>
 8006b48:	b2f9      	uxtb	r1, r7
 8006b4a:	4606      	mov	r6, r0
 8006b4c:	f88d 1004 	strb.w	r1, [sp, #4]
 8006b50:	e7c7      	b.n	8006ae2 <_fputwc_r+0x46>
 8006b52:	4638      	mov	r0, r7
 8006b54:	b002      	add	sp, #8
 8006b56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b5a:	bf00      	nop

08006b5c <_fstat_r>:
 8006b5c:	b538      	push	{r3, r4, r5, lr}
 8006b5e:	f640 14ac 	movw	r4, #2476	; 0x9ac
 8006b62:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8006b66:	2300      	movs	r3, #0
 8006b68:	4605      	mov	r5, r0
 8006b6a:	4608      	mov	r0, r1
 8006b6c:	4611      	mov	r1, r2
 8006b6e:	6023      	str	r3, [r4, #0]
 8006b70:	f7fa fdc0 	bl	80016f4 <_fstat>
 8006b74:	1c43      	adds	r3, r0, #1
 8006b76:	d000      	beq.n	8006b7a <_fstat_r+0x1e>
 8006b78:	bd38      	pop	{r3, r4, r5, pc}
 8006b7a:	6823      	ldr	r3, [r4, #0]
 8006b7c:	2b00      	cmp	r3, #0
 8006b7e:	d0fb      	beq.n	8006b78 <_fstat_r+0x1c>
 8006b80:	602b      	str	r3, [r5, #0]
 8006b82:	bd38      	pop	{r3, r4, r5, pc}

08006b84 <_isatty_r>:
 8006b84:	b538      	push	{r3, r4, r5, lr}
 8006b86:	f640 14ac 	movw	r4, #2476	; 0x9ac
 8006b8a:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8006b8e:	2300      	movs	r3, #0
 8006b90:	4605      	mov	r5, r0
 8006b92:	4608      	mov	r0, r1
 8006b94:	6023      	str	r3, [r4, #0]
 8006b96:	f7fa fdbb 	bl	8001710 <_isatty>
 8006b9a:	1c43      	adds	r3, r0, #1
 8006b9c:	d000      	beq.n	8006ba0 <_isatty_r+0x1c>
 8006b9e:	bd38      	pop	{r3, r4, r5, pc}
 8006ba0:	6823      	ldr	r3, [r4, #0]
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	d0fb      	beq.n	8006b9e <_isatty_r+0x1a>
 8006ba6:	602b      	str	r3, [r5, #0]
 8006ba8:	bd38      	pop	{r3, r4, r5, pc}
 8006baa:	bf00      	nop

08006bac <__swbuf_r>:
 8006bac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006bae:	460d      	mov	r5, r1
 8006bb0:	4614      	mov	r4, r2
 8006bb2:	4607      	mov	r7, r0
 8006bb4:	b110      	cbz	r0, 8006bbc <__swbuf_r+0x10>
 8006bb6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8006bb8:	2b00      	cmp	r3, #0
 8006bba:	d046      	beq.n	8006c4a <__swbuf_r+0x9e>
 8006bbc:	89a2      	ldrh	r2, [r4, #12]
 8006bbe:	69a0      	ldr	r0, [r4, #24]
 8006bc0:	b293      	uxth	r3, r2
 8006bc2:	60a0      	str	r0, [r4, #8]
 8006bc4:	0718      	lsls	r0, r3, #28
 8006bc6:	d52d      	bpl.n	8006c24 <__swbuf_r+0x78>
 8006bc8:	6926      	ldr	r6, [r4, #16]
 8006bca:	2e00      	cmp	r6, #0
 8006bcc:	d02a      	beq.n	8006c24 <__swbuf_r+0x78>
 8006bce:	0499      	lsls	r1, r3, #18
 8006bd0:	bf5f      	itttt	pl
 8006bd2:	6e63      	ldrpl	r3, [r4, #100]	; 0x64
 8006bd4:	f423 5300 	bicpl.w	r3, r3, #8192	; 0x2000
 8006bd8:	f442 5200 	orrpl.w	r2, r2, #8192	; 0x2000
 8006bdc:	6663      	strpl	r3, [r4, #100]	; 0x64
 8006bde:	6823      	ldr	r3, [r4, #0]
 8006be0:	bf58      	it	pl
 8006be2:	81a2      	strhpl	r2, [r4, #12]
 8006be4:	6962      	ldr	r2, [r4, #20]
 8006be6:	1b9e      	subs	r6, r3, r6
 8006be8:	4296      	cmp	r6, r2
 8006bea:	b2ed      	uxtb	r5, r5
 8006bec:	bfb8      	it	lt
 8006bee:	3601      	addlt	r6, #1
 8006bf0:	da22      	bge.n	8006c38 <__swbuf_r+0x8c>
 8006bf2:	68a2      	ldr	r2, [r4, #8]
 8006bf4:	1c59      	adds	r1, r3, #1
 8006bf6:	3a01      	subs	r2, #1
 8006bf8:	60a2      	str	r2, [r4, #8]
 8006bfa:	6021      	str	r1, [r4, #0]
 8006bfc:	701d      	strb	r5, [r3, #0]
 8006bfe:	6963      	ldr	r3, [r4, #20]
 8006c00:	42b3      	cmp	r3, r6
 8006c02:	d006      	beq.n	8006c12 <__swbuf_r+0x66>
 8006c04:	89a3      	ldrh	r3, [r4, #12]
 8006c06:	07db      	lsls	r3, r3, #31
 8006c08:	d501      	bpl.n	8006c0e <__swbuf_r+0x62>
 8006c0a:	2d0a      	cmp	r5, #10
 8006c0c:	d001      	beq.n	8006c12 <__swbuf_r+0x66>
 8006c0e:	4628      	mov	r0, r5
 8006c10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006c12:	4638      	mov	r0, r7
 8006c14:	4621      	mov	r1, r4
 8006c16:	f7fe fd7b 	bl	8005710 <_fflush_r>
 8006c1a:	2800      	cmp	r0, #0
 8006c1c:	d0f7      	beq.n	8006c0e <__swbuf_r+0x62>
 8006c1e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006c22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006c24:	4638      	mov	r0, r7
 8006c26:	4621      	mov	r1, r4
 8006c28:	f7fd fbc2 	bl	80043b0 <__swsetup_r>
 8006c2c:	2800      	cmp	r0, #0
 8006c2e:	d1f6      	bne.n	8006c1e <__swbuf_r+0x72>
 8006c30:	89a2      	ldrh	r2, [r4, #12]
 8006c32:	6926      	ldr	r6, [r4, #16]
 8006c34:	b293      	uxth	r3, r2
 8006c36:	e7ca      	b.n	8006bce <__swbuf_r+0x22>
 8006c38:	4638      	mov	r0, r7
 8006c3a:	4621      	mov	r1, r4
 8006c3c:	f7fe fd68 	bl	8005710 <_fflush_r>
 8006c40:	2800      	cmp	r0, #0
 8006c42:	d1ec      	bne.n	8006c1e <__swbuf_r+0x72>
 8006c44:	6823      	ldr	r3, [r4, #0]
 8006c46:	2601      	movs	r6, #1
 8006c48:	e7d3      	b.n	8006bf2 <__swbuf_r+0x46>
 8006c4a:	f7fb fbfb 	bl	8002444 <__sinit>
 8006c4e:	e7b5      	b.n	8006bbc <__swbuf_r+0x10>

08006c50 <_wcrtomb_r>:
 8006c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006c54:	460d      	mov	r5, r1
 8006c56:	b086      	sub	sp, #24
 8006c58:	4606      	mov	r6, r0
 8006c5a:	4690      	mov	r8, r2
 8006c5c:	461f      	mov	r7, r3
 8006c5e:	b1a9      	cbz	r1, 8006c8c <_wcrtomb_r+0x3c>
 8006c60:	f640 049c 	movw	r4, #2204	; 0x89c
 8006c64:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8006c68:	6824      	ldr	r4, [r4, #0]
 8006c6a:	f7ff f811 	bl	8005c90 <__locale_charset>
 8006c6e:	9700      	str	r7, [sp, #0]
 8006c70:	4603      	mov	r3, r0
 8006c72:	4629      	mov	r1, r5
 8006c74:	4642      	mov	r2, r8
 8006c76:	4630      	mov	r0, r6
 8006c78:	47a0      	blx	r4
 8006c7a:	1c43      	adds	r3, r0, #1
 8006c7c:	bf01      	itttt	eq
 8006c7e:	2200      	moveq	r2, #0
 8006c80:	238a      	moveq	r3, #138	; 0x8a
 8006c82:	603a      	streq	r2, [r7, #0]
 8006c84:	6033      	streq	r3, [r6, #0]
 8006c86:	b006      	add	sp, #24
 8006c88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c8c:	f640 039c 	movw	r3, #2204	; 0x89c
 8006c90:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8006c94:	681c      	ldr	r4, [r3, #0]
 8006c96:	f7fe fffb 	bl	8005c90 <__locale_charset>
 8006c9a:	9700      	str	r7, [sp, #0]
 8006c9c:	4603      	mov	r3, r0
 8006c9e:	462a      	mov	r2, r5
 8006ca0:	4630      	mov	r0, r6
 8006ca2:	a903      	add	r1, sp, #12
 8006ca4:	47a0      	blx	r4
 8006ca6:	e7e8      	b.n	8006c7a <_wcrtomb_r+0x2a>

08006ca8 <__ascii_wctomb>:
 8006ca8:	b149      	cbz	r1, 8006cbe <__ascii_wctomb+0x16>
 8006caa:	2aff      	cmp	r2, #255	; 0xff
 8006cac:	bf85      	ittet	hi
 8006cae:	238a      	movhi	r3, #138	; 0x8a
 8006cb0:	6003      	strhi	r3, [r0, #0]
 8006cb2:	700a      	strbls	r2, [r1, #0]
 8006cb4:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8006cb8:	bf98      	it	ls
 8006cba:	2001      	movls	r0, #1
 8006cbc:	4770      	bx	lr
 8006cbe:	4608      	mov	r0, r1
 8006cc0:	4770      	bx	lr
 8006cc2:	bf00      	nop

08006cc4 <_init>:
 8006cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cc6:	bf00      	nop
 8006cc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cca:	bc08      	pop	{r3}
 8006ccc:	469e      	mov	lr, r3
 8006cce:	4770      	bx	lr

08006cd0 <_fini>:
 8006cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cd2:	bf00      	nop
 8006cd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cd6:	bc08      	pop	{r3}
 8006cd8:	469e      	mov	lr, r3
 8006cda:	4770      	bx	lr
